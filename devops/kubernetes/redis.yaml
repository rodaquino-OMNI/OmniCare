# Redis Cache Deployment for OmniCare EMR
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: omnicare
  labels:
    app: redis
    component: cache
data:
  redis.conf: |
    # Redis configuration for OmniCare EMR
    
    # Network settings
    bind 0.0.0.0
    port 6379
    
    # Authentication
    requirepass omnicare-redis-pass
    
    # Memory management
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Logging
    loglevel notice
    logfile /var/log/redis/redis.log
    
    # Security
    protected-mode yes
    
    # Performance
    tcp-keepalive 300
    timeout 0
    
    # Append-only file
    appendonly yes
    appendfsync everysec
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: omnicare
  labels:
    app: redis
    component: cache
type: Opaque
data:
  REDIS_PASSWORD: b21uaWNhcmUtcmVkaXMtcGFzcw== # base64 encoded: omnicare-redis-pass
  REDIS_URL: cmVkaXM6Ly86b21uaWNhcmUtcmVkaXMtcGFzc0ByZWRpczozNzk= # redis://:omnicare-redis-pass@redis:6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: omnicare
  labels:
    app: redis
    component: cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: omnicare
  labels:
    app: redis
    component: cache
    version: "7"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
      component: cache
  template:
    metadata:
      labels:
        app: redis
        component: cache
        version: "7"
    spec:
      securityContext:
        runAsUser: 999 # redis user
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-config-volume
          mountPath: /etc/redis
        - name: redis-storage
          mountPath: /data
        - name: redis-logs
          mountPath: /var/log/redis
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: redis-config-volume
        configMap:
          name: redis-config
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      - name: redis-logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: omnicare
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
    component: cache
---
# Redis monitoring service
apiVersion: v1
kind: Service
metadata:
  name: redis-metrics
  namespace: omnicare
  labels:
    app: redis
    component: cache
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  type: ClusterIP
  ports:
  - port: 9121
    targetPort: 9121
    protocol: TCP
    name: metrics
  selector:
    app: redis-exporter
---
# Redis Exporter for Prometheus monitoring
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: omnicare
  labels:
    app: redis-exporter
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-exporter
  template:
    metadata:
      labels:
        app: redis-exporter
        component: monitoring
    spec:
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 5
          periodSeconds: 5