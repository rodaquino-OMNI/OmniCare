# Prometheus Configuration for OmniCare EMR
# Production environment with enhanced monitoring and alerting

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'omnicare-prod'
    environment: 'production'
    datacenter: 'us-east-1'

# Rules for alerting
rule_files:
  - "alert_rules.yml"
  - "hipaa_compliance_rules.yml"
  - "sla_rules.yml"
  - "security_rules.yml"

# Alert manager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# Scrape configurations for production
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 30s
    honor_labels: true

  # Kubernetes API server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Backend API application metrics
  - job_name: 'backend'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: backend
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: http
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s

  # Frontend application metrics
  - job_name: 'frontend'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: frontend
    metrics_path: /api/metrics
    scrape_interval: 30s

  # PostgreSQL database metrics
  - job_name: 'postgres'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: postgres-exporter
    metrics_path: /metrics
    scrape_interval: 30s

  # Redis cache metrics
  - job_name: 'redis'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: redis-exporter
    metrics_path: /metrics
    scrape_interval: 30s

  # Healthcare API health checks
  - job_name: 'healthcare-api-health'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: backend
    metrics_path: /health
    scrape_interval: 10s
    scrape_timeout: 5s

  # FHIR endpoint monitoring
  - job_name: 'fhir-endpoints'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: backend
    metrics_path: /fhir/metadata
    scrape_interval: 60s
    scrape_timeout: 10s

  # HIPAA compliance monitoring
  - job_name: 'hipaa-compliance'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: backend
    metrics_path: /metrics/compliance
    scrape_interval: 60s
    scrape_timeout: 15s

  # Security metrics
  - job_name: 'security-metrics'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - omnicare
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: backend
    metrics_path: /metrics/security
    scrape_interval: 30s

  # Load balancer metrics
  - job_name: 'nginx-ingress'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - ingress-nginx
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
        action: keep
        regex: ingress-nginx
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: (.+)
        replacement: $1:10254

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    basic_auth:
      username: "omnicare"
      password_file: "/etc/prometheus/remote-write-password"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'omnicare_.*|up|prometheus_.*'
        action: keep
    queue_config:
      max_samples_per_send: 10000
      max_shards: 200
      capacity: 500000

# Storage configuration for production
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true

# Global limits
global:
  # Scrape timeout
  scrape_timeout: 10s
  # How often to scrape targets by default
  scrape_interval: 15s
  # How often to evaluate rules
  evaluation_interval: 15s
  # Attach these labels to any time series or alerts
  external_labels:
    monitor: 'omnicare-production'
    cluster: 'omnicare-prod'
    datacenter: 'us-east-1'
    env: 'production'
    compliance: 'hipaa'