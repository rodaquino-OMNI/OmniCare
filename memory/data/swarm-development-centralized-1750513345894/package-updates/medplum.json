{
  "timestamp": "2025-06-21T00:00:00Z",
  "service": "medplum.service.ts",
  "package": "@medplum/core",
  "version": "^4.1.10",
  "status": "COMPLETED",
  "issues_fixed": {
    "setActiveProject": {
      "issue": "Method 'setActiveProject' no longer exists in Medplum SDK v4.x",
      "location": "line 49",
      "fix": "Removed the call. Project ID is now handled via OAuth scope or client configuration during authentication",
      "status": "FIXED"
    },
    "SearchRequest": {
      "issue": "Type 'SearchRequest' no longer exported from @medplum/fhirtypes",
      "location": "line 2, line 184",
      "fix": "Replaced with direct searchResources method that accepts params object instead of SearchRequest",
      "status": "FIXED"
    },
    "resourceType_string": {
      "issue": "String type not accepted for resource type parameters in readResource and deleteResource",
      "location": "lines 118, 158",
      "fix": "Updated to use ResourceType from @medplum/fhirtypes with type assertion for compatibility",
      "status": "FIXED"
    },
    "subscription_creation": {
      "issue": "Subscription object structure requires proper type constraints",
      "location": "line 284-294",
      "fix": "Added const assertions for resourceType and status, proper channel type handling with auth headers",
      "status": "FIXED"
    },
    "search_method": {
      "issue": "search() method with SearchRequest object is deprecated",
      "location": "line 197",
      "fix": "Replaced with searchResources() that returns ResourceArray, handling both array and bundle response formats",
      "status": "FIXED"
    },
    "graphql_variables": {
      "issue": "GraphQL variables parameter now expects string instead of object",
      "location": "line 272",
      "fix": "Added JSON.stringify() conversion for variables parameter",
      "status": "FIXED"
    }
  },
  "api_changes_summary": {
    "removed_methods": ["setActiveProject"],
    "removed_types": ["SearchRequest"],
    "updated_methods": {
      "search": "Now use searchResources(resourceType, params) instead of search(SearchRequest)",
      "readResource": "Now requires ResourceType instead of string",
      "deleteResource": "Now requires ResourceType instead of string",
      "graphql": "Variables parameter now expects string instead of object"
    },
    "new_response_types": {
      "searchResources": "Returns ResourceArray with optional bundle property instead of simple array"
    }
  },
  "implementation_details": {
    "authentication_flow": {
      "old": "startClientLogin() followed by setActiveProject()",
      "new": "Only startClientLogin() with project configured via OAuth scope"
    },
    "search_implementation": {
      "approach": "Handle both array and ResourceArray response formats for maximum compatibility",
      "bundle_creation": "Manually create Bundle wrapper to maintain backward compatibility",
      "param_handling": "Direct parameter passing instead of SearchRequest object"
    },
    "type_safety": {
      "resource_types": "Use ResourceType with type assertions for API compatibility",
      "subscriptions": "Const assertions for proper type inference",
      "graphql": "String conversion for variables parameter"
    }
  },
  "changes_made": [
    {
      "type": "import",
      "description": "Replaced SearchRequest with ResourceType import from @medplum/fhirtypes",
      "files": ["medplum.service.ts"]
    },
    {
      "type": "authentication",
      "description": "Simplified authentication flow, removed setActiveProject call with detailed explanatory comment",
      "files": ["medplum.service.ts"]
    },
    {
      "type": "method_signatures",
      "description": "Updated readResource and deleteResource to accept ResourceType instead of string with type assertions",
      "files": ["medplum.service.ts"]
    },
    {
      "type": "search_implementation",
      "description": "Complete rewrite of searchResources method to handle ResourceArray responses and create Bundle wrapper",
      "files": ["medplum.service.ts"]
    },
    {
      "type": "subscription",
      "description": "Enhanced subscription creation with proper type assertions and optional auth headers",
      "files": ["medplum.service.ts"]
    },
    {
      "type": "graphql",
      "description": "Fixed GraphQL method to stringify variables parameter",
      "files": ["medplum.service.ts"]
    },
    {
      "type": "helper_removal",
      "description": "Removed convertSearchParams and parseSortRules helper methods as no longer needed",
      "files": ["medplum.service.ts"]
    },
    {
      "type": "test_updates",
      "description": "Updated unit tests to mock searchResources and handle new response structures",
      "files": ["medplum.service.test.ts"]
    },
    {
      "type": "import_paths",
      "description": "Fixed import paths to use relative imports for better test compatibility",
      "files": ["medplum.service.ts"]
    }
  ],
  "backward_compatibility": {
    "maintained": true,
    "notes": "All public method signatures remain the same from consumer perspective, only internal implementation updated",
    "breaking_changes": "None for API consumers",
    "api_surface": "Identical interface for all public methods"
  },
  "testing_status": {
    "unit_tests_updated": true,
    "changes_required": [
      "Mock searchResources instead of search method",
      "Handle ResourceArray response structure in mocks",
      "Update type assertions for Bundle and Subscription responses",
      "Remove setActiveProject test expectations"
    ],
    "test_files_modified": ["medplum.service.test.ts"],
    "integration_tests": "Should work without changes due to maintained public interfaces"
  },
  "migration_guide": {
    "for_other_services": {
      "search_usage": "If using medplum.search() directly, switch to medplum.searchResources(resourceType, params)",
      "resource_types": "Import ResourceType from @medplum/fhirtypes for type safety",
      "project_switching": "Remove any setActiveProject calls, configure project via OAuth scope or client config",
      "graphql_vars": "Ensure GraphQL variables are passed as strings, not objects"
    },
    "breaking_changes_to_watch": [
      "searchResources return type changed from array to ResourceArray",
      "GraphQL variables parameter type changed",
      "Project management moved from runtime to configuration"
    ]
  },
  "files_updated": [
    "/Users/rodrigo/claude-projects/OmniCare/backend/src/services/medplum.service.ts",
    "/Users/rodrigo/claude-projects/OmniCare/backend/tests/unit/services/medplum.service.test.ts"
  ],
  "verification_needed": [
    "Test with actual Medplum server to verify authentication flow",
    "Validate searchResources response handling with real data",
    "Confirm subscription creation works with new channel type constraints",
    "Test GraphQL queries with stringified variables"
  ]
}