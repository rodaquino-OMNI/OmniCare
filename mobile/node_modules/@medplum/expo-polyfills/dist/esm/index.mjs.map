{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/polyfills/event/global.ts", "../../src/polyfills/event/misc.ts", "../../src/polyfills/event/warning-handler.ts", "../../src/polyfills/event/warnings.ts", "../../src/polyfills/event/event.ts", "../../src/polyfills/event/index.ts", "../../src/storage.ts", "../../src/websocket-manager.ts"],
  "sourcesContent": ["import { MemoryStorage } from '@medplum/core';\nimport { decode, encode } from 'base-64';\nimport { CryptoDigestAlgorithm, digest } from 'expo-crypto';\nimport expoWebCrypto from 'expo-standard-web-crypto';\nimport { Platform } from 'react-native';\nimport { setupURLPolyfill } from 'react-native-url-polyfill';\nimport { TextDecoder, TextEncoder } from 'text-encoding';\nimport { polyfillEvent } from './polyfills/event';\n\nexport { ExpoClientStorage, type IExpoClientStorage } from './storage';\nexport { initWebSocketManager } from './websocket-manager';\n\nlet polyfilled = false;\nlet originalCryptoIsSet = false;\nlet originalCrypto: Crypto | undefined;\n\nexport type ExtendedExpoCrypto = typeof expoWebCrypto & {\n  subtle: {\n    digest: (algorithm: AlgorithmIdentifier, data: BufferSource) => Promise<ArrayBuffer>;\n  };\n};\n\nexport type PolyfillEnabledConfig = {\n  crypto?: boolean;\n  location?: boolean;\n  sessionStorage?: boolean;\n  textEncoder?: boolean;\n  btoa?: boolean;\n  event?: boolean;\n};\n\nexport function cleanupMedplumWebAPIs(): void {\n  if (Platform.OS === 'web' || !polyfilled) {\n    return;\n  }\n  if (typeof window.crypto !== 'undefined') {\n    Object.defineProperty(window, 'crypto', {\n      configurable: true,\n      enumerable: true,\n      value: originalCrypto,\n    });\n    Object.defineProperty(expoWebCrypto, 'subtle', {\n      configurable: true,\n      enumerable: false,\n      value: undefined,\n    });\n    originalCrypto = undefined;\n    originalCryptoIsSet = false;\n  }\n  if (typeof window.location !== 'undefined') {\n    Object.defineProperty(window, 'location', { configurable: true, enumerable: true, value: undefined });\n  }\n  if (typeof window.sessionStorage !== 'undefined') {\n    Object.defineProperty(window, 'sessionStorage', {\n      configurable: true,\n      enumerable: true,\n      value: undefined,\n    });\n  }\n  if (typeof window.TextEncoder !== 'undefined') {\n    Object.defineProperty(window, 'TextEncoder', {\n      configurable: true,\n      enumerable: true,\n      value: undefined,\n    });\n  }\n  if (typeof window.TextDecoder !== 'undefined') {\n    Object.defineProperty(window, 'TextDecoder', {\n      configurable: true,\n      enumerable: true,\n      value: undefined,\n    });\n  }\n  if (typeof window.btoa !== 'undefined') {\n    Object.defineProperty(window, 'btoa', { configurable: true, enumerable: true, value: undefined });\n  }\n  if (typeof window.atob !== 'undefined') {\n    Object.defineProperty(window, 'atob', { configurable: true, enumerable: true, value: undefined });\n  }\n  if (typeof window.Event !== 'undefined') {\n    Object.defineProperty(window, 'Event', { configurable: true, enumerable: true, value: undefined });\n  }\n\n  polyfilled = false;\n}\n\nexport function polyfillMedplumWebAPIs(config?: PolyfillEnabledConfig): void {\n  if (Platform.OS === 'web' || polyfilled) {\n    return;\n  }\n  if (\n    config?.crypto !== false &&\n    (typeof window.crypto?.subtle?.digest === 'undefined' || typeof window.crypto.getRandomValues === 'undefined')\n  ) {\n    // eslint-disable-next-line no-inner-declarations\n    async function polyfilledDigest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer> {\n      return digest(algorithm as CryptoDigestAlgorithm, data);\n    }\n\n    // We can't do a check for `originalCrypto === undefined` because the original value for `window.crypto` could be undefined itself\n    // Resulting in an ambiguity and setting `originalCrypto = window.crypto` potentially after `window.crypto` has already been polyfilled\n    if (!originalCryptoIsSet) {\n      originalCrypto = window.crypto;\n      originalCryptoIsSet = true;\n    }\n\n    // @ts-expect-error Subtle not polyfilled by default with ExpoWebCrypto\n    if (expoWebCrypto.subtle === undefined) {\n      const subtlePolyfill = { digest: polyfilledDigest };\n      Object.defineProperty(expoWebCrypto, 'subtle', {\n        configurable: true,\n        get: () => subtlePolyfill,\n      });\n    }\n\n    Object.defineProperty(window, 'crypto', {\n      configurable: true,\n      enumerable: true,\n      get: () => expoWebCrypto,\n    });\n  }\n\n  if (config?.location !== false && typeof window.location === 'undefined') {\n    setupURLPolyfill();\n    const locationUrl = new URL('/', 'http://localhost') as URL & { assign: () => void };\n    locationUrl.assign = () => {};\n    Object.defineProperty(window, 'location', {\n      value: locationUrl,\n      configurable: true,\n    });\n  }\n\n  let _sessionStorage: Storage;\n  if (config?.sessionStorage !== false && typeof window.sessionStorage === 'undefined') {\n    Object.defineProperty(window, 'sessionStorage', {\n      configurable: true,\n      enumerable: true,\n      get: () => (_sessionStorage ??= new MemoryStorage()),\n    });\n  }\n\n  if (config?.textEncoder !== false && typeof window.TextEncoder === 'undefined') {\n    Object.defineProperty(window, 'TextEncoder', {\n      configurable: true,\n      enumerable: true,\n      get: () => TextEncoder,\n    });\n  }\n\n  if (config?.textEncoder !== false && typeof window.TextDecoder === 'undefined') {\n    Object.defineProperty(window, 'TextDecoder', {\n      configurable: true,\n      enumerable: true,\n      get: () => TextDecoder,\n    });\n  }\n\n  if (config?.btoa !== false) {\n    Object.defineProperty(window, 'btoa', {\n      configurable: true,\n      enumerable: true,\n      get: () => encode,\n    });\n  }\n\n  if (config?.btoa !== false) {\n    Object.defineProperty(window, 'atob', {\n      configurable: true,\n      enumerable: true,\n      get: () => decode,\n    });\n  }\n\n  if (config?.event !== false && typeof window.Event === 'undefined') {\n    polyfillEvent();\n  }\n\n  polyfilled = true;\n}\n", "/* eslint-disable no-nested-ternary */\n\n/**\n * The global object.\n */\n//istanbul ignore next\nexport const Global: any =\n  typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n      ? self\n      : typeof global !== 'undefined'\n        ? global\n        : typeof globalThis !== 'undefined'\n          ? globalThis\n          : undefined;\n", "/**\n * Assert a condition.\n * @param condition - The condition that it should satisfy.\n * @param message - The error message.\n * @param args - The arguments for replacing placeholders in the message.\n */\nexport function assertType(condition: boolean, message: string, ...args: any[]): asserts condition {\n  if (!condition) {\n    throw new TypeError(format(message, args));\n  }\n}\n\n/**\n * Convert a text and arguments to one string.\n * @param message - The formating text\n * @param args - The arguments.\n * @returns A formatted string\n */\nexport function format(message: string, args: any[]): string {\n  let i = 0;\n  return message.replace(/%[os]/gu, () => anyToString(args[i++]));\n}\n\n/**\n * Convert a value to a string representation.\n * @param x - The value to get the string representation.\n * @returns The value as a string\n */\nexport function anyToString(x: any): string {\n  if (typeof x !== 'object' || x === null) {\n    return String(x);\n  }\n  return Object.prototype.toString.call(x);\n}\n", "import { assertType } from './misc';\n\ndeclare const console: any;\n\nlet currentWarnHandler: setWarningHandler.WarningHandler | undefined;\n\n/**\n * Set the warning handler.\n * @param value - The warning handler to set.\n */\nexport function setWarningHandler(value: setWarningHandler.WarningHandler | undefined): void {\n  assertType(\n    typeof value === 'function' || value === undefined,\n    'The warning handler must be a function or undefined, but got %o.',\n    value\n  );\n  currentWarnHandler = value;\n}\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace setWarningHandler {\n  /**\n   * The warning information.\n   */\n  export interface Warning {\n    /**\n     * The code of this warning.\n     */\n    code: string;\n    /**\n     * The message in English.\n     */\n    message: string;\n    /**\n     * The arguments for replacing placeholders in the text.\n     */\n    args: any[];\n  }\n\n  /**\n   * The warning handler.\n   * @param warning - The warning.\n   */\n  export type WarningHandler = (warning: Warning) => void;\n}\n\n/**\n * The warning information.\n */\nexport class Warning<TArgs extends any[]> {\n  readonly code: string;\n  readonly message: string;\n\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n\n  /**\n   * Report this warning.\n   * @param args - The arguments of the warning.\n   */\n  warn(...args: TArgs): void {\n    try {\n      // Call the user-defined warning handler if exists.\n      if (currentWarnHandler) {\n        currentWarnHandler({ ...this, args });\n        return;\n      }\n\n      // Otherwise, print the warning.\n      const stack = (new Error().stack ?? '').replace(/^(?:.+?\\n){2}/gu, '\\n');\n      console.warn(this.message, ...args, stack);\n    } catch {\n      // Ignore.\n    }\n  }\n}\n", "import { Warning } from './warning-handler';\n\nexport const InitEventWasCalledWhileDispatching = new Warning<[]>(\n  'W01',\n  'Unable to initialize event under dispatching.'\n);\n\nexport const FalsyWasAssignedToCancelBubble = new Warning<[]>(\n  'W02',\n  \"Assigning any falsy value to 'cancelBubble' property has no effect.\"\n);\n\nexport const TruthyWasAssignedToReturnValue = new Warning<[]>(\n  'W03',\n  \"Assigning any truthy value to 'returnValue' property has no effect.\"\n);\n\nexport const NonCancelableEventWasCanceled = new Warning<[]>(\n  'W04',\n  'Unable to preventDefault on non-cancelable events.'\n);\n\nexport const CanceledInPassiveListener = new Warning<[]>(\n  'W05',\n  'Unable to preventDefault inside passive event listener invocation.'\n);\n\nexport const EventListenerWasDuplicated = new Warning<[type: 'bubble' | 'capture', callback: EventListener]>(\n  'W06',\n  \"An event listener wasn't added because it has been added already: %o, %o\"\n);\n\nexport const OptionWasIgnored = new Warning<[name: 'passive' | 'once' | 'signal']>(\n  'W07',\n  \"The %o option value was abandoned because the event listener wasn't added as duplicated.\"\n);\n\nexport const InvalidEventListener = new Warning<[callback: EventListener | object | null | undefined]>(\n  'W08',\n  \"The 'callback' argument must be a function or an object that has 'handleEvent' method: %o\"\n);\n\nexport const InvalidAttributeHandler = new Warning<[callback: EventListener | object]>(\n  'W09',\n  'Event attribute handler must be a function: %o'\n);\n", "import { EventTarget } from '@medplum/core/src/eventtarget'; // Used as only type, so no circular.\nimport { Global } from './global';\nimport { assertType } from './misc';\nimport {\n  CanceledInPassiveListener,\n  FalsyWasAssignedToCancelBubble,\n  InitEventWasCalledWhileDispatching,\n  NonCancelableEventWasCanceled,\n  TruthyWasAssignedToReturnValue,\n} from './warnings';\n\n/**\n * An implementation of `Event` interface, that wraps a given event object.\n * `EventTarget` shim can control the internal state of this `Event` objects.\n * @see https://dom.spec.whatwg.org/#event\n */\nexport class Event<TEventType extends string = string> {\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-none\n   * @returns The const value of the `NONE` enum.\n   */\n  static get NONE(): 0 {\n    return NONE;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase\n   * @returns The const value of the `CAPTURING_PHASE` enum.\n   */\n  static get CAPTURING_PHASE(): 1 {\n    return CAPTURING_PHASE;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-at_target\n   * @returns The const value of the `AT_TARGET` enum.\n   */\n  static get AT_TARGET(): 2 {\n    return AT_TARGET;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase\n   * @returns The const value of the `BUBBLING_PHASE` enum.\n   */\n  static get BUBBLING_PHASE(): 3 {\n    return BUBBLING_PHASE;\n  }\n\n  /**\n   * Initialize this event instance.\n   * @param type - The type of this event.\n   * @param eventInitDict - Options to initialize.\n   * @see https://dom.spec.whatwg.org/#dom-event-event\n   */\n  constructor(type: TEventType, eventInitDict?: Event.EventInit) {\n    Object.defineProperty(this, 'isTrusted', {\n      value: false,\n      enumerable: true,\n    });\n\n    const opts = eventInitDict ?? {};\n    internalDataMap.set(this, {\n      type: String(type),\n      bubbles: Boolean(opts.bubbles),\n      cancelable: Boolean(opts.cancelable),\n      composed: Boolean(opts.composed),\n      target: null,\n      currentTarget: null,\n      stopPropagationFlag: false,\n      stopImmediatePropagationFlag: false,\n      canceledFlag: false,\n      inPassiveListenerFlag: false,\n      dispatchFlag: false,\n      timeStamp: Date.now(),\n    });\n  }\n\n  /**\n   * The type of this event.\n   * @see https://dom.spec.whatwg.org/#dom-event-type\n   * @returns The type of the `Event`\n   */\n  get type(): TEventType {\n    return $(this).type as TEventType;\n  }\n\n  /**\n   * The event target of the current dispatching.\n   * @see https://dom.spec.whatwg.org/#dom-event-target\n   * @returns The `EventTarget` of this event, if it exists\n   */\n  get target(): EventTarget | null {\n    return $(this).target;\n  }\n\n  /**\n   * The event target of the current dispatching.\n   * @deprecated Use the `target` property instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-srcelement\n   * @returns The target of this `Event`.\n   */\n  get srcElement(): EventTarget | null {\n    return $(this).target;\n  }\n\n  /**\n   * The event target of the current dispatching.\n   * @see https://dom.spec.whatwg.org/#dom-event-currenttarget\n   * @returns The current target of this `Event`.\n   */\n  get currentTarget(): EventTarget | null {\n    return $(this).currentTarget;\n  }\n\n  /**\n   * The event target of the current dispatching.\n   * This doesn't support node tree.\n   * @see https://dom.spec.whatwg.org/#dom-event-composedpath\n   * @returns The path of `target`s that emitted this `Event`.\n   */\n  composedPath(): EventTarget[] {\n    const currentTarget = $(this).currentTarget;\n    if (currentTarget) {\n      return [currentTarget];\n    }\n    return [];\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-none\n   * @returns The const value of the `NONE` enum.\n   */\n  get NONE(): 0 {\n    return NONE;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase\n   * @returns The const value of the `CAPTURING_PHASE` enum.\n   */\n  get CAPTURING_PHASE(): 1 {\n    return CAPTURING_PHASE;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-at_target\n   * @returns The const value of the `AT_TARGET` enum.\n   */\n  get AT_TARGET(): 2 {\n    return AT_TARGET;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase\n   * @returns The const value of the `BUBBLING_PHASE` enum.\n   */\n  get BUBBLING_PHASE(): 3 {\n    return BUBBLING_PHASE;\n  }\n\n  /**\n   * The current event phase.\n   * @see https://dom.spec.whatwg.org/#dom-event-eventphase\n   * @returns The event phase.\n   */\n  get eventPhase(): 0 | 2 {\n    return $(this).dispatchFlag ? 2 : 0;\n  }\n\n  /**\n   * Stop event bubbling.\n   * Because this shim doesn't support node tree, this merely changes the `cancelBubble` property value.\n   * @see https://dom.spec.whatwg.org/#dom-event-stoppropagation\n   */\n  stopPropagation(): void {\n    $(this).stopPropagationFlag = true;\n  }\n\n  /**\n   * `true` if event bubbling was stopped.\n   * @deprecated\n   * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble\n   * @returns `true` if event bubbling was stopped, otherwise `false`.\n   */\n  get cancelBubble(): boolean {\n    return $(this).stopPropagationFlag;\n  }\n\n  /**\n   * Stop event bubbling if `true` is set.\n   * @deprecated Use the `stopPropagation()` method instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble\n   */\n  set cancelBubble(value: boolean) {\n    if (value) {\n      $(this).stopPropagationFlag = true;\n    } else {\n      FalsyWasAssignedToCancelBubble.warn();\n    }\n  }\n\n  /**\n   * Stop event bubbling and subsequent event listener callings.\n   * @see https://dom.spec.whatwg.org/#dom-event-stopimmediatepropagation\n   */\n  stopImmediatePropagation(): void {\n    const data = $(this);\n    data.stopPropagationFlag = data.stopImmediatePropagationFlag = true;\n  }\n\n  /**\n   * `true` if this event will bubble.\n   * @see https://dom.spec.whatwg.org/#dom-event-bubbles\n   * @returns `true` if this event will bubble, otherwise `false`.\n   */\n  get bubbles(): boolean {\n    return $(this).bubbles;\n  }\n\n  /**\n   * `true` if this event can be canceled by the `preventDefault()` method.\n   * @see https://dom.spec.whatwg.org/#dom-event-cancelable\n   * @returns Whether this event can be cancelled.\n   */\n  get cancelable(): boolean {\n    return $(this).cancelable;\n  }\n\n  /**\n   * `true` if the default behavior will act.\n   * @deprecated Use the `defaultPrevented` property instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-returnvalue\n   * @returns `true` if the default behavior will act, otherwise `false`.\n   */\n  get returnValue(): boolean {\n    return !$(this).canceledFlag;\n  }\n\n  /**\n   * Cancel the default behavior if `false` is set.\n   * @deprecated Use the `preventDefault()` method instead.\n   * @see https://dom.spec.whatwg.org/#dom-event-returnvalue\n   */\n  set returnValue(value: boolean) {\n    if (!value) {\n      setCancelFlag($(this));\n    } else {\n      TruthyWasAssignedToReturnValue.warn();\n    }\n  }\n\n  /**\n   * Cancel the default behavior.\n   * @see https://dom.spec.whatwg.org/#dom-event-preventdefault\n   */\n  preventDefault(): void {\n    setCancelFlag($(this));\n  }\n\n  /**\n   * `true` if the default behavior was canceled.\n   * @see https://dom.spec.whatwg.org/#dom-event-defaultprevented\n   * @returns `true` if the default behavior was cancelled, otherwise `false`.\n   */\n  get defaultPrevented(): boolean {\n    return $(this).canceledFlag;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-composed\n   * @returns Whether this Event was composed.\n   */\n  get composed(): boolean {\n    return $(this).composed;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-istrusted\n   * @returns Whether this event is from a trusted source.\n   */\n  //istanbul ignore next\n  get isTrusted(): boolean {\n    return false;\n  }\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-timestamp\n   * @returns The timestamp of the event.\n   */\n  get timeStamp(): number {\n    return $(this).timeStamp;\n  }\n\n  /**\n   * @deprecated Don't use this method. The constructor did initialization.\n   * @param type - The type of the `Event`.\n   * @param bubbles - Whether the event should bubble.\n   * @param cancelable - Whether the event can be cancelled.\n   */\n  initEvent(type: string, bubbles = false, cancelable = false): void {\n    const data = $(this);\n    if (data.dispatchFlag) {\n      InitEventWasCalledWhileDispatching.warn();\n      return;\n    }\n\n    internalDataMap.set(this, {\n      ...data,\n      type: String(type),\n      bubbles: Boolean(bubbles),\n      cancelable: Boolean(cancelable),\n      target: null,\n      currentTarget: null,\n      stopPropagationFlag: false,\n      stopImmediatePropagationFlag: false,\n      canceledFlag: false,\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Event {\n  /**\n   * The options of the `Event` constructor.\n   * @see https://dom.spec.whatwg.org/#dictdef-eventinit\n   */\n  export interface EventInit {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n  }\n}\n\nexport { $ as getEventInternalData };\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nconst NONE = 0;\nconst CAPTURING_PHASE = 1;\nconst AT_TARGET = 2;\nconst BUBBLING_PHASE = 3;\n\n/**\n * Private data.\n */\ninterface EventInternalData {\n  /**\n   * The value of `type` attribute.\n   */\n  readonly type: string;\n  /**\n   * The value of `bubbles` attribute.\n   */\n  readonly bubbles: boolean;\n  /**\n   * The value of `cancelable` attribute.\n   */\n  readonly cancelable: boolean;\n  /**\n   * The value of `composed` attribute.\n   */\n  readonly composed: boolean;\n  /**\n   * The value of `timeStamp` attribute.\n   */\n  readonly timeStamp: number;\n\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-target\n   */\n  target: EventTarget | null;\n  /**\n   * @see https://dom.spec.whatwg.org/#dom-event-currenttarget\n   */\n  currentTarget: EventTarget | null;\n  /**\n   * @see https://dom.spec.whatwg.org/#stop-propagation-flag\n   */\n  stopPropagationFlag: boolean;\n  /**\n   * @see https://dom.spec.whatwg.org/#stop-immediate-propagation-flag\n   */\n  stopImmediatePropagationFlag: boolean;\n  /**\n   * @see https://dom.spec.whatwg.org/#canceled-flag\n   */\n  canceledFlag: boolean;\n  /**\n   * @see https://dom.spec.whatwg.org/#in-passive-listener-flag\n   */\n  inPassiveListenerFlag: boolean;\n  /**\n   * @see https://dom.spec.whatwg.org/#dispatch-flag\n   */\n  dispatchFlag: boolean;\n}\n\n/**\n * Private data for event wrappers.\n */\nconst internalDataMap = new WeakMap<any, EventInternalData>();\n\n/**\n * Get private data.\n * @param event - The event object to get private data.\n * @param name - The variable name to report.\n * @returns - The private data of the event.\n */\nfunction $(event: unknown, name = 'this'): EventInternalData {\n  const retv = internalDataMap.get(event);\n  assertType(\n    retv !== undefined && retv !== null,\n    \"'%s' must be an object that Event constructor created, but got another one: %o\",\n    name,\n    event\n  );\n  return retv;\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data - private data.\n */\nfunction setCancelFlag(data: EventInternalData): void {\n  if (data.inPassiveListenerFlag) {\n    CanceledInPassiveListener.warn();\n    return;\n  }\n  if (!data.cancelable) {\n    NonCancelableEventWasCanceled.warn();\n    return;\n  }\n\n  data.canceledFlag = true;\n}\n\n// Set enumerable\nObject.defineProperty(Event, 'NONE', { enumerable: true });\nObject.defineProperty(Event, 'CAPTURING_PHASE', { enumerable: true });\nObject.defineProperty(Event, 'AT_TARGET', { enumerable: true });\nObject.defineProperty(Event, 'BUBBLING_PHASE', { enumerable: true });\nconst keys = Object.getOwnPropertyNames(Event.prototype);\n// eslint-disable-next-line @typescript-eslint/prefer-for-of\nfor (let i = 0; i < keys.length; ++i) {\n  if (keys[i] === 'constructor') {\n    continue;\n  }\n  Object.defineProperty(Event.prototype, keys[i], { enumerable: true });\n}\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof Global !== 'undefined' && typeof Global.Event !== 'undefined') {\n  Object.setPrototypeOf(Event.prototype, Global.Event.prototype);\n}\n", "import { Event } from './event';\n\n// Original source: https://github.com/benlesh/event-target-polyfill/blob/master/index.js\n// The package is no longer maintained, so I figured we can vendor it\n\nexport function polyfillEvent(): void {\n  const root = ((typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    (typeof global !== 'undefined' && global)) as typeof globalThis;\n\n  const shouldPolyfillEvent = (() => {\n    if (typeof root.Event === 'undefined') {\n      return true;\n    }\n    try {\n      // eslint-disable-next-line no-new\n      new root.Event('');\n    } catch (_error) {\n      return true;\n    }\n    return false;\n  })();\n\n  if (shouldPolyfillEvent) {\n    root.Event = Event;\n  }\n}\n", "import { ClientStorage, IClientStorage, OperationOutcomeError } from '@medplum/core';\nimport * as SecureStore from 'expo-secure-store';\nimport { Platform } from 'react-native';\n\nconst MAX_VALUE_LENGTH = 2000;\n\nexport interface IExpoClientStorage extends IClientStorage {\n  getInitPromise(): Promise<void>;\n  length: number;\n}\n\n/**\n * Provides a wrapper around Expo's `SecureStore` package which provides a persistent and secure storage on mobile.\n *\n * This class is necessary for use with `MedplumClient` since `MedplumClient` expects `ClientStorage` to use a synchronous interface, and `SecureStore` uses an asynchronous one.\n *\n * On web, this class will instead wrap `localStorage` automatically, so there is no need to conditionally omit passing this to `MedplumClient` for React Native Web.\n */\nexport class ExpoClientStorage extends ClientStorage implements IExpoClientStorage {\n  // We keep a private reference to the storage we pass in so we can use it within this subclass too...\n  private secureStorage?: SyncSecureStorage;\n  constructor() {\n    // Metro should automatically prune these branches out at compile time\n    if (Platform.OS === 'web') {\n      super(globalThis.localStorage);\n    } else {\n      const storage = new SyncSecureStorage();\n      super(storage);\n      this.secureStorage = storage;\n    }\n  }\n  getInitPromise(): Promise<void> {\n    if (Platform.OS === 'web') {\n      return Promise.resolve();\n    }\n    return (this.secureStorage as SyncSecureStorage).getInitPromise();\n  }\n  get length(): number {\n    if (Platform.OS === 'web') {\n      return globalThis.localStorage.length;\n    }\n    return (this.secureStorage as SyncSecureStorage).length;\n  }\n}\n\n/**\n * This is an internal `Storage` implementation that is used by `ExpoClientStorage`.\n *\n * In general, this class should not be used outside of `ExpoClientStorage`.\n *\n * @internal\n */\nexport class SyncSecureStorage implements Storage {\n  private readonly storage: Map<string, string>;\n  private readonly initPromise: Promise<void>;\n  private initialized = false;\n\n  constructor() {\n    this.storage = new Map<string, string>();\n    this.initPromise = this.initStorage();\n  }\n\n  private async initStorage(): Promise<void> {\n    let keysStr: string | null;\n    try {\n      // We can't just get all the \"keys\" that currently exist as there is no such concept\n      // We need to instead store all keys we intend to restore later in a known key\n      // We've chose `___keys___` to prevent collisions\n      // Here we get the keys and attempt to restore them\n      keysStr = await SecureStore.getItemAsync('___keys___');\n    } catch (err: unknown) {\n      // If an error is thrown here, it's likely an issue with encryption...\n      // We may be unable to decrypt existing keys if the keystore itself has changed\n      // In that case we should dump the keys and start fresh\n      // We can just initialize and resolve the `initPromise`\n      console.error(err);\n      await SecureStore.deleteItemAsync('___keys___');\n      this.initialized = true;\n      return;\n    }\n    if (!keysStr) {\n      this.initialized = true;\n      return;\n    }\n    const keys = JSON.parse(keysStr) as string[];\n    await this.buildMapFromStoredKeys(keys);\n    this.initialized = true;\n  }\n\n  private async buildMapFromStoredKeys(keys: string[]): Promise<void> {\n    const promises = keys.map((key) => this.getValueForKey(key));\n    const values = await Promise.all(promises);\n    for (let i = 0; i < keys.length; i++) {\n      const val = values[i];\n      if (!val) {\n        continue;\n      }\n      this.storage.set(keys[i], val);\n    }\n  }\n\n  getInitPromise(): Promise<void> {\n    return this.initPromise;\n  }\n\n  assertInitialized(): void {\n    if (!this.initialized) {\n      throw new OperationOutcomeError({\n        id: 'not-initialized',\n        resourceType: 'OperationOutcome',\n        issue: [\n          {\n            severity: 'error',\n            code: 'exception',\n            details: {\n              text: 'Not initialized',\n            },\n            diagnostics: 'Storage not initialized',\n          },\n        ],\n      });\n    }\n  }\n\n  get length(): number {\n    this.assertInitialized();\n    return this.storage.size;\n  }\n\n  /**\n   * Clears the storage and sets keys.\n   */\n  clear(): void {\n    this.assertInitialized();\n    // Start clearing out each key in background\n    for (const key of this.storage.keys()) {\n      this.removeItem(key, false);\n    }\n    // Clear map\n    this.storage.clear();\n    this.setKeys();\n  }\n\n  private async getValueForKey(key: string): Promise<string | null> {\n    let valStr = await SecureStore.getItemAsync(key);\n    if (!valStr) {\n      return valStr;\n    }\n    let chunk = 0;\n    while (valStr.endsWith('___continued___')) {\n      chunk++;\n      valStr = valStr.replace('___continued___', '');\n      const next = await SecureStore.getItemAsync(`${key}___chunk${chunk}___`);\n      if (!next) {\n        this.removeItem(key);\n        throw new OperationOutcomeError({\n          id: 'key-chunk-missing',\n          resourceType: 'OperationOutcome',\n          issue: [\n            {\n              severity: 'error',\n              code: 'exception',\n              details: {\n                text: 'Chunk missing for key',\n              },\n              diagnostics: `Chunk ${chunk} of key's value is missing for key '${key}'`,\n            },\n          ],\n        });\n      }\n      valStr += next;\n    }\n    return valStr;\n  }\n\n  private async setValueForKey(key: string, value: string): Promise<void> {\n    const chunks = splitStringIntoChunks(value, MAX_VALUE_LENGTH);\n    // Append ___continued___ if this isn't the only chunk\n    // Otherwise just put the full chunk in\n    const promises = [];\n    promises.push(SecureStore.setItemAsync(key, chunks.length === 1 ? chunks[0] : `${chunks[0]}___continued___`));\n    for (let i = 1; i < chunks.length; i++) {\n      promises.push(\n        SecureStore.setItemAsync(\n          `${key}___chunk${i}___`,\n          // If this isn't the last chunk append ___continued___ to it\n          i === chunks.length - 1 ? chunks[i] : `${chunks[i]}___continued___`\n        )\n      );\n    }\n    await Promise.all(promises);\n  }\n\n  private setKeys(): void {\n    SecureStore.setItemAsync('___keys___', JSON.stringify(Array.from(this.storage.keys()))).catch(console.error);\n  }\n\n  /**\n   * Returns the current value associated with the given key, or null if the given key does not exist.\n   * @param key - The specified storage key.\n   * @returns The current value associated with the given key, or null if the given key does not exist.\n   */\n  getItem(key: string): string | null {\n    this.assertInitialized();\n    return this.storage.get(key) ?? null;\n  }\n\n  /**\n   * Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n   * @param key - The storage key.\n   * @param value - The new value.\n   */\n  setItem(key: string, value: string | null): void {\n    this.assertInitialized();\n    // Set key in background, or delete it if the value is null\n    if (!value) {\n      this.removeItem(key);\n    } else {\n      this.setValueForKey(key, value).catch(console.error);\n      this.storage.set(key, value);\n    }\n    this.setKeys();\n  }\n\n  /**\n   * Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n   * @param key - The storage key.\n   * @param setKeys - Whether to call `this.setKeys()` after deleting the key. Defaults to `true`.\n   */\n  removeItem(key: string, setKeys = true): void {\n    this.assertInitialized();\n    SecureStore.deleteItemAsync(key).catch(console.error);\n    this.storage.delete(key);\n    if (setKeys) {\n      this.setKeys();\n    }\n  }\n\n  /**\n   * This is a stub. Returns `null`.\n   * @param _index - The numeric index. Ignored.\n   * @returns `null`.\n   */\n  key(_index: number): string | null {\n    this.assertInitialized();\n    return null;\n  }\n}\n\nexport function splitStringIntoChunks(str: string, chunkSize: number): string[] {\n  const chunks = [];\n  for (let i = 0; i < str.length; i += chunkSize) {\n    chunks.push(str.slice(i, i + chunkSize));\n  }\n  return chunks;\n}\n", "import { MedplumClient } from '@medplum/core';\nimport { AppState, AppStateStatus } from 'react-native';\n\nlet previousState: AppStateStatus = 'unknown';\n\nexport function initWebSocketManager(medplum: MedplumClient): void {\n  previousState = AppState.currentState;\n  AppState.addEventListener('change', (nextState) => {\n    const ws = medplum.getSubscriptionManager().getWebSocket();\n    if (previousState === 'active' && nextState !== 'active') {\n      ws.close();\n    } else if (\n      previousState !== 'active' &&\n      nextState === 'active' &&\n      ws.readyState !== WebSocket.OPEN &&\n      ws.readyState !== WebSocket.CONNECTING\n    ) {\n      ws.reconnect();\n    }\n    previousState = nextState;\n  });\n}\n"],
  "mappings": "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",
  "names": ["MemoryStorage", "decode", "encode", "digest", "expoWebCrypto", "Platform", "setupURLPolyfill", "TextDecoder", "TextEncoder", "Global", "assertType", "condition", "message", "args", "format", "i", "anyToString", "x", "currentWarnHandler", "Warning", "code", "message", "args", "currentWarnHandler", "stack", "InitEventWasCalledWhileDispatching", "Warning", "FalsyWasAssignedToCancelBubble", "TruthyWasAssignedToReturnValue", "NonCancelableEventWasCanceled", "CanceledInPassiveListener", "EventListenerWasDuplicated", "OptionWasIgnored", "InvalidEventListener", "InvalidAttributeHandler", "Event", "NONE", "CAPTURING_PHASE", "AT_TARGET", "BUBBLING_PHASE", "type", "eventInitDict", "opts", "internalDataMap", "$", "currentTarget", "value", "FalsyWasAssignedToCancelBubble", "data", "TruthyWasAssignedToReturnValue", "setCancelFlag", "bubbles", "cancelable", "InitEventWasCalledWhileDispatching", "NONE", "CAPTURING_PHASE", "AT_TARGET", "BUBBLING_PHASE", "internalDataMap", "$", "event", "name", "retv", "assertType", "setCancelFlag", "data", "CanceledInPassiveListener", "NonCancelableEventWasCanceled", "Event", "keys", "i", "Global", "polyfillEvent", "root", "Event", "ClientStorage", "OperationOutcomeError", "SecureStore", "Platform", "MAX_VALUE_LENGTH", "ExpoClientStorage", "storage", "SyncSecureStorage", "keysStr", "err", "keys", "promises", "key", "values", "val", "valStr", "chunk", "next", "value", "chunks", "splitStringIntoChunks", "i", "setKeys", "_index", "str", "chunkSize", "AppState", "previousState", "initWebSocketManager", "medplum", "nextState", "ws", "polyfilled", "originalCryptoIsSet", "originalCrypto", "cleanupMedplumWebAPIs", "Platform", "expoWebCrypto", "polyfillMedplumWebAPIs", "config", "polyfilledDigest", "algorithm", "data", "digest", "subtlePolyfill", "setupURLPolyfill", "locationUrl", "_sessionStorage", "MemoryStorage", "TextEncoder", "TextDecoder", "encode", "decode", "polyfillEvent"]
}
