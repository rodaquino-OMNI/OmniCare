{"file":"/Users/rodrigo/claude-projects/OmniCare/backend/src/services/fhir-transformation.service.ts","mappings":";;;;;;AAgCA,4DAAoC;AAEpC;;;;GAIG;AACH,MAAa,yBAAyB;IAEpC,kCAAkC;IAClC,0BAA0B;IAC1B,kCAAkC;IAElC;;OAEG;IACH,sBAAsB,CAAC,eAAoB;QACzC,IAAI,CAAC;YACH,MAAM,OAAO,GAAoB;gBAC/B,YAAY,EAAE,SAAS;gBACvB,EAAE,EAAE,eAAe,CAAC,EAAE,IAAI,SAAS;gBACnC,IAAI,EAAE;oBACJ,OAAO,EAAE,CAAC,8DAA8D,CAAC;oBACzE,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;oBACrC,SAAS,EAAE,GAAG;oBACd,MAAM,EAAE,qBAAqB;iBAC9B;gBACD,MAAM,EAAE,eAAe,CAAC,MAAM,KAAK,KAAK;gBAExC,kBAAkB;gBAClB,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAK,IAAI,eAAe,CAAC,IAAI,IAAI,EAAE,CAAC;gBAE9E,wBAAwB;gBACxB,UAAU,EAAE,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,WAAW,IAAI,eAAe,CAAC,UAAU,IAAI,EAAE,EAAE,eAAe,CAAC,GAAG,CAAC;gBAE3H,qBAAqB;gBACrB,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC;gBACpD,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,IAAI,eAAe,CAAC,WAAW,CAAC;gBACvF,eAAe,EAAE,eAAe,CAAC,QAAQ,IAAI,KAAK;gBAClD,gBAAgB,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE/G,sBAAsB;gBACtB,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,QAAQ,IAAI,eAAe,CAAC,OAAO,IAAI,EAAE,CAAC;gBACzF,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,IAAI,eAAe,CAAC,OAAO,IAAI,EAAE,CAAC;gBAE5F,iBAAiB;gBACjB,aAAa,EAAE,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS;gBAEvH,iBAAiB;gBACjB,oBAAoB,EAAE,eAAe,CAAC,aAAa,IAAI,KAAK;gBAC5D,oBAAoB,EAAE,eAAe,CAAC,UAAU,IAAI,SAAS;gBAE7D,QAAQ;gBACR,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,YAAY,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;gBAEvG,qBAAqB;gBACrB,OAAO,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,iBAAiB,IAAI,EAAE,CAAC;gBAEjF,4BAA4B;gBAC5B,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,SAAS,IAAI,EAAE,CAAC;gBAE3E,iBAAiB;gBACjB,mBAAmB,EAAE,IAAI,CAAC,+BAA+B,CAAC,eAAe,CAAC,oBAAoB,IAAI,EAAE,CAAC;gBACrG,oBAAoB,EAAE,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAgB,eAAe,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;gBAE9I,0BAA0B;gBAC1B,IAAI,EAAE,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE7G,+BAA+B;gBAC/B,SAAS,EAAE;oBACT;wBACE,GAAG,EAAE,gEAAgE;wBACrE,aAAa,EAAE,eAAe,CAAC,gBAAgB,IAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;qBAC5E;oBACD;wBACE,GAAG,EAAE,iEAAiE;wBACtE,WAAW,EAAE,eAAe,CAAC,iBAAiB,IAAI,IAAI;qBACvD;oBACD;wBACE,GAAG,EAAE,oEAAoE;wBACzE,YAAY,EAAE,eAAe,CAAC,YAAY,IAAI,KAAK;qBACpD;oBACD;wBACE,GAAG,EAAE,4EAA4E;wBACjF,WAAW,EAAE,eAAe,CAAC,eAAe,IAAI,SAAS;qBAC1D;iBACF,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,IAAI,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,YAAY,KAAK,SAAS,CAAC;gBAEvF,mCAAmC;gBACnC,iBAAiB,EAAE,eAAe,CAAC,UAAU,IAAI,eAAe,CAAC,EAAE;gBACnE,gBAAgB,EAAE,eAAe,CAAC,gBAAgB;gBAClD,iBAAiB,EAAE,eAAe,CAAC,iBAAiB;gBACpD,gBAAgB,EAAE,eAAe,CAAC,gBAAgB;gBAClD,oBAAoB,EAAE,eAAe,CAAC,SAAS;aAChD,CAAC;YAEF,gBAAM,CAAC,KAAK,CAAC,sCAAsC,EAAE,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;YAChF,OAAO,OAAO,CAAC;QACjB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,gBAAM,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,IAAI,KAAK,CAAC,kCAAkC,KAAK,EAAE,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAED;;OAEG;IACH,wBAAwB,CAAC,WAAoB;QAC3C,IAAI,CAAC;YACH,MAAM,eAAe,GAAG;gBACtB,EAAE,EAAE,WAAW,CAAC,EAAE;gBAClB,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,IAAI,EAAE,CAAC;gBAClD,MAAM,EAAE,WAAW,CAAC,MAAM,KAAK,KAAK;gBAEpC,2BAA2B;gBAC3B,SAAS,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE;gBAClD,UAAU,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE;gBACnD,QAAQ,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI,EAAE;gBAC7C,aAAa,EAAE,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE;gBAElF,eAAe;gBACf,MAAM,EAAE,WAAW,CAAC,MAAM;gBAC1B,WAAW,EAAE,WAAW,CAAC,SAAS;gBAClC,QAAQ,EAAE,WAAW,CAAC,eAAe,IAAI,KAAK;gBAC9C,WAAW,EAAE,WAAW,CAAC,gBAAgB;gBAEzC,sBAAsB;gBACtB,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC;gBACjE,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC;gBACrE,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC;gBAE3D,yBAAyB;gBACzB,aAAa,EAAE,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI;gBAC3D,iBAAiB,EAAE,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC;gBAC3E,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,aAAa,IAAI,EAAE,CAAC;gBAEjE,2BAA2B;gBAC3B,UAAU,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,SAAS,EAAE,kEAAkE,CAAC;gBACjI,gBAAgB,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,SAAS,EAAE,gEAAgE,CAAC;gBACrI,iBAAiB,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,SAAS,EAAE,iEAAiE,CAAC;gBACvI,YAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,SAAS,EAAE,oEAAoE,CAAC;gBACrI,eAAe,EAAE,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,SAAS,EAAE,4EAA4E,CAAC;gBAEhJ,WAAW;gBACX,WAAW,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW;gBAC1C,OAAO,EAAE,WAAW,CAAC,IAAI,EAAE,SAAS;aACrC,CAAC;YAEF,gBAAM,CAAC,KAAK,CAAC,6CAA6C,EAAE,EAAE,SAAS,EAAE,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/F,OAAO,eAAe,CAAC;QACzB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,gBAAM,CAAC,KAAK,CAAC,sDAAsD,EAAE,KAAK,CAAC,CAAC;YAC5E,MAAM,IAAI,KAAK,CAAC,kCAAkC,KAAK,EAAE,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,kCAAkC;IAClC,4BAA4B;IAC5B,kCAAkC;IAElC;;OAEG;IACH,wBAAwB,CAAC,iBAAsB;QAC7C,IAAI,CAAC;YACH,MAAM,SAAS,GAAsB;gBACnC,YAAY,EAAE,WAAW;gBACzB,EAAE,EAAE,iBAAiB,CAAC,EAAE,IAAI,SAAS;gBACrC,IAAI,EAAE;oBACJ,OAAO,EAAE,CAAC,gEAAgE,CAAC;oBAC3E,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;oBACrC,SAAS,EAAE,GAAG;oBACd,MAAM,EAAE,qBAAqB;iBAC9B;gBAED,cAAc;gBACd,UAAU,EAAE,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,WAAW,IAAI,EAAE,EAAE,iBAAiB,CAAC,WAAW,CAAC;gBAEzG,mBAAmB;gBACnB,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBACzD,KAAK,EAAE,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,IAAI,IAAI,iBAAiB,CAAC,KAAK,CAAC;gBAEtF,OAAO;gBACP,IAAI,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE7I,eAAe;gBACf,WAAW,EAAE,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;gBAErH,WAAW;gBACX,QAAQ,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE5G,oBAAoB;gBACpB,OAAO,EAAE,EAAE,SAAS,EAAE,WAAW,iBAAiB,CAAC,SAAS,EAAE,EAAE;gBAEhE,kBAAkB;gBAClB,aAAa,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,iBAAiB,iBAAiB,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;gBAEhI,oBAAoB;gBACpB,OAAO,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,kBAAkB,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE7I,+CAA+C;gBAC/C,WAAW,EAAE,IAAI,CAAC,8BAA8B,CAAC,iBAAiB,CAAC,YAAY,IAAI,EAAE,CAAC;gBAEtF,cAAc;gBACd,WAAW,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,eAAe,iBAAiB,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE5H,SAAS;gBACT,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,SAAS,EAAE,iBAAiB,CAAC,OAAO,CAAC;gBAEpF,SAAS;gBACT,MAAM,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,iBAAiB,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,2BAA2B,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS;gBAErJ,SAAS;gBACT,UAAU,EAAE,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAC7I,eAAe,EAAE,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE/I,YAAY;gBACZ,SAAS,EAAE,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,SAAS,IAAI,EAAE,CAAC;gBAE9E,UAAU;gBACV,OAAO,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,WAAW,iBAAiB,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE5G,kBAAkB;gBAClB,eAAe,EAAE,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,eAAe,CAAC;gBAEjF,WAAW;gBACX,QAAQ,EAAE,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,SAAS,IAAI,EAAE,CAAC;gBAE7E,mBAAmB;gBACnB,eAAe,EAAE,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAgB,iBAAiB,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;gBAEvI,UAAU;gBACV,MAAM,EAAE,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,aAAa,iBAAiB,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;gBAE3H,+BAA+B;gBAC/B,SAAS,EAAE;oBACT;wBACE,GAAG,EAAE,+DAA+D;wBACpE,WAAW,EAAE,iBAAiB,CAAC,eAAe,IAAI,SAAS;qBAC5D;oBACD;wBACE,GAAG,EAAE,8DAA8D;wBACnE,WAAW,EAAE,iBAAiB,CAAC,cAAc,IAAI,EAAE;qBACpD;oBACD;wBACE,GAAG,EAAE,4DAA4D;wBACjE,WAAW,EAAE,iBAAiB,CAAC,YAAY,IAAI,EAAE;qBAClD;oBACD;wBACE,GAAG,EAAE,qEAAqE;wBAC1E,WAAW,EAAE,iBAAiB,CAAC,oBAAoB,IAAI,EAAE;qBAC1D;iBACF,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC;gBAEhC,mCAAmC;gBACnC,mBAAmB,EAAE,iBAAiB,CAAC,UAAU,IAAI,iBAAiB,CAAC,EAAE;gBACzE,eAAe,EAAE,iBAAiB,CAAC,eAAe;gBAClD,cAAc,EAAE,iBAAiB,CAAC,cAAc;gBAChD,YAAY,EAAE,iBAAiB,CAAC,YAAY;gBAC5C,oBAAoB,EAAE,iBAAiB,CAAC,oBAAoB;gBAC5D,YAAY,EAAE,iBAAiB,CAAC,YAAY;aAC7C,CAAC;YAEF,gBAAM,CAAC,KAAK,CAAC,wCAAwC,EAAE,EAAE,WAAW,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;YACtF,OAAO,SAAS,CAAC;QACnB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,gBAAM,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;YAC9D,MAAM,IAAI,KAAK,CAAC,oCAAoC,KAAK,EAAE,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAED,kCAAkC;IAClC,8BAA8B;IAC9B,kCAAkC;IAElC;;OAEG;IACH,0BAA0B,CAAC,mBAAwB;QACjD,IAAI,CAAC;YACH,MAAM,WAAW,GAAwB;gBACvC,YAAY,EAAE,aAAa;gBAC3B,EAAE,EAAE,mBAAmB,CAAC,EAAE,IAAI,SAAS;gBACvC,IAAI,EAAE;oBACJ,OAAO,EAAE,CAAC,kEAAkE,CAAC;oBAC7E,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;oBACrC,SAAS,EAAE,GAAG;oBACd,MAAM,EAAE,qBAAqB;iBAC9B;gBAED,cAAc;gBACd,UAAU,EAAE,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,WAAW,IAAI,EAAE,EAAE,mBAAmB,CAAC,aAAa,CAAC;gBAE/G,WAAW;gBACX,OAAO,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAU,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE7I,UAAU;gBACV,MAAM,EAAE,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAU,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,4BAA4B,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAExJ,SAAS;gBACT,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,MAAM,CAAC;gBAE7D,WAAW;gBACX,QAAQ,EAAE,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,UAAU,IAAI,EAAE,CAAC;gBAEnF,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBAE7D,UAAU;gBACV,OAAO,EAAE,EAAE,SAAS,EAAE,WAAW,mBAAmB,CAAC,SAAS,EAAE,EAAE;gBAElE,QAAQ;gBACR,KAAK,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAU,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAEvH,YAAY;gBACZ,SAAS,EAAE,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,aAAa,mBAAmB,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;gBAEtH,iBAAiB;gBACjB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,aAAa,IAAI,mBAAmB,CAAC,eAAe,CAAC;gBACnH,eAAe,EAAE,mBAAmB,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,eAAe,CAAC,KAAK,EAAE,mBAAmB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE3K,SAAS;gBACT,MAAM,EAAE,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE3G,YAAY;gBACZ,SAAS,EAAE,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,UAAU,IAAI,EAAE,CAAC;gBAElF,QAAQ;gBACR,aAAa,EAAE,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS;gBACxH,oBAAoB,EAAE,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS;gBACpJ,WAAW,EAAE,mBAAmB,CAAC,WAAW;gBAC5C,YAAY,EAAE,mBAAmB,CAAC,YAAY;gBAC9C,YAAY,EAAE,mBAAmB,CAAC,YAAY;gBAC9C,UAAU,EAAE,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;gBAC5G,UAAU,EAAE,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;gBAC5G,gBAAgB,EAAE,mBAAmB,CAAC,gBAAgB;gBACtD,SAAS,EAAE,mBAAmB,CAAC,SAAS;gBACxC,aAAa,EAAE,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS;gBACxH,WAAW,EAAE,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,EAAE,mBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE3J,qBAAqB;gBACrB,gBAAgB,EAAE,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;gBAExI,iBAAiB;gBACjB,cAAc,EAAE,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC,mBAAmB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE/J,OAAO;gBACP,IAAI,EAAE,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE1H,YAAY;gBACZ,QAAQ,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;gBAEhH,SAAS;gBACT,MAAM,EAAE,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE1G,WAAW;gBACX,QAAQ,EAAE,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,YAAY,mBAAmB,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;gBAElH,SAAS;gBACT,MAAM,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,UAAU,mBAAmB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;gBAE1G,kBAAkB;gBAClB,cAAc,EAAE,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,eAAe,IAAI,EAAE,CAAC;gBAExF,aAAa;gBACb,SAAS,EAAE,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAU,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAE9I,eAAe;gBACf,WAAW,EAAE,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC,mBAAmB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAU,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBAEzI,YAAY;gBACZ,SAAS,EAAE,IAAI,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,UAAU,IAAI,EAAE,CAAC;gBAEpF,+BAA+B;gBAC/B,SAAS,EAAE;oBACT;wBACE,GAAG,EAAE,0DAA0D;wBAC/D,WAAW,EAAE,mBAAmB,CAAC,UAAU,IAAI,EAAE;qBAClD;oBACD;wBACE,GAAG,EAAE,4DAA4D;wBACjE,WAAW,EAAE,mBAAmB,CAAC,YAAY,CAAC,CAAC,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;qBAChG;oBACD;wBACE,GAAG,EAAE,6DAA6D;wBAClE,WAAW,EAAE,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;qBAClG;oBACD;wBACE,GAAG,EAAE,8DAA8D;wBACnE,YAAY,EAAE,mBAAmB,CAAC,cAAc,IAAI,KAAK;qBAC1D;iBACF,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,YAAY,KAAK,SAAS,CAAC;gBAElE,mCAAmC;gBACnC,qBAAqB,EAAE,mBAAmB,CAAC,UAAU,IAAI,mBAAmB,CAAC,EAAE;gBAC/E,UAAU,EAAE,mBAAmB,CAAC,UAAU;gBAC1C,YAAY,EAAE,mBAAmB,CAAC,YAAY;gBAC9C,aAAa,EAAE,mBAAmB,CAAC,aAAa;gBAChD,cAAc,EAAE,mBAAmB,CAAC,cAAc;aACnD,CAAC;YAEF,gBAAM,CAAC,KAAK,CAAC,0CAA0C,EAAE,EAAE,aAAa,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5F,OAAO,WAAW,CAAC;QACrB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,gBAAM,CAAC,KAAK,CAAC,0CAA0C,EAAE,KAAK,CAAC,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,sCAAsC,KAAK,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,kCAAkC;IAClC,iCAAiC;IACjC,kCAAkC;IAE1B,cAAc,CAAC,KAAY;QACjC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxB,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ;YACpC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;YAC3E,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/C,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/C,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;SAC3F,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,oBAAoB,CAAC,WAAkB,EAAE,GAAY;QAC3D,MAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,OAAO;YACtB,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;YAClE,MAAM,EAAE,EAAE,CAAC,MAAM;YACjB,KAAK,EAAE,EAAE,CAAC,KAAK;YACf,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YACpF,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS;SAC/D,CAAC,CAAC,CAAC;QAEJ,sBAAsB;QACtB,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;YACxE,WAAW,CAAC,IAAI,CAAC;gBACf,GAAG,EAAE,OAAO;gBACZ,IAAI,EAAE;oBACJ,MAAM,EAAE,CAAC;4BACP,MAAM,EAAE,+CAA+C;4BACvD,IAAI,EAAE,IAAI;4BACV,OAAO,EAAE,uBAAuB;yBACjC,CAAC;iBACH;gBACD,MAAM,EAAE,gCAAgC;gBACxC,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;QACL,CAAC;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAEO,eAAe,CAAC,MAAc;QACpC,IAAI,CAAC,MAAM;YAAE,OAAO,SAAS,CAAC;QAC9B,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,MAAM,CAAC;QACtD,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,QAAQ,CAAC;QAC1D,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,OAAO,CAAC;QACxD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,aAAa,CAAC,IAAmB;QACvC,IAAI,CAAC,IAAI;YAAE,OAAO,SAAS,CAAC;QAC5B,IAAI,IAAI,YAAY,IAAI;YAAE,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC7B,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,OAAO,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,iBAAiB,CAAC,QAAuB;QAC/C,IAAI,CAAC,QAAQ;YAAE,OAAO,SAAS,CAAC;QAChC,IAAI,QAAQ,YAAY,IAAI;YAAE,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC;QAC5D,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE,CAAC;YACjC,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,MAAM,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,gBAAgB,CAAC,QAAe;QACtC,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC9B,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC;YAC7D,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK;YACvD,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,MAAM;YAC1B,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC;YACvB,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;SACpG,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,kBAAkB,CAAC,SAAgB;QACzC,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,MAAM;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,MAAM;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;YAC/E,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM;YACtC,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa;YACvC,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO;YAC3C,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;SAC3F,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,wBAAwB,CAAC,OAAY;QAC3C,IAAI,CAAC,OAAO;YAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;QAEzC,OAAO;YACL,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC;gBACvD,MAAM,EAAE,CAAC,CAAC,MAAM;gBAChB,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,YAAY,EAAE,CAAC,CAAC,YAAY;aAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,OAAO,EAAE,OAAO,CAAC,OAAO;iBACzB,CAAC,CAAC,CAAC,CAAC,SAAS;YACd,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI;SACtD,CAAC;IACJ,CAAC;IAEO,iBAAiB,CAAC,QAAa;QACrC,OAAO;YACL,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,MAAM,EAAE,QAAQ,CAAC,MAAM,IAAI,2BAA2B;YACtD,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI;SACrC,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,KAAqB,EAAE,GAAmB;QAChE,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG;YAAE,OAAO,SAAS,CAAC;QACrC,OAAO;YACL,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;YACxD,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;SACnD,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,IAAS;QACnC,OAAO;YACL,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAgB,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;YAC3F,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/D,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO;SAChC,CAAC;IACJ,CAAC;IAEO,gBAAgB,CAAC,IAAY;QACnC,MAAM,UAAU,GAAG,IAAI,EAAE,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,OAAO,CAAC;QACrE,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,KAAK,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,OAAO,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,OAAO,CAAC;QACnD,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,KAAK,CAAC;QACjE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,KAAK,CAAC;QACvD,OAAO,OAAO,CAAC;IACjB,CAAC;IAEO,kBAAkB,CAAC,MAAe;QACxC,MAAM,UAAU,GAAG,MAAM,EAAE,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,SAAS,CAAC;QACpE,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,SAAS,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,SAAS,CAAC;QACvD,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,aAAa,CAAC;QACpF,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,SAAS,CAAC;QACnE,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,UAAU,CAAC;QACpF,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,WAAW,CAAC;QACvE,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,kBAAkB,CAAC;QAClF,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,oBAAoB,CAAC,MAAe;QAC1C,MAAM,UAAU,GAAG,MAAM,EAAE,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,YAAY,CAAC;QAC7D,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,aAAa,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,OAAO,CAAC;QAChE,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,SAAS,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,WAAW,CAAC;QAC3D,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,WAAW,CAAC;QACvE,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAAE,OAAO,kBAAkB,CAAC;QAClF,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,yDAAyD;IACjD,UAAU,CAAC,WAAyB;QAC1C,MAAM,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,IAAI,CAAC,CAAC;QACxE,OAAO,GAAG,EAAE,KAAK,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEO,mBAAmB,CAAC,OAAuB;QACjD,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;IAC3E,CAAC;IAEO,qBAAqB,CAAC,OAAuB;QACnD,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;IAC3E,CAAC;IAEO,gBAAgB,CAAC,SAAoB;QAC3C,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5B,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE;YAC3B,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE;YAC3B,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,EAAE;YACjC,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE;YAC3B,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,MAAM;SACxB,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,wBAAwB,CAAC,QAA4B;QAC3D,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;YAC1F,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,EAAE;YACnE,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,EAAE,KAAK,IAAI,EAAE;YACpE,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,EAAE,KAAK,IAAI,EAAE;SACrE,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,gBAAgB,CAAC,aAAuC;QAC9D,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;IACnF,CAAC;IAEO,qBAAqB,CAAC,UAAmC,EAAE,GAAW;QAC5E,MAAM,SAAS,GAAG,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAC3D,OAAO,SAAS,EAAE,WAAW,IAAI,SAAS,EAAE,YAAY,IAAI,SAAS,EAAE,aAAa,IAAI,SAAS,EAAE,YAAY,IAAI,SAAS,EAAE,YAAY,CAAC;IAC7I,CAAC;IAED,wDAAwD;IAChD,0BAA0B,CAAC,QAAe;QAChD,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC9B,YAAY,EAAE,CAAC;oBACb,MAAM,EAAE,CAAC;4BACP,MAAM,EAAE,+CAA+C;4BACvD,IAAI,EAAE,OAAO,CAAC,gBAAgB,IAAI,GAAG;4BACrC,OAAO,EAAE,OAAO,CAAC,YAAY,IAAI,mBAAmB;yBACrD,CAAC;iBACH,CAAC;YACF,IAAI,EAAE;gBACJ,MAAM,EAAE,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;gBAC1D,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE;aAC7F;YACD,OAAO,EAAE;gBACP,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI;gBAC7E,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI;aAC9E,CAAC,MAAM,CAAC,OAAO,CAAmB;SACpC,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,sBAAsB,CAAC,SAAgB;QAC7C,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5B,QAAQ,EAAE;gBACR,MAAM,EAAE,CAAC;wBACP,MAAM,EAAE,iBAAiB;wBACzB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI;wBACvB,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI;qBACnC,CAAC;aACH;YACD,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,KAAK;SACnC,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,+BAA+B,CAAC,SAAgB;QACtD,OAAO,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAChC,SAAS,EAAE,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,gBAAgB,QAAQ,EAAE,CAAC,CAAC,CAAC,gBAAgB,QAAQ,CAAC,EAAE,EAAE;YACpG,OAAO,EAAE,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,OAAO;SAC3C,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,qBAAqB,CAAC,cAAqB;QACjD,OAAO,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,KAAK,EAAE,EAAE,SAAS,EAAE,WAAW,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE;YAC5D,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,SAAS;SAC7B,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,uBAAuB,CAAC,cAAmB;QACjD,IAAI,CAAC,cAAc,EAAE,CAAC;YACpB,OAAO;gBACL,MAAM,EAAE,kDAAkD;gBAC1D,IAAI,EAAE,KAAK;gBACX,OAAO,EAAE,YAAY;aACtB,CAAC;QACJ,CAAC;QAED,OAAO;YACL,MAAM,EAAE,cAAc,CAAC,MAAM,IAAI,kDAAkD;YACnF,IAAI,EAAE,cAAc,CAAC,IAAI,IAAI,KAAK;YAClC,OAAO,EAAE,cAAc,CAAC,OAAO,IAAI,YAAY;SAChD,CAAC;IACJ,CAAC;IAEO,8BAA8B,CAAC,YAAmB;QACxD,OAAO,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/G,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/G,UAAU,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,gBAAgB,WAAW,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;SACjH,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,2BAA2B,CAAC,SAAgB;QAClD,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5B,SAAS,EAAE,EAAE,SAAS,EAAE,aAAa,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE;YACpE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YACnE,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC;SACrB,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,wBAAwB,CAAC,eAAoB;QACnD,IAAI,CAAC,eAAe;YAAE,OAAO,SAAS,CAAC;QAEvC,OAAO;YACL,sBAAsB,EAAE,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,SAAS;YAC9G,MAAM,EAAE,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,YAAY,eAAe,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;YACpH,WAAW,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;YACjH,WAAW,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;YACjH,cAAc,EAAE,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YACrJ,eAAe,EAAE,eAAe,CAAC,iBAAiB,CAAC,CAAC,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YAClK,kBAAkB,EAAE,eAAe,CAAC,mBAAmB,CAAC,CAAC,CAAC,eAAe,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,WAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/K,WAAW,EAAE,eAAe,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,YAAY,eAAe,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;YACnI,oBAAoB,EAAE,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS;SAC7I,CAAC;IACJ,CAAC;IAEO,2BAA2B,CAAC,SAAgB;QAClD,OAAO,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAC3B,QAAQ,EAAE,EAAE,SAAS,EAAE,YAAY,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE;YAC/D,MAAM,EAAE,GAAG,CAAC,MAAM,IAAI,QAAQ;YAC9B,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;YAC5F,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;SACxF,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,8BAA8B,CAAC,UAAiB;QACtD,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7E,CAAC;IAEO,4BAA4B,CAAC,UAAiB;QACpD,OAAO,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAClC,SAAS,EAAE,GAAG,SAAS,CAAC,YAAY,IAAI,cAAc,IAAI,SAAS,CAAC,EAAE,EAAE;YACxE,OAAO,EAAE,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,OAAO;SAC7C,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,cAAc,CAAC,KAAU;QAC/B,OAAO;YACL,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YAC9D,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SAClE,CAAC;IACJ,CAAC;IAEO,cAAc,CAAC,KAAU;QAC/B,OAAO;YACL,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;YAChF,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;SACvF,CAAC;IACJ,CAAC;IAEO,wBAAwB,CAAC,MAAa;QAC5C,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC1B,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YAC9D,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;YACjE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;YACxE,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,OAAY,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YACtH,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3D,IAAI,EAAE,KAAK,CAAC,IAAI;SACjB,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,8BAA8B,CAAC,UAAiB;QACtD,OAAO,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC7B,IAAI,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9C,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS;YAC1F,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS;YACtH,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;YAC9E,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;YAC9E,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS;YAC1F,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YAC9G,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;YAC1G,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YACjI,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS;SACvG,CAAC,CAAC,CAAC;IACN,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,sBAAsB,CAAC,QAAa,EAAE,WAAgB,EAAE,YAAoB;QAChF,MAAM,MAAM,GAAa,EAAE,CAAC;QAE5B,IAAI,CAAC;YACH,mBAAmB;YACnB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACtC,CAAC;YAED,IAAI,WAAW,CAAC,YAAY,KAAK,YAAY,EAAE,CAAC;gBAC9C,MAAM,CAAC,IAAI,CAAC,oCAAoC,YAAY,SAAS,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC;YACnG,CAAC;YAED,+BAA+B;YAC/B,QAAQ,YAAY,EAAE,CAAC;gBACrB,KAAK,SAAS;oBACZ,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;wBACvD,MAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;oBACrD,CAAC;oBACD,MAAM;gBACR,KAAK,WAAW;oBACd,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;wBACzB,MAAM,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;oBACzD,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBACxB,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;oBAC9C,CAAC;oBACD,MAAM;gBACR,KAAK,aAAa;oBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;oBAC9C,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;wBACzB,MAAM,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;oBAC3D,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBACxB,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;oBAChD,CAAC;oBACD,MAAM;YACV,CAAC;YAED,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;YAElC,IAAI,KAAK,EAAE,CAAC;gBACV,gBAAM,CAAC,KAAK,CAAC,wCAAwC,YAAY,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YACpG,CAAC;iBAAM,CAAC;gBACN,gBAAM,CAAC,IAAI,CAAC,wCAAwC,YAAY,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;YAC3G,CAAC;YAED,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QAC3B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,gBAAM,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YACxD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,qBAAqB,KAAK,EAAE,CAAC,EAAE,CAAC;QAClE,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CAAC,cAAmB,EAAE,aAAqD,YAAY;QAC1G,IAAI,CAAC;YACH,MAAM,MAAM,GAAW;gBACrB,YAAY,EAAE,QAAQ;gBACtB,EAAE,EAAE,cAAc,CAAC,EAAE,IAAI,UAAU,IAAI,CAAC,GAAG,EAAE,EAAE;gBAC/C,IAAI,EAAE;oBACJ,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;oBACrC,MAAM,EAAE,qBAAqB;iBAC9B;gBACD,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,KAAK,EAAE,cAAc,CAAC,SAAS,EAAE,MAAM,IAAI,CAAC;gBAC5C,KAAK,EAAE,EAAE;aACV,CAAC;YAEF,IAAI,cAAc,CAAC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxE,KAAK,MAAM,QAAQ,IAAI,cAAc,CAAC,SAAS,EAAE,CAAC;oBAChD,IAAI,CAAC;wBACH,IAAI,WAAW,CAAC;wBAEhB,QAAQ,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;4BAC/C,KAAK,SAAS;gCACZ,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;gCACpD,MAAM;4BACR,KAAK,WAAW;gCACd,WAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;gCACtD,MAAM;4BACR,KAAK,aAAa;gCAChB,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;gCACxD,MAAM;4BACR;gCACE,gBAAM,CAAC,IAAI,CAAC,oDAAoD,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gCACpH,SAAS;wBACb,CAAC;wBAED,MAAM,CAAC,KAAM,CAAC,IAAI,CAAC;4BACjB,QAAQ,EAAE,WAAW;4BACrB,OAAO,EAAE,UAAU,KAAK,aAAa,IAAI,UAAU,KAAK,OAAO,CAAC,CAAC,CAAC;gCAChE,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM;gCACpC,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,YAAY,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,YAAY;6BAC3F,CAAC,CAAC,CAAC,SAAS;yBACd,CAAC,CAAC;oBACL,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,gBAAM,CAAC,KAAK,CAAC,yCAAyC,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC5F,CAAC;gBACH,CAAC;YACH,CAAC;YAED,gBAAM,CAAC,IAAI,CAAC,iCAAiC,EAAE;gBAC7C,QAAQ,EAAE,MAAM,CAAC,EAAE;gBACnB,cAAc,EAAE,MAAM,CAAC,KAAK;gBAC5B,oBAAoB,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC;aAChD,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,gBAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;YACrD,MAAM,IAAI,KAAK,CAAC,iCAAiC,KAAK,EAAE,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;CACF;AA74BD,8DA64BC;AAED,4BAA4B;AACf,QAAA,yBAAyB,GAAG,IAAI,yBAAyB,EAAE,CAAC","names":[],"sources":["/Users/rodrigo/claude-projects/OmniCare/backend/src/services/fhir-transformation.service.ts"],"sourcesContent":["import {\n  Patient,\n  Practitioner,\n  Encounter,\n  Observation,\n  MedicationRequest,\n  DiagnosticReport,\n  Condition,\n  AllergyIntolerance,\n  CarePlan,\n  Organization,\n  Location,\n  Device,\n  Bundle,\n  HumanName,\n  ContactPoint,\n  Address,\n  Identifier,\n  CodeableConcept,\n  Coding,\n  Quantity,\n  Period,\n  Reference,\n  Extension,\n  Annotation\n} from '@medplum/fhirtypes';\n\nimport { \n  OmniCarePatient, \n  OmniCareEncounter, \n  OmniCareObservation \n} from '@/types/fhir';\nimport logger from '@/utils/logger';\n\n/**\n * FHIR Data Transformation Service\n * Handles transformation between OmniCare internal formats and FHIR R4 resources\n * Ensures compliance with FHIR R4 specifications while maintaining OmniCare-specific extensions\n */\nexport class FHIRTransformationService {\n\n  // ===============================\n  // PATIENT TRANSFORMATIONS\n  // ===============================\n\n  /**\n   * Transform OmniCare patient data to FHIR Patient resource\n   */\n  transformToFHIRPatient(omnicarePatient: any): OmniCarePatient {\n    try {\n      const patient: OmniCarePatient = {\n        resourceType: 'Patient',\n        id: omnicarePatient.id || undefined,\n        meta: {\n          profile: ['http://omnicare.com/fhir/StructureDefinition/OmniCarePatient'],\n          lastUpdated: new Date().toISOString(),\n          versionId: '1',\n          source: 'OmniCare EMR System'\n        },\n        active: omnicarePatient.active !== false,\n        \n        // Transform names\n        name: this.transformNames(omnicarePatient.names || omnicarePatient.name || []),\n        \n        // Transform identifiers\n        identifier: this.transformIdentifiers(omnicarePatient.identifiers || omnicarePatient.identifier || [], omnicarePatient.mrn),\n        \n        // Basic demographics\n        gender: this.transformGender(omnicarePatient.gender),\n        birthDate: this.transformDate(omnicarePatient.birthDate || omnicarePatient.dateOfBirth),\n        deceasedBoolean: omnicarePatient.deceased || false,\n        deceasedDateTime: omnicarePatient.dateOfDeath ? this.transformDateTime(omnicarePatient.dateOfDeath) : undefined,\n        \n        // Contact information\n        telecom: this.transformTelecom(omnicarePatient.contacts || omnicarePatient.telecom || []),\n        address: this.transformAddresses(omnicarePatient.addresses || omnicarePatient.address || []),\n        \n        // Marital status\n        maritalStatus: omnicarePatient.maritalStatus ? this.transformCodeableConcept(omnicarePatient.maritalStatus) : undefined,\n        \n        // Multiple birth\n        multipleBirthBoolean: omnicarePatient.multipleBirth || false,\n        multipleBirthInteger: omnicarePatient.birthOrder || undefined,\n        \n        // Photo\n        photo: omnicarePatient.photo ? [{ contentType: 'image/jpeg', data: omnicarePatient.photo }] : undefined,\n        \n        // Emergency contacts\n        contact: this.transformEmergencyContacts(omnicarePatient.emergencyContacts || []),\n        \n        // Communication preferences\n        communication: this.transformCommunication(omnicarePatient.languages || []),\n        \n        // Care providers\n        generalPractitioner: this.transformPractitionerReferences(omnicarePatient.primaryCareProviders || []),\n        managingOrganization: omnicarePatient.managingOrganization ? { reference: `Organization/${omnicarePatient.managingOrganization}` } : undefined,\n        \n        // Links to other patients\n        link: omnicarePatient.linkedPatients ? this.transformPatientLinks(omnicarePatient.linkedPatients) : undefined,\n\n        // OmniCare-specific extensions\n        extension: [\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/registration-date',\n            valueDateTime: omnicarePatient.registrationDate || new Date().toISOString()\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/preferred-language',\n            valueString: omnicarePatient.preferredLanguage || 'en'\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/patient-portal-access',\n            valueBoolean: omnicarePatient.portalAccess || false\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/insurance-verification-status',\n            valueString: omnicarePatient.insuranceStatus || 'pending'\n          }\n        ].filter(ext => ext.valueDateTime || ext.valueString || ext.valueBoolean !== undefined),\n\n        // Set OmniCare-specific properties\n        omnicarePatientId: omnicarePatient.omnicareId || omnicarePatient.id,\n        registrationDate: omnicarePatient.registrationDate,\n        preferredLanguage: omnicarePatient.preferredLanguage,\n        emergencyContact: omnicarePatient.emergencyContact,\n        insuranceInformation: omnicarePatient.insurance\n      };\n\n      logger.debug('Transformed OmniCare patient to FHIR', { patientId: patient.id });\n      return patient;\n    } catch (error) {\n      logger.error('Failed to transform patient to FHIR:', error);\n      throw new Error(`Patient transformation failed: ${error}`);\n    }\n  }\n\n  /**\n   * Transform FHIR Patient resource to OmniCare format\n   */\n  transformFromFHIRPatient(fhirPatient: Patient): any {\n    try {\n      const omnicarePatient = {\n        id: fhirPatient.id,\n        mrn: this.extractMRN(fhirPatient.identifier || []),\n        active: fhirPatient.active !== false,\n        \n        // Extract name information\n        firstName: fhirPatient.name?.[0]?.given?.[0] || '',\n        middleName: fhirPatient.name?.[0]?.given?.[1] || '',\n        lastName: fhirPatient.name?.[0]?.family || '',\n        preferredName: fhirPatient.name?.find(n => n.use === 'nickname')?.given?.[0] || '',\n        \n        // Demographics\n        gender: fhirPatient.gender,\n        dateOfBirth: fhirPatient.birthDate,\n        deceased: fhirPatient.deceasedBoolean || false,\n        dateOfDeath: fhirPatient.deceasedDateTime,\n        \n        // Contact information\n        phoneNumbers: this.extractPhoneNumbers(fhirPatient.telecom || []),\n        emailAddresses: this.extractEmailAddresses(fhirPatient.telecom || []),\n        addresses: this.extractAddresses(fhirPatient.address || []),\n        \n        // Additional information\n        maritalStatus: fhirPatient.maritalStatus?.coding?.[0]?.code,\n        emergencyContacts: this.extractEmergencyContacts(fhirPatient.contact || []),\n        languages: this.extractLanguages(fhirPatient.communication || []),\n        \n        // OmniCare-specific fields\n        omnicareId: this.extractExtensionValue(fhirPatient.extension, 'http://omnicare.com/fhir/StructureDefinition/omnicare-patient-id'),\n        registrationDate: this.extractExtensionValue(fhirPatient.extension, 'http://omnicare.com/fhir/StructureDefinition/registration-date'),\n        preferredLanguage: this.extractExtensionValue(fhirPatient.extension, 'http://omnicare.com/fhir/StructureDefinition/preferred-language'),\n        portalAccess: this.extractExtensionValue(fhirPatient.extension, 'http://omnicare.com/fhir/StructureDefinition/patient-portal-access'),\n        insuranceStatus: this.extractExtensionValue(fhirPatient.extension, 'http://omnicare.com/fhir/StructureDefinition/insurance-verification-status'),\n        \n        // Metadata\n        lastUpdated: fhirPatient.meta?.lastUpdated,\n        version: fhirPatient.meta?.versionId\n      };\n\n      logger.debug('Transformed FHIR patient to OmniCare format', { patientId: omnicarePatient.id });\n      return omnicarePatient;\n    } catch (error) {\n      logger.error('Failed to transform FHIR patient to OmniCare format:', error);\n      throw new Error(`Patient transformation failed: ${error}`);\n    }\n  }\n\n  // ===============================\n  // ENCOUNTER TRANSFORMATIONS\n  // ===============================\n\n  /**\n   * Transform OmniCare encounter data to FHIR Encounter resource\n   */\n  transformToFHIREncounter(omnicareEncounter: any): OmniCareEncounter {\n    try {\n      const encounter: OmniCareEncounter = {\n        resourceType: 'Encounter',\n        id: omnicareEncounter.id || undefined,\n        meta: {\n          profile: ['http://omnicare.com/fhir/StructureDefinition/OmniCareEncounter'],\n          lastUpdated: new Date().toISOString(),\n          versionId: '1',\n          source: 'OmniCare EMR System'\n        },\n        \n        // Identifiers\n        identifier: this.transformIdentifiers(omnicareEncounter.identifiers || [], omnicareEncounter.encounterId),\n        \n        // Status and class\n        status: this.mapEncounterStatus(omnicareEncounter.status),\n        class: this.transformEncounterClass(omnicareEncounter.type || omnicareEncounter.class),\n        \n        // Type\n        type: omnicareEncounter.encounterTypes ? omnicareEncounter.encounterTypes.map((type: any) => this.transformCodeableConcept(type)) : undefined,\n        \n        // Service type\n        serviceType: omnicareEncounter.serviceType ? this.transformCodeableConcept(omnicareEncounter.serviceType) : undefined,\n        \n        // Priority\n        priority: omnicareEncounter.priority ? this.transformCodeableConcept(omnicareEncounter.priority) : undefined,\n        \n        // Patient reference\n        subject: { reference: `Patient/${omnicareEncounter.patientId}` },\n        \n        // Episode of care\n        episodeOfCare: omnicareEncounter.episodeOfCare ? [{ reference: `EpisodeOfCare/${omnicareEncounter.episodeOfCare}` }] : undefined,\n        \n        // Incoming referral\n        basedOn: omnicareEncounter.referrals ? omnicareEncounter.referrals.map((ref: string) => ({ reference: `ServiceRequest/${ref}` })) : undefined,\n        \n        // Participants (providers, interpreters, etc.)\n        participant: this.transformEncounterParticipants(omnicareEncounter.participants || []),\n        \n        // Appointment\n        appointment: omnicareEncounter.appointmentId ? [{ reference: `Appointment/${omnicareEncounter.appointmentId}` }] : undefined,\n        \n        // Period\n        period: this.transformPeriod(omnicareEncounter.startTime, omnicareEncounter.endTime),\n        \n        // Length\n        length: omnicareEncounter.duration ? { value: omnicareEncounter.duration, unit: 'min', system: 'http://unitsofmeasure.org', code: 'min' } : undefined,\n        \n        // Reason\n        reasonCode: omnicareEncounter.reasonCodes ? omnicareEncounter.reasonCodes.map((code: any) => this.transformCodeableConcept(code)) : undefined,\n        reasonReference: omnicareEncounter.reasonReferences ? omnicareEncounter.reasonReferences.map((ref: string) => ({ reference: ref })) : undefined,\n        \n        // Diagnosis\n        diagnosis: this.transformEncounterDiagnoses(omnicareEncounter.diagnoses || []),\n        \n        // Account\n        account: omnicareEncounter.accountId ? [{ reference: `Account/${omnicareEncounter.accountId}` }] : undefined,\n        \n        // Hospitalization\n        hospitalization: this.transformHospitalization(omnicareEncounter.hospitalization),\n        \n        // Location\n        location: this.transformEncounterLocations(omnicareEncounter.locations || []),\n        \n        // Service provider\n        serviceProvider: omnicareEncounter.serviceProviderId ? { reference: `Organization/${omnicareEncounter.serviceProviderId}` } : undefined,\n        \n        // Part of\n        partOf: omnicareEncounter.parentEncounterId ? { reference: `Encounter/${omnicareEncounter.parentEncounterId}` } : undefined,\n\n        // OmniCare-specific extensions\n        extension: [\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/appointment-type',\n            valueString: omnicareEncounter.appointmentType || 'routine'\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/chief-complaint',\n            valueString: omnicareEncounter.chiefComplaint || ''\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/visit-summary',\n            valueString: omnicareEncounter.visitSummary || ''\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/follow-up-instructions',\n            valueString: omnicareEncounter.followUpInstructions || ''\n          }\n        ].filter(ext => ext.valueString),\n\n        // Set OmniCare-specific properties\n        omnicareEncounterId: omnicareEncounter.omnicareId || omnicareEncounter.id,\n        appointmentType: omnicareEncounter.appointmentType,\n        chiefComplaint: omnicareEncounter.chiefComplaint,\n        visitSummary: omnicareEncounter.visitSummary,\n        followUpInstructions: omnicareEncounter.followUpInstructions,\n        billingNotes: omnicareEncounter.billingNotes\n      };\n\n      logger.debug('Transformed OmniCare encounter to FHIR', { encounterId: encounter.id });\n      return encounter;\n    } catch (error) {\n      logger.error('Failed to transform encounter to FHIR:', error);\n      throw new Error(`Encounter transformation failed: ${error}`);\n    }\n  }\n\n  // ===============================\n  // OBSERVATION TRANSFORMATIONS\n  // ===============================\n\n  /**\n   * Transform OmniCare observation data to FHIR Observation resource\n   */\n  transformToFHIRObservation(omnicareObservation: any): OmniCareObservation {\n    try {\n      const observation: OmniCareObservation = {\n        resourceType: 'Observation',\n        id: omnicareObservation.id || undefined,\n        meta: {\n          profile: ['http://omnicare.com/fhir/StructureDefinition/OmniCareObservation'],\n          lastUpdated: new Date().toISOString(),\n          versionId: '1',\n          source: 'OmniCare EMR System'\n        },\n        \n        // Identifiers\n        identifier: this.transformIdentifiers(omnicareObservation.identifiers || [], omnicareObservation.observationId),\n        \n        // Based on\n        basedOn: omnicareObservation.orderIds ? omnicareObservation.orderIds.map((id: string) => ({ reference: `ServiceRequest/${id}` })) : undefined,\n        \n        // Part of\n        partOf: omnicareObservation.partOfIds ? omnicareObservation.partOfIds.map((id: string) => ({ reference: `MedicationAdministration/${id}` })) : undefined,\n        \n        // Status\n        status: this.mapObservationStatus(omnicareObservation.status),\n        \n        // Category\n        category: this.transformObservationCategories(omnicareObservation.categories || []),\n        \n        // Code\n        code: this.transformCodeableConcept(omnicareObservation.code),\n        \n        // Subject\n        subject: { reference: `Patient/${omnicareObservation.patientId}` },\n        \n        // Focus\n        focus: omnicareObservation.focusIds ? omnicareObservation.focusIds.map((id: string) => ({ reference: id })) : undefined,\n        \n        // Encounter\n        encounter: omnicareObservation.encounterId ? { reference: `Encounter/${omnicareObservation.encounterId}` } : undefined,\n        \n        // Effective time\n        effectiveDateTime: this.transformDateTime(omnicareObservation.effectiveTime || omnicareObservation.observationTime),\n        effectivePeriod: omnicareObservation.effectivePeriod ? this.transformPeriod(omnicareObservation.effectivePeriod.start, omnicareObservation.effectivePeriod.end) : undefined,\n        \n        // Issued\n        issued: omnicareObservation.issuedTime ? this.transformDateTime(omnicareObservation.issuedTime) : undefined,\n        \n        // Performer\n        performer: this.transformPerformerReferences(omnicareObservation.performers || []),\n        \n        // Value\n        valueQuantity: omnicareObservation.valueQuantity ? this.transformQuantity(omnicareObservation.valueQuantity) : undefined,\n        valueCodeableConcept: omnicareObservation.valueCodeableConcept ? this.transformCodeableConcept(omnicareObservation.valueCodeableConcept) : undefined,\n        valueString: omnicareObservation.valueString,\n        valueBoolean: omnicareObservation.valueBoolean,\n        valueInteger: omnicareObservation.valueInteger,\n        valueRange: omnicareObservation.valueRange ? this.transformRange(omnicareObservation.valueRange) : undefined,\n        valueRatio: omnicareObservation.valueRatio ? this.transformRatio(omnicareObservation.valueRatio) : undefined,\n        valueSampledData: omnicareObservation.valueSampledData,\n        valueTime: omnicareObservation.valueTime,\n        valueDateTime: omnicareObservation.valueDateTime ? this.transformDateTime(omnicareObservation.valueDateTime) : undefined,\n        valuePeriod: omnicareObservation.valuePeriod ? this.transformPeriod(omnicareObservation.valuePeriod.start, omnicareObservation.valuePeriod.end) : undefined,\n        \n        // Data absent reason\n        dataAbsentReason: omnicareObservation.dataAbsentReason ? this.transformCodeableConcept(omnicareObservation.dataAbsentReason) : undefined,\n        \n        // Interpretation\n        interpretation: omnicareObservation.interpretation ? omnicareObservation.interpretation.map((interp: any) => this.transformCodeableConcept(interp)) : undefined,\n        \n        // Note\n        note: omnicareObservation.notes ? omnicareObservation.notes.map((note: any) => this.transformAnnotation(note)) : undefined,\n        \n        // Body site\n        bodySite: omnicareObservation.bodySite ? this.transformCodeableConcept(omnicareObservation.bodySite) : undefined,\n        \n        // Method\n        method: omnicareObservation.method ? this.transformCodeableConcept(omnicareObservation.method) : undefined,\n        \n        // Specimen\n        specimen: omnicareObservation.specimenId ? { reference: `Specimen/${omnicareObservation.specimenId}` } : undefined,\n        \n        // Device\n        device: omnicareObservation.deviceId ? { reference: `Device/${omnicareObservation.deviceId}` } : undefined,\n        \n        // Reference range\n        referenceRange: this.transformReferenceRanges(omnicareObservation.referenceRanges || []),\n        \n        // Has member\n        hasMember: omnicareObservation.memberIds ? omnicareObservation.memberIds.map((id: string) => ({ reference: `Observation/${id}` })) : undefined,\n        \n        // Derived from\n        derivedFrom: omnicareObservation.derivedFromIds ? omnicareObservation.derivedFromIds.map((id: string) => ({ reference: id })) : undefined,\n        \n        // Component\n        component: this.transformObservationComponents(omnicareObservation.components || []),\n\n        // OmniCare-specific extensions\n        extension: [\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/device-used',\n            valueString: omnicareObservation.deviceUsed || ''\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/quality-flags',\n            valueString: omnicareObservation.qualityFlags ? omnicareObservation.qualityFlags.join(',') : ''\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/abnormal-flags',\n            valueString: omnicareObservation.abnormalFlags ? omnicareObservation.abnormalFlags.join(',') : ''\n          },\n          {\n            url: 'http://omnicare.com/fhir/StructureDefinition/critical-alerts',\n            valueBoolean: omnicareObservation.criticalAlerts || false\n          }\n        ].filter(ext => ext.valueString || ext.valueBoolean !== undefined),\n\n        // Set OmniCare-specific properties\n        omnicareObservationId: omnicareObservation.omnicareId || omnicareObservation.id,\n        deviceUsed: omnicareObservation.deviceUsed,\n        qualityFlags: omnicareObservation.qualityFlags,\n        abnormalFlags: omnicareObservation.abnormalFlags,\n        criticalAlerts: omnicareObservation.criticalAlerts\n      };\n\n      logger.debug('Transformed OmniCare observation to FHIR', { observationId: observation.id });\n      return observation;\n    } catch (error) {\n      logger.error('Failed to transform observation to FHIR:', error);\n      throw new Error(`Observation transformation failed: ${error}`);\n    }\n  }\n\n  // ===============================\n  // UTILITY TRANSFORMATION METHODS\n  // ===============================\n\n  private transformNames(names: any[]): HumanName[] {\n    return names.map(name => ({\n      use: name.use || 'official',\n      family: name.family || name.lastName,\n      given: [name.given, name.firstName, name.middleName].filter(Boolean).flat(),\n      prefix: name.prefix ? [name.prefix] : undefined,\n      suffix: name.suffix ? [name.suffix] : undefined,\n      period: name.period ? this.transformPeriod(name.period.start, name.period.end) : undefined\n    }));\n  }\n\n  private transformIdentifiers(identifiers: any[], mrn?: string): Identifier[] {\n    const transformed = identifiers.map(id => ({\n      use: id.use || 'usual',\n      type: id.type ? this.transformCodeableConcept(id.type) : undefined,\n      system: id.system,\n      value: id.value,\n      period: id.period ? this.transformPeriod(id.period.start, id.period.end) : undefined,\n      assigner: id.assigner ? { reference: id.assigner } : undefined\n    }));\n\n    // Add MRN if provided\n    if (mrn && !identifiers.find(id => id.type?.coding?.[0]?.code === 'MR')) {\n      transformed.push({\n        use: 'usual',\n        type: {\n          coding: [{\n            system: 'http://terminology.hl7.org/CodeSystem/v2-0203',\n            code: 'MR',\n            display: 'Medical Record Number'\n          }]\n        },\n        system: 'http://omnicare.com/patient-id',\n        value: mrn\n      });\n    }\n\n    return transformed;\n  }\n\n  private transformGender(gender: string): 'male' | 'female' | 'other' | 'unknown' | undefined {\n    if (!gender) return undefined;\n    const normalized = gender.toLowerCase();\n    if (['male', 'm'].includes(normalized)) return 'male';\n    if (['female', 'f'].includes(normalized)) return 'female';\n    if (['other', 'o'].includes(normalized)) return 'other';\n    return 'unknown';\n  }\n\n  private transformDate(date: string | Date): string | undefined {\n    if (!date) return undefined;\n    if (date instanceof Date) return date.toISOString().split('T')[0];\n    if (typeof date === 'string') {\n      const parsed = new Date(date);\n      return parsed.toISOString().split('T')[0];\n    }\n    return undefined;\n  }\n\n  private transformDateTime(dateTime: string | Date): string | undefined {\n    if (!dateTime) return undefined;\n    if (dateTime instanceof Date) return dateTime.toISOString();\n    if (typeof dateTime === 'string') {\n      const parsed = new Date(dateTime);\n      return parsed.toISOString();\n    }\n    return undefined;\n  }\n\n  private transformTelecom(contacts: any[]): ContactPoint[] {\n    return contacts.map(contact => ({\n      system: this.mapContactSystem(contact.type || contact.system),\n      value: contact.value || contact.number || contact.email,\n      use: contact.use || 'home',\n      rank: contact.rank || 1,\n      period: contact.period ? this.transformPeriod(contact.period.start, contact.period.end) : undefined\n    }));\n  }\n\n  private transformAddresses(addresses: any[]): Address[] {\n    return addresses.map(addr => ({\n      use: addr.use || 'home',\n      type: addr.type || 'both',\n      text: addr.text,\n      line: [addr.line1, addr.line2, addr.street, addr.streetAddress].filter(Boolean),\n      city: addr.city,\n      district: addr.district || addr.county,\n      state: addr.state || addr.stateProvince,\n      postalCode: addr.postalCode || addr.zipCode,\n      country: addr.country,\n      period: addr.period ? this.transformPeriod(addr.period.start, addr.period.end) : undefined\n    }));\n  }\n\n  private transformCodeableConcept(concept: any): CodeableConcept {\n    if (!concept) return { text: 'Unknown' };\n    \n    return {\n      coding: concept.coding ? concept.coding.map((c: any) => ({\n        system: c.system,\n        version: c.version,\n        code: c.code,\n        display: c.display,\n        userSelected: c.userSelected\n      })) : concept.code ? [{\n        system: concept.system,\n        code: concept.code,\n        display: concept.display\n      }] : undefined,\n      text: concept.text || concept.display || concept.name\n    };\n  }\n\n  private transformQuantity(quantity: any): Quantity {\n    return {\n      value: quantity.value,\n      comparator: quantity.comparator,\n      unit: quantity.unit,\n      system: quantity.system || 'http://unitsofmeasure.org',\n      code: quantity.code || quantity.unit\n    };\n  }\n\n  private transformPeriod(start?: string | Date, end?: string | Date): Period | undefined {\n    if (!start && !end) return undefined;\n    return {\n      start: start ? this.transformDateTime(start) : undefined,\n      end: end ? this.transformDateTime(end) : undefined\n    };\n  }\n\n  private transformAnnotation(note: any): Annotation {\n    return {\n      authorReference: note.authorId ? { reference: `Practitioner/${note.authorId}` } : undefined,\n      authorString: note.authorName,\n      time: note.time ? this.transformDateTime(note.time) : undefined,\n      text: note.text || note.content\n    };\n  }\n\n  private mapContactSystem(type: string): 'phone' | 'fax' | 'email' | 'pager' | 'url' | 'sms' | 'other' {\n    const normalized = type?.toLowerCase();\n    if (['phone', 'mobile', 'cell'].includes(normalized)) return 'phone';\n    if (['fax'].includes(normalized)) return 'fax';\n    if (['email'].includes(normalized)) return 'email';\n    if (['pager'].includes(normalized)) return 'pager';\n    if (['url', 'web', 'website'].includes(normalized)) return 'url';\n    if (['sms', 'text'].includes(normalized)) return 'sms';\n    return 'other';\n  }\n\n  private mapEncounterStatus(status?: string): 'planned' | 'arrived' | 'triaged' | 'in-progress' | 'onleave' | 'finished' | 'cancelled' | 'entered-in-error' | 'unknown' {\n    const normalized = status?.toLowerCase();\n    if (['planned', 'scheduled'].includes(normalized)) return 'planned';\n    if (['arrived', 'checked-in'].includes(normalized)) return 'arrived';\n    if (['triaged'].includes(normalized)) return 'triaged';\n    if (['in-progress', 'active', 'ongoing'].includes(normalized)) return 'in-progress';\n    if (['onleave', 'on-leave'].includes(normalized)) return 'onleave';\n    if (['finished', 'completed', 'discharged'].includes(normalized)) return 'finished';\n    if (['cancelled', 'canceled'].includes(normalized)) return 'cancelled';\n    if (['entered-in-error', 'error'].includes(normalized)) return 'entered-in-error';\n    return 'unknown';\n  }\n\n  private mapObservationStatus(status?: string): 'registered' | 'preliminary' | 'final' | 'amended' | 'corrected' | 'cancelled' | 'entered-in-error' | 'unknown' {\n    const normalized = status?.toLowerCase();\n    if (['registered'].includes(normalized)) return 'registered';\n    if (['preliminary', 'pending'].includes(normalized)) return 'preliminary';\n    if (['final', 'completed'].includes(normalized)) return 'final';\n    if (['amended'].includes(normalized)) return 'amended';\n    if (['corrected'].includes(normalized)) return 'corrected';\n    if (['cancelled', 'canceled'].includes(normalized)) return 'cancelled';\n    if (['entered-in-error', 'error'].includes(normalized)) return 'entered-in-error';\n    return 'unknown';\n  }\n\n  // Helper methods for extracting data from FHIR resources\n  private extractMRN(identifiers: Identifier[]): string {\n    const mrn = identifiers.find(id => id.type?.coding?.[0]?.code === 'MR');\n    return mrn?.value || '';\n  }\n\n  private extractPhoneNumbers(telecom: ContactPoint[]): string[] {\n    return telecom.filter(t => t.system === 'phone').map(t => t.value || '');\n  }\n\n  private extractEmailAddresses(telecom: ContactPoint[]): string[] {\n    return telecom.filter(t => t.system === 'email').map(t => t.value || '');\n  }\n\n  private extractAddresses(addresses: Address[]): any[] {\n    return addresses.map(addr => ({\n      line1: addr.line?.[0] || '',\n      line2: addr.line?.[1] || '',\n      city: addr.city || '',\n      state: addr.state || '',\n      postalCode: addr.postalCode || '',\n      country: addr.country || '',\n      use: addr.use || 'home'\n    }));\n  }\n\n  private extractEmergencyContacts(contacts: Patient['contact']): any[] {\n    return (contacts || []).map(contact => ({\n      name: contact.name ? `${contact.name.given?.join(' ')} ${contact.name.family}`.trim() : '',\n      relationship: contact.relationship?.[0]?.coding?.[0]?.display || '',\n      phone: contact.telecom?.find(t => t.system === 'phone')?.value || '',\n      email: contact.telecom?.find(t => t.system === 'email')?.value || ''\n    }));\n  }\n\n  private extractLanguages(communication: Patient['communication']): string[] {\n    return (communication || []).map(comm => comm.language?.coding?.[0]?.code || '');\n  }\n\n  private extractExtensionValue(extensions: Extension[] | undefined, url: string): any {\n    const extension = extensions?.find(ext => ext.url === url);\n    return extension?.valueString || extension?.valueBoolean || extension?.valueDateTime || extension?.valueInteger || extension?.valueDecimal;\n  }\n\n  // Additional helper methods for complex transformations\n  private transformEmergencyContacts(contacts: any[]): Patient['contact'] {\n    return contacts.map(contact => ({\n      relationship: [{\n        coding: [{\n          system: 'http://terminology.hl7.org/CodeSystem/v2-0131',\n          code: contact.relationshipCode || 'C',\n          display: contact.relationship || 'Emergency Contact'\n        }]\n      }],\n      name: {\n        family: contact.lastName || contact.name?.split(' ').pop(),\n        given: contact.firstName ? [contact.firstName] : contact.name?.split(' ').slice(0, -1) || []\n      },\n      telecom: [\n        contact.phone ? { system: 'phone', value: contact.phone, use: 'home' } : null,\n        contact.email ? { system: 'email', value: contact.email, use: 'home' } : null\n      ].filter(Boolean) as ContactPoint[]\n    }));\n  }\n\n  private transformCommunication(languages: any[]): Patient['communication'] {\n    return languages.map(lang => ({\n      language: {\n        coding: [{\n          system: 'urn:ietf:bcp:47',\n          code: lang.code || lang,\n          display: lang.display || lang.name\n        }]\n      },\n      preferred: lang.preferred || false\n    }));\n  }\n\n  private transformPractitionerReferences(providers: any[]): Reference[] {\n    return providers.map(provider => ({\n      reference: typeof provider === 'string' ? `Practitioner/${provider}` : `Practitioner/${provider.id}`,\n      display: provider.name || provider.display\n    }));\n  }\n\n  private transformPatientLinks(linkedPatients: any[]): Patient['link'] {\n    return linkedPatients.map(link => ({\n      other: { reference: `Patient/${link.patientId || link.id}` },\n      type: link.type || 'seealso'\n    }));\n  }\n\n  private transformEncounterClass(encounterClass: any): Encounter['class'] {\n    if (!encounterClass) {\n      return {\n        system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode',\n        code: 'AMB',\n        display: 'Ambulatory'\n      };\n    }\n\n    return {\n      system: encounterClass.system || 'http://terminology.hl7.org/CodeSystem/v3-ActCode',\n      code: encounterClass.code || 'AMB',\n      display: encounterClass.display || 'Ambulatory'\n    };\n  }\n\n  private transformEncounterParticipants(participants: any[]): Encounter['participant'] {\n    return participants.map(participant => ({\n      type: participant.types ? participant.types.map((type: any) => this.transformCodeableConcept(type)) : undefined,\n      period: participant.period ? this.transformPeriod(participant.period.start, participant.period.end) : undefined,\n      individual: participant.practitionerId ? { reference: `Practitioner/${participant.practitionerId}` } : undefined\n    }));\n  }\n\n  private transformEncounterDiagnoses(diagnoses: any[]): Encounter['diagnosis'] {\n    return diagnoses.map(diag => ({\n      condition: { reference: `Condition/${diag.conditionId || diag.id}` },\n      use: diag.use ? this.transformCodeableConcept(diag.use) : undefined,\n      rank: diag.rank || 1\n    }));\n  }\n\n  private transformHospitalization(hospitalization: any): Encounter['hospitalization'] {\n    if (!hospitalization) return undefined;\n\n    return {\n      preAdmissionIdentifier: hospitalization.preAdmissionId ? { value: hospitalization.preAdmissionId } : undefined,\n      origin: hospitalization.originLocationId ? { reference: `Location/${hospitalization.originLocationId}` } : undefined,\n      admitSource: hospitalization.admitSource ? this.transformCodeableConcept(hospitalization.admitSource) : undefined,\n      reAdmission: hospitalization.reAdmission ? this.transformCodeableConcept(hospitalization.reAdmission) : undefined,\n      dietPreference: hospitalization.dietPreferences ? hospitalization.dietPreferences.map((diet: any) => this.transformCodeableConcept(diet)) : undefined,\n      specialCourtesy: hospitalization.specialCourtesies ? hospitalization.specialCourtesies.map((courtesy: any) => this.transformCodeableConcept(courtesy)) : undefined,\n      specialArrangement: hospitalization.specialArrangements ? hospitalization.specialArrangements.map((arrangement: any) => this.transformCodeableConcept(arrangement)) : undefined,\n      destination: hospitalization.destinationLocationId ? { reference: `Location/${hospitalization.destinationLocationId}` } : undefined,\n      dischargeDisposition: hospitalization.dischargeDisposition ? this.transformCodeableConcept(hospitalization.dischargeDisposition) : undefined\n    };\n  }\n\n  private transformEncounterLocations(locations: any[]): Encounter['location'] {\n    return locations.map(loc => ({\n      location: { reference: `Location/${loc.locationId || loc.id}` },\n      status: loc.status || 'active',\n      physicalType: loc.physicalType ? this.transformCodeableConcept(loc.physicalType) : undefined,\n      period: loc.period ? this.transformPeriod(loc.period.start, loc.period.end) : undefined\n    }));\n  }\n\n  private transformObservationCategories(categories: any[]): Observation['category'] {\n    return categories.map(category => this.transformCodeableConcept(category));\n  }\n\n  private transformPerformerReferences(performers: any[]): Reference[] {\n    return performers.map(performer => ({\n      reference: `${performer.resourceType || 'Practitioner'}/${performer.id}`,\n      display: performer.name || performer.display\n    }));\n  }\n\n  private transformRange(range: any): any {\n    return {\n      low: range.low ? this.transformQuantity(range.low) : undefined,\n      high: range.high ? this.transformQuantity(range.high) : undefined\n    };\n  }\n\n  private transformRatio(ratio: any): any {\n    return {\n      numerator: ratio.numerator ? this.transformQuantity(ratio.numerator) : undefined,\n      denominator: ratio.denominator ? this.transformQuantity(ratio.denominator) : undefined\n    };\n  }\n\n  private transformReferenceRanges(ranges: any[]): Observation['referenceRange'] {\n    return ranges.map(range => ({\n      low: range.low ? this.transformQuantity(range.low) : undefined,\n      high: range.high ? this.transformQuantity(range.high) : undefined,\n      type: range.type ? this.transformCodeableConcept(range.type) : undefined,\n      appliesTo: range.appliesTo ? range.appliesTo.map((applies: any) => this.transformCodeableConcept(applies)) : undefined,\n      age: range.age ? this.transformRange(range.age) : undefined,\n      text: range.text\n    }));\n  }\n\n  private transformObservationComponents(components: any[]): Observation['component'] {\n    return components.map(comp => ({\n      code: this.transformCodeableConcept(comp.code),\n      valueQuantity: comp.valueQuantity ? this.transformQuantity(comp.valueQuantity) : undefined,\n      valueCodeableConcept: comp.valueCodeableConcept ? this.transformCodeableConcept(comp.valueCodeableConcept) : undefined,\n      valueString: comp.valueString,\n      valueBoolean: comp.valueBoolean,\n      valueInteger: comp.valueInteger,\n      valueRange: comp.valueRange ? this.transformRange(comp.valueRange) : undefined,\n      valueRatio: comp.valueRatio ? this.transformRatio(comp.valueRatio) : undefined,\n      valueSampledData: comp.valueSampledData,\n      valueTime: comp.valueTime,\n      valueDateTime: comp.valueDateTime ? this.transformDateTime(comp.valueDateTime) : undefined,\n      valuePeriod: comp.valuePeriod ? this.transformPeriod(comp.valuePeriod.start, comp.valuePeriod.end) : undefined,\n      dataAbsentReason: comp.dataAbsentReason ? this.transformCodeableConcept(comp.dataAbsentReason) : undefined,\n      interpretation: comp.interpretation ? comp.interpretation.map((interp: any) => this.transformCodeableConcept(interp)) : undefined,\n      referenceRange: comp.referenceRanges ? this.transformReferenceRanges(comp.referenceRanges) : undefined\n    }));\n  }\n\n  /**\n   * Validate transformation results\n   */\n  async validateTransformation(original: any, transformed: any, resourceType: string): Promise<{ valid: boolean; errors: string[] }> {\n    const errors: string[] = [];\n\n    try {\n      // Basic validation\n      if (!transformed.resourceType) {\n        errors.push('Missing resourceType');\n      }\n\n      if (transformed.resourceType !== resourceType) {\n        errors.push(`Resource type mismatch: expected ${resourceType}, got ${transformed.resourceType}`);\n      }\n\n      // Resource-specific validation\n      switch (resourceType) {\n        case 'Patient':\n          if (!transformed.name || transformed.name.length === 0) {\n            errors.push('Patient must have at least one name');\n          }\n          break;\n        case 'Encounter':\n          if (!transformed.subject) {\n            errors.push('Encounter must have a subject reference');\n          }\n          if (!transformed.status) {\n            errors.push('Encounter must have a status');\n          }\n          break;\n        case 'Observation':\n          if (!transformed.code) {\n            errors.push('Observation must have a code');\n          }\n          if (!transformed.subject) {\n            errors.push('Observation must have a subject reference');\n          }\n          if (!transformed.status) {\n            errors.push('Observation must have a status');\n          }\n          break;\n      }\n\n      const valid = errors.length === 0;\n      \n      if (valid) {\n        logger.debug(`Transformation validation passed for ${resourceType}`, { originalId: original.id });\n      } else {\n        logger.warn(`Transformation validation failed for ${resourceType}`, { errors, originalId: original.id });\n      }\n\n      return { valid, errors };\n    } catch (error) {\n      logger.error('Transformation validation error:', error);\n      return { valid: false, errors: [`Validation error: ${error}`] };\n    }\n  }\n\n  /**\n   * Transform bundle of resources\n   */\n  async transformBundle(omnicareBundle: any, bundleType: 'transaction' | 'batch' | 'collection' = 'collection'): Promise<Bundle> {\n    try {\n      const bundle: Bundle = {\n        resourceType: 'Bundle',\n        id: omnicareBundle.id || `bundle-${Date.now()}`,\n        meta: {\n          lastUpdated: new Date().toISOString(),\n          source: 'OmniCare EMR System'\n        },\n        type: bundleType,\n        timestamp: new Date().toISOString(),\n        total: omnicareBundle.resources?.length || 0,\n        entry: []\n      };\n\n      if (omnicareBundle.resources && Array.isArray(omnicareBundle.resources)) {\n        for (const resource of omnicareBundle.resources) {\n          try {\n            let transformed;\n            \n            switch (resource.resourceType || resource.type) {\n              case 'Patient':\n                transformed = this.transformToFHIRPatient(resource);\n                break;\n              case 'Encounter':\n                transformed = this.transformToFHIREncounter(resource);\n                break;\n              case 'Observation':\n                transformed = this.transformToFHIRObservation(resource);\n                break;\n              default:\n                logger.warn('Unsupported resource type in bundle transformation', { type: resource.resourceType || resource.type });\n                continue;\n            }\n\n            bundle.entry!.push({\n              resource: transformed,\n              request: bundleType === 'transaction' || bundleType === 'batch' ? {\n                method: resource.id ? 'PUT' : 'POST',\n                url: resource.id ? `${transformed.resourceType}/${resource.id}` : transformed.resourceType\n              } : undefined\n            });\n          } catch (error) {\n            logger.error('Failed to transform resource in bundle:', { error, resource: resource.id });\n          }\n        }\n      }\n\n      logger.info('Bundle transformation completed', { \n        bundleId: bundle.id, \n        totalResources: bundle.total, \n        transformedResources: bundle.entry?.length || 0 \n      });\n\n      return bundle;\n    } catch (error) {\n      logger.error('Bundle transformation failed:', error);\n      throw new Error(`Bundle transformation failed: ${error}`);\n    }\n  }\n}\n\n// Export singleton instance\nexport const fhirTransformationService = new FHIRTransformationService();"],"version":3}