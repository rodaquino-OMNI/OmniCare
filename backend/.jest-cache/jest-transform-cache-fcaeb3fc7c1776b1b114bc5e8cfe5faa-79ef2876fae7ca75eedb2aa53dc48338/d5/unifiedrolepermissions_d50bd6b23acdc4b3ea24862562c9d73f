a38121fc7ac43e0b35f07d1323991c47
"use strict";
/**
 * OmniCare EMR Backend - Unified Role-Based Permissions System
 * HIPAA-Compliant Permission Definitions with Role Unification
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UNIFIED_ROLE_PERMISSIONS = void 0;
exports.getRolePermissions = getRolePermissions;
exports.hasPermission = hasPermission;
exports.getRoleInfo = getRoleInfo;
exports.getAllRoles = getAllRoles;
exports.hasAnyPermission = hasAnyPermission;
exports.hasAllPermissions = hasAllPermissions;
const auth_types_1 = require("@/types/auth.types");
/**
 * Unified Role-Based Permission Matrix
 * Maps all role types (short and long form) to their permissions
 */
exports.UNIFIED_ROLE_PERMISSIONS = {
    [auth_types_1.UserRoles.PHYSICIAN]: {
        role: auth_types_1.UserRoles.PHYSICIAN,
        permissions: [
            // Clinical Documentation
            auth_types_1.Permission.CREATE_CLINICAL_NOTES,
            auth_types_1.Permission.EDIT_CLINICAL_NOTES,
            auth_types_1.Permission.VIEW_CLINICAL_NOTES,
            auth_types_1.Permission.FINALIZE_CLINICAL_NOTES,
            // Prescription Management
            auth_types_1.Permission.CREATE_PRESCRIPTIONS,
            auth_types_1.Permission.MODIFY_PRESCRIPTIONS,
            auth_types_1.Permission.VIEW_PRESCRIPTIONS,
            // Patient Management
            auth_types_1.Permission.VIEW_PATIENT_RECORDS,
            auth_types_1.Permission.EDIT_PATIENT_RECORDS,
            auth_types_1.Permission.CREATE_PATIENT_RECORDS,
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS,
            auth_types_1.Permission.EDIT_PATIENT_DEMOGRAPHICS,
            // Orders and Lab Results
            auth_types_1.Permission.CREATE_MEDICAL_ORDERS,
            auth_types_1.Permission.VIEW_LAB_RESULTS,
            auth_types_1.Permission.ACKNOWLEDGE_CRITICAL_RESULTS,
            // Imaging and Radiology
            auth_types_1.Permission.VIEW_IMAGING_RESULTS,
            // Administrative Functions
            auth_types_1.Permission.SCHEDULE_APPOINTMENTS,
            auth_types_1.Permission.GENERATE_REPORTS
        ],
        description: 'Licensed physician with full clinical privileges',
        restrictions: [
            'Cannot access administrative functions',
            'Cannot manage system configuration'
        ]
    },
    [auth_types_1.UserRoles.NURSING_STAFF]: {
        role: auth_types_1.UserRoles.NURSING_STAFF,
        permissions: [
            // Clinical Documentation
            auth_types_1.Permission.CREATE_CLINICAL_NOTES,
            auth_types_1.Permission.EDIT_CLINICAL_NOTES,
            auth_types_1.Permission.VIEW_CLINICAL_NOTES,
            // Patient Management
            auth_types_1.Permission.VIEW_PATIENT_RECORDS,
            auth_types_1.Permission.EDIT_PATIENT_RECORDS,
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS,
            // Nursing Functions
            auth_types_1.Permission.DOCUMENT_VITAL_SIGNS,
            auth_types_1.Permission.ADMINISTER_MEDICATIONS,
            auth_types_1.Permission.DOCUMENT_NURSING_CARE,
            auth_types_1.Permission.MANAGE_PATIENT_CARE_PLANS,
            // Orders and Lab Results
            auth_types_1.Permission.VIEW_LAB_RESULTS,
            // Administrative Functions
            auth_types_1.Permission.SCHEDULE_APPOINTMENTS
        ],
        description: 'Licensed nursing staff with patient care responsibilities',
        restrictions: [
            'Cannot create prescriptions',
            'Cannot finalize physician notes'
        ]
    },
    [auth_types_1.UserRoles.ADMINISTRATIVE_STAFF]: {
        role: auth_types_1.UserRoles.ADMINISTRATIVE_STAFF,
        permissions: [
            // Administrative Functions
            auth_types_1.Permission.SCHEDULE_APPOINTMENTS,
            auth_types_1.Permission.MANAGE_BILLING,
            auth_types_1.Permission.PROCESS_INSURANCE,
            auth_types_1.Permission.GENERATE_REPORTS,
            // Patient Management
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS,
            auth_types_1.Permission.EDIT_PATIENT_DEMOGRAPHICS,
            auth_types_1.Permission.CREATE_PATIENT_RECORDS
        ],
        description: 'Administrative staff with billing and scheduling privileges',
        restrictions: [
            'Cannot access clinical data',
            'Cannot view medical records'
        ]
    },
    [auth_types_1.UserRoles.SYSTEM_ADMINISTRATOR]: {
        role: auth_types_1.UserRoles.SYSTEM_ADMINISTRATOR,
        permissions: [
            // System Administration
            auth_types_1.Permission.MANAGE_USERS,
            auth_types_1.Permission.CONFIGURE_SYSTEM,
            auth_types_1.Permission.VIEW_AUDIT_LOGS,
            auth_types_1.Permission.MANAGE_SECURITY_SETTINGS,
            // All other permissions (admin override)
            auth_types_1.Permission.GENERATE_REPORTS,
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS,
            auth_types_1.Permission.SCHEDULE_APPOINTMENTS,
            auth_types_1.Permission.MANAGE_BILLING
        ],
        description: 'System administrator with full system access',
        restrictions: [
            'Limited clinical data access for technical purposes only'
        ]
    },
    [auth_types_1.UserRoles.PHARMACIST]: {
        role: auth_types_1.UserRoles.PHARMACIST,
        permissions: [
            // Prescription Management
            auth_types_1.Permission.VIEW_PRESCRIPTIONS,
            auth_types_1.Permission.VERIFY_PRESCRIPTIONS,
            auth_types_1.Permission.DISPENSE_MEDICATIONS,
            auth_types_1.Permission.MODIFY_PRESCRIPTIONS,
            // Patient Management (limited)
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS,
            // Clinical Documentation (limited)
            auth_types_1.Permission.VIEW_CLINICAL_NOTES
        ],
        description: 'Licensed pharmacist with medication management privileges',
        restrictions: [
            'Limited to medication-related activities',
            'Cannot access full patient records'
        ]
    },
    [auth_types_1.UserRoles.LABORATORY_TECHNICIAN]: {
        role: auth_types_1.UserRoles.LABORATORY_TECHNICIAN,
        permissions: [
            // Orders and Lab Results
            auth_types_1.Permission.VIEW_LAB_RESULTS,
            auth_types_1.Permission.ENTER_LAB_RESULTS,
            auth_types_1.Permission.ACKNOWLEDGE_CRITICAL_RESULTS,
            // Patient Management (minimal)
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS
        ],
        description: 'Laboratory technician with lab result management privileges',
        restrictions: [
            'Limited to laboratory functions only',
            'Cannot access clinical notes'
        ]
    },
    [auth_types_1.UserRoles.RADIOLOGY_TECHNICIAN]: {
        role: auth_types_1.UserRoles.RADIOLOGY_TECHNICIAN,
        permissions: [
            // Imaging and Radiology
            auth_types_1.Permission.PERFORM_IMAGING_STUDIES,
            auth_types_1.Permission.VIEW_IMAGING_RESULTS,
            auth_types_1.Permission.MANAGE_IMAGING_EQUIPMENT,
            // Patient Management (minimal)
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS
        ],
        description: 'Radiology technician with imaging privileges',
        restrictions: [
            'Limited to radiology functions only',
            'Cannot access clinical notes'
        ]
    },
    [auth_types_1.UserRoles.PATIENT]: {
        role: auth_types_1.UserRoles.PATIENT,
        permissions: [
            // Patient Portal Functions
            auth_types_1.Permission.VIEW_OWN_RECORDS,
            auth_types_1.Permission.REQUEST_APPOINTMENTS,
            auth_types_1.Permission.MESSAGE_CARE_TEAM,
            auth_types_1.Permission.UPDATE_PERSONAL_INFO
        ],
        description: 'Patient with access to their own health information',
        restrictions: [
            'Can only access own records',
            'Cannot access other patients data',
            'Limited administrative functions'
        ]
    },
    [auth_types_1.UserRoles.BILLING]: {
        role: auth_types_1.UserRoles.BILLING,
        permissions: [
            // Administrative Functions
            auth_types_1.Permission.MANAGE_BILLING,
            auth_types_1.Permission.PROCESS_INSURANCE,
            auth_types_1.Permission.GENERATE_REPORTS,
            // Patient Management (limited)
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS,
            auth_types_1.Permission.EDIT_PATIENT_DEMOGRAPHICS
        ],
        description: 'Billing specialist with financial management privileges',
        restrictions: [
            'Limited to billing and insurance functions',
            'Cannot access clinical data'
        ]
    },
    [auth_types_1.UserRoles.RECEPTIONIST]: {
        role: auth_types_1.UserRoles.RECEPTIONIST,
        permissions: [
            // Administrative Functions
            auth_types_1.Permission.SCHEDULE_APPOINTMENTS,
            // Patient Management (minimal)
            auth_types_1.Permission.VIEW_PATIENT_DEMOGRAPHICS,
            auth_types_1.Permission.EDIT_PATIENT_DEMOGRAPHICS,
            auth_types_1.Permission.CREATE_PATIENT_RECORDS
        ],
        description: 'Front desk staff with scheduling privileges',
        restrictions: [
            'Limited to scheduling and demographics',
            'Cannot access clinical or billing data'
        ]
    }
};
/**
 * Get permissions for a specific role
 */
function getRolePermissions(role) {
    const roleInfo = exports.UNIFIED_ROLE_PERMISSIONS[role];
    return roleInfo ? roleInfo.permissions : [];
}
/**
 * Check if a role has a specific permission
 */
function hasPermission(role, permission) {
    const permissions = getRolePermissions(role);
    return permissions.includes(permission);
}
/**
 * Get role information (excluding permissions for lighter payloads)
 */
function getRoleInfo(role) {
    const roleInfo = exports.UNIFIED_ROLE_PERMISSIONS[role];
    if (!roleInfo) {
        return {
            role,
            description: 'Unknown role',
            restrictions: ['Role not defined']
        };
    }
    const { permissions, ...info } = roleInfo;
    return info;
}
/**
 * Get all available roles
 */
function getAllRoles() {
    return Object.keys(exports.UNIFIED_ROLE_PERMISSIONS);
}
/**
 * Check if user has any of the required permissions
 */
function hasAnyPermission(role, requiredPermissions) {
    const userPermissions = getRolePermissions(role);
    return requiredPermissions.some(permission => userPermissions.includes(permission));
}
/**
 * Check if user has all of the required permissions
 */
function hasAllPermissions(role, requiredPermissions) {
    const userPermissions = getRolePermissions(role);
    return requiredPermissions.every(permission => userPermissions.includes(permission));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,