{"file":"/Users/rodrigo/claude-projects/OmniCare/backend/tests/global-teardown.ts","mappings":";AAAA;;;GAGG;;;;;AAIH,iCAmBC;AArBD,iEAAyC;AAE1B,KAAK,UAAU,cAAc;IAC1C,IAAI,CAAC;QACH,sCAAsC;QACtC,oCAAoC;QAEpC,yBAAyB;QACzB,2BAA2B;QAE3B,iCAAiC;QACjC,iCAAiC;QAEjC,2BAA2B;QAC3B,4BAA4B;QAE5B,gBAAM,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;IAC7D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;QAC1D,wCAAwC;IAC1C,CAAC;AACH,CAAC","names":[],"sources":["/Users/rodrigo/claude-projects/OmniCare/backend/tests/global-teardown.ts"],"sourcesContent":["/**\n * Global test teardown for backend integration tests\n * Cleans up test resources and connections after all tests complete\n */\n\nimport logger from '../src/utils/logger';\n\nexport default async function globalTeardown(): Promise<void> {\n  try {\n    // Close any open database connections\n    // await closeDatabaseConnections();\n    \n    // Clean up any test data\n    // await cleanupTestData();\n    \n    // Close Redis connections if any\n    // await closeRedisConnections();\n    \n    // Clean up temporary files\n    // await cleanupTempFiles();\n    \n    logger.info('Global test teardown completed successfully');\n  } catch (error) {\n    logger.error('Error during global test teardown:', error);\n    // Don't throw - allow tests to complete\n  }\n}"],"version":3}