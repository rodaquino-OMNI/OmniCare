{"file":"/Users/rodrigo/claude-projects/OmniCare/backend/src/models/patient.model.ts","mappings":"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","names":[],"sources":["/Users/rodrigo/claude-projects/OmniCare/backend/src/models/patient.model.ts"],"sourcesContent":["import { Patient as FHIRPatient } from '@medplum/fhirtypes';\n\nimport { \n  FHIRResource, \n  Identifier, \n  HumanName, \n  Address, \n  ContactPoint, \n  Reference, \n  CodeableConcept,\n  Attachment,\n  ValidationResult\n} from './base.model';\n\n/**\n * Extended Patient Model for OmniCare EMR\n * Combines FHIR R4 Patient resource with OmniCare-specific extensions\n */\nexport interface OmniCarePatient extends FHIRResource {\n  resourceType: 'Patient';\n  \n  // Core FHIR Patient fields\n  identifier?: Identifier[];\n  active?: boolean;\n  name?: HumanName[];\n  telecom?: ContactPoint[];\n  gender?: 'male' | 'female' | 'other' | 'unknown';\n  birthDate?: string;\n  deceasedBoolean?: boolean;\n  deceasedDateTime?: string;\n  address?: Address[];\n  maritalStatus?: CodeableConcept;\n  multipleBirthBoolean?: boolean;\n  multipleBirthInteger?: number;\n  photo?: Attachment[];\n  contact?: PatientContact[];\n  communication?: PatientCommunication[];\n  generalPractitioner?: Reference[];\n  managingOrganization?: Reference;\n  link?: PatientLink[];\n\n  // OmniCare-specific extensions\n  omnicarePatientId?: string;\n  registrationDate?: string;\n  preferredLanguage?: string;\n  emergencyContact?: PatientEmergencyContact[];\n  insurance?: InsuranceInformation[];\n  demographics?: PatientDemographics;\n  preferences?: PatientPreferences;\n  accessibilityNeeds?: AccessibilityNeeds;\n  socialHistory?: SocialHistory;\n  familyHistory?: FamilyHistoryRecord[];\n  alerts?: PatientAlert[];\n}\n\nexport interface PatientContact {\n  relationship?: CodeableConcept[];\n  name?: HumanName;\n  telecom?: ContactPoint[];\n  address?: Address;\n  gender?: 'male' | 'female' | 'other' | 'unknown';\n  organization?: Reference;\n  period?: {\n    start?: string;\n    end?: string;\n  };\n}\n\nexport interface PatientCommunication {\n  language: CodeableConcept;\n  preferred?: boolean;\n}\n\nexport interface PatientLink {\n  other: Reference;\n  type: 'replaced-by' | 'replaces' | 'refer' | 'seealso';\n}\n\nexport interface PatientEmergencyContact {\n  id?: string;\n  relationship: string;\n  name: HumanName;\n  telecom: ContactPoint[];\n  address?: Address;\n  priority: number;\n  active: boolean;\n}\n\nexport interface InsuranceInformation {\n  id?: string;\n  subscriberId: string;\n  payorName: string;\n  payorId?: string;\n  planName?: string;\n  groupNumber?: string;\n  policyNumber?: string;\n  relationshipToSubscriber: 'self' | 'spouse' | 'child' | 'other';\n  effectiveDate: string;\n  terminationDate?: string;\n  copayAmount?: number;\n  deductibleAmount?: number;\n  active: boolean;\n  priority: number; // 1 = primary, 2 = secondary, etc.\n}\n\nexport interface PatientDemographics {\n  race?: CodeableConcept[];\n  ethnicity?: CodeableConcept[];\n  religion?: CodeableConcept;\n  nationality?: string;\n  birthPlace?: Address;\n  occupation?: string;\n  educationLevel?: CodeableConcept;\n  disability?: CodeableConcept[];\n}\n\nexport interface PatientPreferences {\n  communicationPreferences?: {\n    preferredLanguage?: string;\n    interpreterRequired?: boolean;\n    communicationMethod?: 'phone' | 'email' | 'sms' | 'portal' | 'mail';\n    appointmentReminders?: boolean;\n    labResultsDelivery?: 'phone' | 'email' | 'portal' | 'mail';\n  };\n  treatmentPreferences?: {\n    advanceDirectives?: Reference[];\n    organDonor?: boolean;\n    resuscitationStatus?: 'full-code' | 'dnr' | 'dnar' | 'comfort-care';\n    emergencyTreatmentConsent?: boolean;\n  };\n  privacyPreferences?: {\n    shareWithFamily?: boolean;\n    shareWithEmergencyContact?: boolean;\n    marketingOptOut?: boolean;\n    researchParticipation?: boolean;\n  };\n}\n\nexport interface AccessibilityNeeds {\n  physicalDisability?: string[];\n  cognitiveNeeds?: string[];\n  sensoryImpairments?: string[];\n  assistiveDevices?: string[];\n  accommodationRequests?: string[];\n  transportationNeeds?: string;\n}\n\nexport interface SocialHistory {\n  smokingStatus?: CodeableConcept;\n  alcoholUse?: {\n    status: CodeableConcept;\n    frequency?: string;\n    quantity?: string;\n  };\n  substanceUse?: {\n    substance: CodeableConcept;\n    status: CodeableConcept;\n    frequency?: string;\n  }[];\n  sexualHistory?: {\n    sexuallyActive?: boolean;\n    partners?: number;\n    orientation?: CodeableConcept;\n  };\n  dietaryRestrictions?: CodeableConcept[];\n  exerciseHabits?: {\n    frequency?: string;\n    type?: string[];\n    intensity?: 'low' | 'moderate' | 'high';\n  };\n  livingArrangement?: {\n    type: CodeableConcept;\n    supportSystem?: string[];\n    livingAlone?: boolean;\n  };\n  employmentStatus?: CodeableConcept;\n  veteranStatus?: boolean;\n}\n\nexport interface FamilyHistoryRecord {\n  id?: string;\n  relationship: CodeableConcept;\n  name?: string;\n  gender?: 'male' | 'female' | 'other' | 'unknown';\n  bornDate?: string;\n  ageAtDeath?: number;\n  causeOfDeath?: CodeableConcept;\n  conditions?: FamilyCondition[];\n  deceased?: boolean;\n}\n\nexport interface FamilyCondition {\n  condition: CodeableConcept;\n  onset?: {\n    ageAtOnset?: number;\n    onsetDateTime?: string;\n  };\n  note?: string;\n}\n\nexport interface PatientAlert {\n  id?: string;\n  type: 'allergy' | 'medical' | 'behavioral' | 'infection-control' | 'safety' | 'other';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  title: string;\n  description: string;\n  effectiveDate: string;\n  expirationDate?: string;\n  active: boolean;\n  createdBy: Reference;\n  lastUpdatedBy: Reference;\n}\n\n/**\n * Patient Search Parameters\n */\nexport interface PatientSearchParams {\n  _id?: string;\n  active?: boolean;\n  address?: string;\n  'address-city'?: string;\n  'address-country'?: string;\n  'address-postalcode'?: string;\n  'address-state'?: string;\n  'address-use'?: string;\n  birthdate?: string;\n  death_date?: string;\n  deceased?: boolean;\n  email?: string;\n  family?: string;\n  gender?: string;\n  given?: string;\n  identifier?: string;\n  language?: string;\n  name?: string;\n  phone?: string;\n  phonetic?: string;\n  telecom?: string;\n  \n  // OmniCare-specific search parameters\n  'omnicare-id'?: string;\n  'registration-date'?: string;\n  'insurance-id'?: string;\n  'emergency-contact'?: string;\n  'primary-care-provider'?: string;\n  \n  // Common search modifiers\n  _count?: number;\n  _offset?: number;\n  _sort?: string;\n  _include?: string[];\n  _revinclude?: string[];\n}\n\n/**\n * Patient Statistics\n */\nexport interface PatientStatistics {\n  totalPatients: number;\n  activePatients: number;\n  newPatientsThisMonth: number;\n  averageAge: number;\n  genderDistribution: {\n    male: number;\n    female: number;\n    other: number;\n    unknown: number;\n  };\n  topInsuranceProviders: Array<{\n    name: string;\n    count: number;\n  }>;\n  demographicBreakdown: {\n    ageGroups: Array<{\n      range: string;\n      count: number;\n    }>;\n    locationDistribution: Array<{\n      city: string;\n      state: string;\n      count: number;\n    }>;\n  };\n}\n\n/**\n * Patient Registration Request\n */\nexport interface PatientRegistrationRequest {\n  demographicInfo: {\n    name: HumanName[];\n    gender?: 'male' | 'female' | 'other' | 'unknown';\n    birthDate: string;\n    address: Address[];\n    telecom: ContactPoint[];\n    maritalStatus?: CodeableConcept;\n  };\n  identifiers?: Identifier[];\n  emergencyContacts?: PatientEmergencyContact[];\n  insurance?: InsuranceInformation[];\n  preferences?: PatientPreferences;\n  primaryCareProvider?: Reference;\n  referringProvider?: Reference;\n  consentForms?: {\n    treatmentConsent: boolean;\n    privacyNoticeAcknowledged: boolean;\n    communicationConsent: boolean;\n    researchConsent?: boolean;\n  };\n}\n\n/**\n * Patient Update Request\n */\nexport interface PatientUpdateRequest {\n  demographicInfo?: Partial<{\n    name: HumanName[];\n    address: Address[];\n    telecom: ContactPoint[];\n    maritalStatus: CodeableConcept;\n  }>;\n  emergencyContacts?: PatientEmergencyContact[];\n  insurance?: InsuranceInformation[];\n  preferences?: Partial<PatientPreferences>;\n  accessibilityNeeds?: Partial<AccessibilityNeeds>;\n  alerts?: PatientAlert[];\n}\n\n/**\n * Patient Social History Interface  \n */\nexport interface PatientSocialHistory {\n  smokingStatus?: 'never' | 'former' | 'current' | 'unknown';\n  alcoholUse?: 'never' | 'light' | 'moderate' | 'heavy' | 'unknown';\n  substanceUse?: string[];\n  occupation?: string;\n  socialSupportSystem?: string;\n  livingArrangement?: string;\n  exerciseHabits?: string;\n  dietaryHabits?: string;\n}\n\n/**\n * Validation Functions\n */\nexport function validateOmniCarePatient(patient: Partial<OmniCarePatient>): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!patient.resourceType || patient.resourceType !== 'Patient') {\n    errors.push('resourceType must be \"Patient\"');\n  }\n  \n  if (!patient.name || patient.name.length === 0) {\n    errors.push('Patient name is required');\n  }\n  \n  if (!(patient as any).omnicarePatientId) {\n    errors.push('omnicarePatientId is required');\n  }\n  \n  if (patient.birthDate) {\n    const birthDate = new Date(patient.birthDate);\n    if (birthDate > new Date()) {\n      errors.push('Birth date cannot be in the future');\n    }\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateEmergencyContact(contact: Partial<PatientEmergencyContact>): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!contact.name) {\n    errors.push('Emergency contact name is required');\n  }\n  \n  if (!contact.relationship) {\n    errors.push('Emergency contact relationship is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateInsurance(insurance: Partial<InsuranceInformation>): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!insurance.payorName) {\n    errors.push('Insurance payor name is required');\n  }\n  \n  if (!insurance.planName) {\n    errors.push('Insurance plan name is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validatePatientAlert(alert: Partial<PatientAlert>): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!alert.type) {\n    errors.push('Alert type is required');\n  }\n  \n  if (!alert.severity) {\n    errors.push('Alert severity is required');\n  }\n  \n  if (!alert.title) {\n    errors.push('Alert title is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\n/**\n * Utility Functions\n */\nexport function formatPatientName(nameOrPatient: HumanName | OmniCarePatient): string {\n  // If it's a patient object, get the first name\n  if ('resourceType' in nameOrPatient && nameOrPatient.resourceType === 'Patient') {\n    const patient = nameOrPatient as OmniCarePatient;\n    if (!patient.name || patient.name.length === 0) {\n      return '';\n    }\n    const name = patient.name[0];\n    if (!name) return '';\n    const given = name.given?.join(' ') || '';\n    const family = name.family || '';\n    return `${given} ${family}`.trim();\n  }\n  \n  // If it's a HumanName object\n  const name = nameOrPatient as HumanName;\n  const given = name.given?.join(' ') || '';\n  const family = name.family || '';\n  return `${given} ${family}`.trim();\n}\n\nexport function calculateAge(birthDate: string): number {\n  const birth = new Date(birthDate);\n  const today = new Date();\n  let age = today.getFullYear() - birth.getFullYear();\n  const monthDiff = today.getMonth() - birth.getMonth();\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n    age--;\n  }\n  return age;\n}\n\nexport function getActiveInsurance(insurance: InsuranceInformation[]): InsuranceInformation | undefined {\n  return insurance.find(ins => ins.active && ins.priority === 1);\n}\n\nexport function hasActiveAlerts(alerts: PatientAlert[]): boolean {\n  return alerts.some(alert => alert.active);\n}"],"version":3}