{"file":"/Users/rodrigo/claude-projects/OmniCare/backend/src/models/base.model.ts","mappings":"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","names":[],"sources":["/Users/rodrigo/claude-projects/OmniCare/backend/src/models/base.model.ts"],"sourcesContent":["/**\n * Base Model Interface\n * Common fields and methods shared across all OmniCare entities\n */\n\nexport interface BaseModel {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n  version?: number;\n  active?: boolean;\n}\n\nexport interface FHIRResource extends BaseModel {\n  resourceType: string;\n  meta?: {\n    versionId?: string;\n    lastUpdated?: string;\n    source?: string;\n    profile?: string[];\n    security?: Array<{\n      system?: string;\n      code?: string;\n      display?: string;\n    }>;\n    tag?: Array<{\n      system?: string;\n      code?: string;\n      display?: string;\n    }>;\n  };\n  implicitRules?: string;\n  language?: string;\n  text?: {\n    status: 'generated' | 'extensions' | 'additional' | 'empty';\n    div: string;\n  };\n  contained?: any[];\n  extension?: Array<{\n    url: string;\n    valueString?: string;\n    valueCode?: string;\n    valueDateTime?: string;\n    valueBoolean?: boolean;\n    valueInteger?: number;\n    valueDecimal?: number;\n    [key: string]: any;\n  }>;\n  modifierExtension?: Array<{\n    url: string;\n    [key: string]: any;\n  }>;\n}\n\nexport interface Identifier {\n  use?: 'usual' | 'official' | 'temp' | 'secondary' | 'old';\n  type?: {\n    coding?: Array<{\n      system?: string;\n      code?: string;\n      display?: string;\n    }>;\n    text?: string;\n  };\n  system?: string;\n  value?: string;\n  period?: {\n    start?: string;\n    end?: string;\n  };\n  assigner?: {\n    reference?: string;\n    display?: string;\n  };\n}\n\nexport interface HumanName {\n  use?: 'usual' | 'official' | 'temp' | 'nickname' | 'anonymous' | 'old' | 'maiden';\n  text?: string;\n  family?: string;\n  given?: string[];\n  prefix?: string[];\n  suffix?: string[];\n  period?: {\n    start?: string;\n    end?: string;\n  };\n}\n\nexport interface Address {\n  use?: 'home' | 'work' | 'temp' | 'old' | 'billing';\n  type?: 'postal' | 'physical' | 'both';\n  text?: string;\n  line?: string[];\n  city?: string;\n  district?: string;\n  state?: string;\n  postalCode?: string;\n  country?: string;\n  period?: {\n    start?: string;\n    end?: string;\n  };\n}\n\nexport interface ContactPoint {\n  system?: 'phone' | 'fax' | 'email' | 'pager' | 'url' | 'sms' | 'other';\n  value?: string;\n  use?: 'home' | 'work' | 'temp' | 'old' | 'mobile';\n  rank?: number;\n  period?: {\n    start?: string;\n    end?: string;\n  };\n}\n\nexport interface Reference {\n  reference?: string;\n  type?: string;\n  identifier?: Identifier;\n  display?: string;\n}\n\nexport interface CodeableConcept {\n  coding?: Array<{\n    system?: string;\n    version?: string;\n    code?: string;\n    display?: string;\n    userSelected?: boolean;\n  }>;\n  text?: string;\n}\n\nexport interface Period {\n  start?: string;\n  end?: string;\n}\n\nexport interface Quantity {\n  value?: number;\n  comparator?: '<' | '<=' | '>=' | '>';\n  unit?: string;\n  system?: string;\n  code?: string;\n}\n\nexport interface Money {\n  value?: number;\n  currency?: string;\n}\n\nexport interface Annotation {\n  authorReference?: Reference;\n  authorString?: string;\n  time?: string;\n  text: string;\n}\n\nexport interface Attachment {\n  contentType?: string;\n  language?: string;\n  data?: string;\n  url?: string;\n  size?: number;\n  hash?: string;\n  title?: string;\n  creation?: string;\n}\n\nexport interface Dosage {\n  sequence?: number;\n  text?: string;\n  additionalInstruction?: CodeableConcept[];\n  patientInstruction?: string;\n  timing?: {\n    event?: string[];\n    repeat?: {\n      boundsDuration?: {\n        value?: number;\n        unit?: string;\n        system?: string;\n        code?: string;\n      };\n      boundsRange?: {\n        low?: Quantity;\n        high?: Quantity;\n      };\n      boundsPeriod?: Period;\n      count?: number;\n      countMax?: number;\n      duration?: number;\n      durationMax?: number;\n      durationUnit?: string;\n      frequency?: number;\n      frequencyMax?: number;\n      period?: number;\n      periodMax?: number;\n      periodUnit?: string;\n      dayOfWeek?: string[];\n      timeOfDay?: string[];\n      when?: string[];\n      offset?: number;\n    };\n    code?: CodeableConcept;\n  };\n  asNeededBoolean?: boolean;\n  asNeededCodeableConcept?: CodeableConcept;\n  site?: CodeableConcept;\n  route?: CodeableConcept;\n  method?: CodeableConcept;\n  doseAndRate?: Array<{\n    type?: CodeableConcept;\n    doseRange?: {\n      low?: Quantity;\n      high?: Quantity;\n    };\n    doseQuantity?: Quantity;\n    rateRatio?: {\n      numerator?: Quantity;\n      denominator?: Quantity;\n    };\n    rateRange?: {\n      low?: Quantity;\n      high?: Quantity;\n    };\n    rateQuantity?: Quantity;\n  }>;\n  maxDosePerPeriod?: {\n    numerator?: Quantity;\n    denominator?: Quantity;\n  };\n  maxDosePerAdministration?: Quantity;\n  maxDosePerLifetime?: Quantity;\n}\n\n/**\n * Validation Result Interface\n */\nexport interface ValidationResult {\n  valid: boolean;\n  errors: string[];\n}\n\n/**\n * Validation Functions\n */\nexport function validateHumanName(name: HumanName): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!name.family && (!name.given || name.given.length === 0)) {\n    errors.push('At least family name or given name is required');\n  }\n  \n  if (name.given && name.given.length === 0) {\n    errors.push('Given names array cannot be empty');\n  }\n  \n  if (name.use && !['usual', 'official', 'temp', 'nickname', 'anonymous', 'old', 'maiden'].includes(name.use)) {\n    errors.push('Invalid name use. Must be one of: usual, official, temp, nickname, anonymous, old, maiden');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateAddress(address: Address): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!address.line || address.line.length === 0) {\n    errors.push('Address line is required');\n  }\n  \n  if (!address.city) {\n    errors.push('City is required');\n  }\n  \n  if (!address.country) {\n    errors.push('Country is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateContactPoint(contact: ContactPoint): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!contact.system) {\n    errors.push('Contact system is required');\n  }\n  \n  if (!contact.value) {\n    errors.push('Contact value is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateCodeableConcept(concept: CodeableConcept): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!concept.text && (!concept.coding || concept.coding.length === 0)) {\n    errors.push('Either text or coding is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateIdentifier(identifier: Identifier): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!identifier.value) {\n    errors.push('Identifier value is required');\n  }\n  \n  if (!identifier.system) {\n    errors.push('Identifier system is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validatePeriod(period: Period): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!period.start && !period.end) {\n    errors.push('Either start or end date is required');\n  }\n  \n  if (period.start && period.end) {\n    const startDate = new Date(period.start);\n    const endDate = new Date(period.end);\n    if (startDate > endDate) {\n      errors.push('Start date cannot be after end date');\n    }\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateReference(reference: Reference): ValidationResult {\n  const errors: string[] = [];\n  \n  if (!reference.reference && !reference.identifier) {\n    errors.push('Either reference or identifier is required');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function validateQuantity(quantity: Quantity): ValidationResult {\n  const errors: string[] = [];\n  \n  if (typeof quantity.value !== 'number' || isNaN(quantity.value)) {\n    errors.push('Quantity value must be a valid number');\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\n/**\n * Utility Functions\n */\nexport function createReference(resourceType: string, id: string, display?: string): Reference {\n  return {\n    reference: `${resourceType}/${id}`,\n    display\n  };\n}\n\nexport function formatHumanName(name: HumanName): string {\n  const parts: string[] = [];\n  if (name.prefix && name.prefix.length > 0) {\n    parts.push(name.prefix.join(' '));\n  }\n  if (name.given && name.given.length > 0) {\n    parts.push(name.given.join(' '));\n  }\n  if (name.family) {\n    parts.push(name.family);\n  }\n  if (name.suffix && name.suffix.length > 0) {\n    parts.push(name.suffix.join(' '));\n  }\n  return parts.join(' ').trim();\n}\n\nexport function formatAddress(address: Address): string {\n  const parts: string[] = [];\n  if (address.line && address.line.length > 0) {\n    parts.push(address.line.join(', '));\n  }\n  if (address.city) {\n    parts.push(address.city);\n  }\n  if (address.state) {\n    parts.push(address.state);\n  }\n  if (address.postalCode) {\n    parts.push(address.postalCode);\n  }\n  if (address.country) {\n    parts.push(address.country);\n  }\n  return parts.join(', ');\n}"],"version":3}