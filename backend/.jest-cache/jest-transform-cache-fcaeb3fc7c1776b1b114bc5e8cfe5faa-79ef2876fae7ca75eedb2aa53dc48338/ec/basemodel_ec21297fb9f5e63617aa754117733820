a0058e5f8f082794076dfde4a2bd490e
"use strict";
/**
 * Base Model Interface
 * Common fields and methods shared across all OmniCare entities
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateHumanName = validateHumanName;
exports.validateAddress = validateAddress;
exports.validateContactPoint = validateContactPoint;
exports.validateCodeableConcept = validateCodeableConcept;
exports.validateIdentifier = validateIdentifier;
exports.validatePeriod = validatePeriod;
exports.validateReference = validateReference;
exports.validateQuantity = validateQuantity;
exports.createReference = createReference;
exports.formatHumanName = formatHumanName;
exports.formatAddress = formatAddress;
/**
 * Validation Functions
 */
function validateHumanName(name) {
    const errors = [];
    if (!name.family && (!name.given || name.given.length === 0)) {
        errors.push('At least family name or given name is required');
    }
    if (name.given && name.given.length === 0) {
        errors.push('Given names array cannot be empty');
    }
    if (name.use && !['usual', 'official', 'temp', 'nickname', 'anonymous', 'old', 'maiden'].includes(name.use)) {
        errors.push('Invalid name use. Must be one of: usual, official, temp, nickname, anonymous, old, maiden');
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
function validateAddress(address) {
    const errors = [];
    if (!address.line || address.line.length === 0) {
        errors.push('Address line is required');
    }
    if (!address.city) {
        errors.push('City is required');
    }
    if (!address.country) {
        errors.push('Country is required');
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
function validateContactPoint(contact) {
    const errors = [];
    if (!contact.system) {
        errors.push('Contact system is required');
    }
    if (!contact.value) {
        errors.push('Contact value is required');
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
function validateCodeableConcept(concept) {
    const errors = [];
    if (!concept.text && (!concept.coding || concept.coding.length === 0)) {
        errors.push('Either text or coding is required');
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
function validateIdentifier(identifier) {
    const errors = [];
    if (!identifier.value) {
        errors.push('Identifier value is required');
    }
    if (!identifier.system) {
        errors.push('Identifier system is required');
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
function validatePeriod(period) {
    const errors = [];
    if (!period.start && !period.end) {
        errors.push('Either start or end date is required');
    }
    if (period.start && period.end) {
        const startDate = new Date(period.start);
        const endDate = new Date(period.end);
        if (startDate > endDate) {
            errors.push('Start date cannot be after end date');
        }
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
function validateReference(reference) {
    const errors = [];
    if (!reference.reference && !reference.identifier) {
        errors.push('Either reference or identifier is required');
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
function validateQuantity(quantity) {
    const errors = [];
    if (typeof quantity.value !== 'number' || isNaN(quantity.value)) {
        errors.push('Quantity value must be a valid number');
    }
    return {
        valid: errors.length === 0,
        errors
    };
}
/**
 * Utility Functions
 */
function createReference(resourceType, id, display) {
    return {
        reference: `${resourceType}/${id}`,
        display
    };
}
function formatHumanName(name) {
    const parts = [];
    if (name.prefix && name.prefix.length > 0) {
        parts.push(name.prefix.join(' '));
    }
    if (name.given && name.given.length > 0) {
        parts.push(name.given.join(' '));
    }
    if (name.family) {
        parts.push(name.family);
    }
    if (name.suffix && name.suffix.length > 0) {
        parts.push(name.suffix.join(' '));
    }
    return parts.join(' ').trim();
}
function formatAddress(address) {
    const parts = [];
    if (address.line && address.line.length > 0) {
        parts.push(address.line.join(', '));
    }
    if (address.city) {
        parts.push(address.city);
    }
    if (address.state) {
        parts.push(address.state);
    }
    if (address.postalCode) {
        parts.push(address.postalCode);
    }
    if (address.country) {
        parts.push(address.country);
    }
    return parts.join(', ');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3JvZHJpZ28vY2xhdWRlLXByb2plY3RzL09tbmlDYXJlL2JhY2tlbmQvc3JjL21vZGVscy9iYXNlLm1vZGVsLnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7O0dBR0c7O0FBb1BILDhDQW1CQztBQUVELDBDQW1CQztBQUVELG9EQWVDO0FBRUQsMERBV0M7QUFFRCxnREFlQztBQUVELHdDQW1CQztBQUVELDhDQVdDO0FBRUQsNENBV0M7QUFLRCwwQ0FLQztBQUVELDBDQWVDO0FBRUQsc0NBa0JDO0FBeExEOztHQUVHO0FBQ0gsU0FBZ0IsaUJBQWlCLENBQUMsSUFBZTtJQUMvQyxNQUFNLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFFNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUM3RCxNQUFNLENBQUMsSUFBSSxDQUFDLGdEQUFnRCxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVELElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUMxQyxNQUFNLENBQUMsSUFBSSxDQUFDLG1DQUFtQyxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELElBQUksSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQzVHLE1BQU0sQ0FBQyxJQUFJLENBQUMsMkZBQTJGLENBQUMsQ0FBQztJQUMzRyxDQUFDO0lBRUQsT0FBTztRQUNMLEtBQUssRUFBRSxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUM7UUFDMUIsTUFBTTtLQUNQLENBQUM7QUFDSixDQUFDO0FBRUQs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QUFJLEVBQUUsQ0FBQztRQUNqQixLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDbEIsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUNELElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3ZCLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNwQixLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQ0QsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzFCLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL3JvZHJpZ28vY2xhdWRlLXByb2plY3RzL09tbmlDYXJlL2JhY2tlbmQvc3JjL21vZGVscy9iYXNlLm1vZGVsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmFzZSBNb2RlbCBJbnRlcmZhY2VcbiAqIENvbW1vbiBmaWVsZHMgYW5kIG1ldGhvZHMgc2hhcmVkIGFjcm9zcyBhbGwgT21uaUNhcmUgZW50aXRpZXNcbiAqL1xuXG5leHBvcnQgaW50ZXJmYWNlIEJhc2VNb2RlbCB7XG4gIGlkOiBzdHJpbmc7XG4gIGNyZWF0ZWRBdDogRGF0ZTtcbiAgdXBkYXRlZEF0OiBEYXRlO1xuICB2ZXJzaW9uPzogbnVtYmVyO1xuICBhY3RpdmU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZISVJSZXNvdXJjZSBleHRlbmRzIEJhc2VNb2RlbCB7XG4gIHJlc291cmNlVHlwZTogc3RyaW5nO1xuICBtZXRhPzoge1xuICAgIHZlcnNpb25JZD86IHN0cmluZztcbiAgICBsYXN0VXBkYXRlZD86IHN0cmluZztcbiAgICBzb3VyY2U/OiBzdHJpbmc7XG4gICAgcHJvZmlsZT86IHN0cmluZ1tdO1xuICAgIHNlY3VyaXR5PzogQXJyYXk8e1xuICAgICAgc3lzdGVtPzogc3RyaW5nO1xuICAgICAgY29kZT86IHN0cmluZztcbiAgICAgIGRpc3BsYXk/OiBzdHJpbmc7XG4gICAgfT47XG4gICAgdGFnPzogQXJyYXk8e1xuICAgICAgc3lzdGVtPzogc3RyaW5nO1xuICAgICAgY29kZT86IHN0cmluZztcbiAgICAgIGRpc3BsYXk/OiBzdHJpbmc7XG4gICAgfT47XG4gIH07XG4gIGltcGxpY2l0UnVsZXM/OiBzdHJpbmc7XG4gIGxhbmd1YWdlPzogc3RyaW5nO1xuICB0ZXh0Pzoge1xuICAgIHN0YXR1czogJ2dlbmVyYXRlZCcgfCAnZXh0ZW5zaW9ucycgfCAnYWRkaXRpb25hbCcgfCAnZW1wdHknO1xuICAgIGRpdjogc3RyaW5nO1xuICB9O1xuICBjb250YWluZWQ/OiBhbnlbXTtcbiAgZXh0ZW5zaW9uPzogQXJyYXk8e1xuICAgIHVybDogc3RyaW5nO1xuICAgIHZhbHVlU3RyaW5nPzogc3RyaW5nO1xuICAgIHZhbHVlQ29kZT86IHN0cmluZztcbiAgICB2YWx1ZURhdGVUaW1lPzogc3RyaW5nO1xuICAgIHZhbHVlQm9vbGVhbj86IGJvb2xlYW47XG4gICAgdmFsdWVJbnRlZ2VyPzogbnVtYmVyO1xuICAgIHZhbHVlRGVjaW1hbD86IG51bWJlcjtcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gIH0+O1xuICBtb2RpZmllckV4dGVuc2lvbj86IEFycmF5PHtcbiAgICB1cmw6IHN0cmluZztcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gIH0+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElkZW50aWZpZXIge1xuICB1c2U/OiAndXN1YWwnIHwgJ29mZmljaWFsJyB8ICd0ZW1wJyB8ICdzZWNvbmRhcnknIHwgJ29sZCc7XG4gIHR5cGU/OiB7XG4gICAgY29kaW5nPzogQXJyYXk8e1xuICAgICAgc3lzdGVtPzogc3RyaW5nO1xuICAgICAgY29kZT86IHN0cmluZztcbiAgICAgIGRpc3BsYXk/OiBzdHJpbmc7XG4gICAgfT47XG4gICAgdGV4dD86IHN0cmluZztcbiAgfTtcbiAgc3lzdGVtPzogc3RyaW5nO1xuICB2YWx1ZT86IHN0cmluZztcbiAgcGVyaW9kPzoge1xuICAgIHN0YXJ0Pzogc3RyaW5nO1xuICAgIGVuZD86IHN0cmluZztcbiAgfTtcbiAgYXNzaWduZXI/OiB7XG4gICAgcmVmZXJlbmNlPzogc3RyaW5nO1xuICAgIGRpc3BsYXk/OiBzdHJpbmc7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHVtYW5OYW1lIHtcbiAgdXNlPzogJ3VzdWFsJyB8ICdvZmZpY2lhbCcgfCAndGVtcCcgfCAnbmlja25hbWUnIHwgJ2Fub255bW91cycgfCAnb2xkJyB8ICdtYWlkZW4nO1xuICB0ZXh0Pzogc3RyaW5nO1xuICBmYW1pbHk/OiBzdHJpbmc7XG4gIGdpdmVuPzogc3RyaW5nW107XG4gIHByZWZpeD86IHN0cmluZ1tdO1xuICBzdWZmaXg/OiBzdHJpbmdbXTtcbiAgcGVyaW9kPzoge1xuICAgIHN0YXJ0Pzogc3RyaW5nO1xuICAgIGVuZD86IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBZGRyZXNzIHtcbiAgdXNlPzogJ2hvbWUnIHwgJ3dvcmsnIHwgJ3RlbXAnIHwgJ29sZCcgfCAnYmlsbGluZyc7XG4gIHR5cGU/OiAncG9zdGFsJyB8ICdwaHlzaWNhbCcgfCAnYm90aCc7XG4gIHRleHQ/OiBzdHJpbmc7XG4gIGxpbmU/OiBzdHJpbmdbXTtcbiAgY2l0eT86IHN0cmluZztcbiAgZGlzdHJpY3Q/OiBzdHJpbmc7XG4gIHN0YXRlPzogc3RyaW5nO1xuICBwb3N0YWxDb2RlPzogc3RyaW5nO1xuICBjb3VudHJ5Pzogc3RyaW5nO1xuICBwZXJpb2Q/OiB7XG4gICAgc3RhcnQ/OiBzdHJpbmc7XG4gICAgZW5kPzogc3RyaW5nO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbnRhY3RQb2ludCB7XG4gIHN5c3RlbT86ICdwaG9uZScgfCAnZmF4JyB8ICdlbWFpbCcgfCAncGFnZXInIHwgJ3VybCcgfCAnc21zJyB8ICdvdGhlcic7XG4gIHZhbHVlPzogc3RyaW5nO1xuICB1c2U/OiAnaG9tZScgfCAnd29yaycgfCAndGVtcCcgfCAnb2xkJyB8ICdtb2JpbGUnO1xuICByYW5rPzogbnVtYmVyO1xuICBwZXJpb2Q/OiB7XG4gICAgc3RhcnQ/OiBzdHJpbmc7XG4gICAgZW5kPzogc3RyaW5nO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlZmVyZW5jZSB7XG4gIHJlZmVyZW5jZT86IHN0cmluZztcbiAgdHlwZT86IHN0cmluZztcbiAgaWRlbnRpZmllcj86IElkZW50aWZpZXI7XG4gIGRpc3BsYXk/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29kZWFibGVDb25jZXB0IHtcbiAgY29kaW5nPzogQXJyYXk8e1xuICAgIHN5c3RlbT86IHN0cmluZztcbiAgICB2ZXJzaW9uPzogc3RyaW5nO1xuICAgIGNvZGU/OiBzdHJpbmc7XG4gICAgZGlzcGxheT86IHN0cmluZztcbiAgICB1c2VyU2VsZWN0ZWQ/OiBib29sZWFuO1xuICB9PjtcbiAgdGV4dD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQZXJpb2Qge1xuICBzdGFydD86IHN0cmluZztcbiAgZW5kPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFF1YW50aXR5IHtcbiAgdmFsdWU/OiBudW1iZXI7XG4gIGNvbXBhcmF0b3I/OiAnPCcgfCAnPD0nIHwgJz49JyB8ICc+JztcbiAgdW5pdD86IHN0cmluZztcbiAgc3lzdGVtPzogc3RyaW5nO1xuICBjb2RlPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1vbmV5IHtcbiAgdmFsdWU/OiBudW1iZXI7XG4gIGN1cnJlbmN5Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFubm90YXRpb24ge1xuICBhdXRob3JSZWZlcmVuY2U/OiBSZWZlcmVuY2U7XG4gIGF1dGhvclN0cmluZz86IHN0cmluZztcbiAgdGltZT86IHN0cmluZztcbiAgdGV4dDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF0dGFjaG1lbnQge1xuICBjb250ZW50VHlwZT86IHN0cmluZztcbiAgbGFuZ3VhZ2U/OiBzdHJpbmc7XG4gIGRhdGE/OiBzdHJpbmc7XG4gIHVybD86IHN0cmluZztcbiAgc2l6ZT86IG51bWJlcjtcbiAgaGFzaD86IHN0cmluZztcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIGNyZWF0aW9uPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERvc2FnZSB7XG4gIHNlcXVlbmNlPzogbnVtYmVyO1xuICB0ZXh0Pzogc3RyaW5nO1xuICBhZGRpdGlvbmFsSW5zdHJ1Y3Rpb24/OiBDb2RlYWJsZUNvbmNlcHRbXTtcbiAgcGF0aWVudEluc3RydWN0aW9uPzogc3RyaW5nO1xuICB0aW1pbmc/OiB7XG4gICAgZXZlbnQ/OiBzdHJpbmdbXTtcbiAgICByZXBlYXQ/OiB7XG4gICAgICBib3VuZHNEdXJhdGlvbj86IHtcbiAgICAgICAgdmFsdWU/OiBudW1iZXI7XG4gICAgICAgIHVuaXQ/OiBzdHJpbmc7XG4gICAgICAgIHN5c3RlbT86IHN0cmluZztcbiAgICAgICAgY29kZT86IHN0cmluZztcbiAgICAgIH07XG4gICAgICBib3VuZHNSYW5nZT86IHtcbiAgICAgICAgbG93PzogUXVhbnRpdHk7XG4gICAgICAgIGhpZ2g/OiBRdWFudGl0eTtcbiAgICAgIH07XG4gICAgICBib3VuZHNQZXJpb2Q/OiBQZXJpb2Q7XG4gICAgICBjb3VudD86IG51bWJlcjtcbiAgICAgIGNvdW50TWF4PzogbnVtYmVyO1xuICAgICAgZHVyYXRpb24/OiBudW1iZXI7XG4gICAgICBkdXJhdGlvbk1heD86IG51bWJlcjtcbiAgICAgIGR1cmF0aW9uVW5pdD86IHN0cmluZztcbiAgICAgIGZyZXF1ZW5jeT86IG51bWJlcjtcbiAgICAgIGZyZXF1ZW5jeU1heD86IG51bWJlcjtcbiAgICAgIHBlcmlvZD86IG51bWJlcjtcbiAgICAgIHBlcmlvZE1heD86IG51bWJlcjtcbiAgICAgIHBlcmlvZFVuaXQ/OiBzdHJpbmc7XG4gICAgICBkYXlPZldlZWs/OiBzdHJpbmdbXTtcbiAgICAgIHRpbWVPZkRheT86IHN0cmluZ1tdO1xuICAgICAgd2hlbj86IHN0cmluZ1tdO1xuICAgICAgb2Zmc2V0PzogbnVtYmVyO1xuICAgIH07XG4gICAgY29kZT86IENvZGVhYmxlQ29uY2VwdDtcbiAgfTtcbiAgYXNOZWVkZWRCb29sZWFuPzogYm9vbGVhbjtcbiAgYXNOZWVkZWRDb2RlYWJsZUNvbmNlcHQ/OiBDb2RlYWJsZUNvbmNlcHQ7XG4gIHNpdGU/OiBDb2RlYWJsZUNvbmNlcHQ7XG4gIHJvdXRlPzogQ29kZWFibGVDb25jZXB0O1xuICBtZXRob2Q/OiBDb2RlYWJsZUNvbmNlcHQ7XG4gIGRvc2VBbmRSYXRlPzogQXJyYXk8e1xuICAgIHR5cGU/OiBDb2RlYWJsZUNvbmNlcHQ7XG4gICAgZG9zZVJhbmdlPzoge1xuICAgICAgbG93PzogUXVhbnRpdHk7XG4gICAgICBoaWdoPzogUXVhbnRpdHk7XG4gICAgfTtcbiAgICBkb3NlUXVhbnRpdHk/OiBRdWFudGl0eTtcbiAgICByYXRlUmF0aW8/OiB7XG4gICAgICBudW1lcmF0b3I/OiBRdWFudGl0eTtcbiAgICAgIGRlbm9taW5hdG9yPzogUXVhbnRpdHk7XG4gICAgfTtcbiAgICByYXRlUmFuZ2U/OiB7XG4gICAgICBsb3c/OiBRdWFudGl0eTtcbiAgICAgIGhpZ2g/OiBRdWFudGl0eTtcbiAgICB9O1xuICAgIHJhdGVRdWFudGl0eT86IFF1YW50aXR5O1xuICB9PjtcbiAgbWF4RG9zZVBlclBlcmlvZD86IHtcbiAgICBudW1lcmF0b3I/OiBRdWFudGl0eTtcbiAgICBkZW5vbWluYXRvcj86IFF1YW50aXR5O1xuICB9O1xuICBtYXhEb3NlUGVyQWRtaW5pc3RyYXRpb24/OiBRdWFudGl0eTtcbiAgbWF4RG9zZVBlckxpZmV0aW1lPzogUXVhbnRpdHk7XG59XG5cbi8qKlxuICogVmFsaWRhdGlvbiBSZXN1bHQgSW50ZXJmYWNlXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVmFsaWRhdGlvblJlc3VsdCB7XG4gIHZhbGlkOiBib29sZWFuO1xuICBlcnJvcnM6IHN0cmluZ1tdO1xufVxuXG4vKipcbiAqIFZhbGlkYXRpb24gRnVuY3Rpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUh1bWFuTmFtZShuYW1lOiBIdW1hbk5hbWUpOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuICBcbiAgaWYgKCFuYW1lLmZhbWlseSAmJiAoIW5hbWUuZ2l2ZW4gfHwgbmFtZS5naXZlbi5sZW5ndGggPT09IDApKSB7XG4gICAgZXJyb3JzLnB1c2goJ0F0IGxlYXN0IGZhbWlseSBuYW1lIG9yIGdpdmVuIG5hbWUgaXMgcmVxdWlyZWQnKTtcbiAgfVxuICBcbiAgaWYgKG5hbWUuZ2l2ZW4gJiYgbmFtZS5naXZlbi5sZW5ndGggPT09IDApIHtcbiAgICBlcnJvcnMucHVzaCgnR2l2ZW4gbmFtZXMgYXJyYXkgY2Fubm90IGJlIGVtcHR5Jyk7XG4gIH1cbiAgXG4gIGlmIChuYW1lLnVzZSAmJiAhWyd1c3VhbCcsICdvZmZpY2lhbCcsICd0ZW1wJywgJ25pY2tuYW1lJywgJ2Fub255bW91cycsICdvbGQnLCAnbWFpZGVuJ10uaW5jbHVkZXMobmFtZS51c2UpKSB7XG4gICAgZXJyb3JzLnB1c2goJ0ludmFsaWQgbmFtZSB1c2UuIE11c3QgYmUgb25lIG9mOiB1c3VhbCwgb2ZmaWNpYWwsIHRlbXAsIG5pY2tuYW1lLCBhbm9ueW1vdXMsIG9sZCwgbWFpZGVuJyk7XG4gIH1cbiAgXG4gIHJldHVybiB7XG4gICAgdmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgZXJyb3JzXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFkZHJlc3MoYWRkcmVzczogQWRkcmVzcyk6IFZhbGlkYXRpb25SZXN1bHQge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gIFxuICBpZiAoIWFkZHJlc3MubGluZSB8fCBhZGRyZXNzLmxpbmUubGVuZ3RoID09PSAwKSB7XG4gICAgZXJyb3JzLnB1c2goJ0FkZHJlc3MgbGluZSBpcyByZXF1aXJlZCcpO1xuICB9XG4gIFxuICBpZiAoIWFkZHJlc3MuY2l0eSkge1xuICAgIGVycm9ycy5wdXNoKCdDaXR5IGlzIHJlcXVpcmVkJyk7XG4gIH1cbiAgXG4gIGlmICghYWRkcmVzcy5jb3VudHJ5KSB7XG4gICAgZXJyb3JzLnB1c2goJ0NvdW50cnkgaXMgcmVxdWlyZWQnKTtcbiAgfVxuICBcbiAgcmV0dXJuIHtcbiAgICB2YWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQ29udGFjdFBvaW50KGNvbnRhY3Q6IENvbnRhY3RQb2ludCk6IFZhbGlkYXRpb25SZXN1bHQge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gIFxuICBpZiAoIWNvbnRhY3Quc3lzdGVtKSB7XG4gICAgZXJyb3JzLnB1c2goJ0NvbnRhY3Qgc3lzdGVtIGlzIHJlcXVpcmVkJyk7XG4gIH1cbiAgXG4gIGlmICghY29udGFjdC52YWx1ZSkge1xuICAgIGVycm9ycy5wdXNoKCdDb250YWN0IHZhbHVlIGlzIHJlcXVpcmVkJyk7XG4gIH1cbiAgXG4gIHJldHVybiB7XG4gICAgdmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgZXJyb3JzXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUNvZGVhYmxlQ29uY2VwdChjb25jZXB0OiBDb2RlYWJsZUNvbmNlcHQpOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuICBcbiAgaWYgKCFjb25jZXB0LnRleHQgJiYgKCFjb25jZXB0LmNvZGluZyB8fCBjb25jZXB0LmNvZGluZy5sZW5ndGggPT09IDApKSB7XG4gICAgZXJyb3JzLnB1c2goJ0VpdGhlciB0ZXh0IG9yIGNvZGluZyBpcyByZXF1aXJlZCcpO1xuICB9XG4gIFxuICByZXR1cm4ge1xuICAgIHZhbGlkOiBlcnJvcnMubGVuZ3RoID09PSAwLFxuICAgIGVycm9yc1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVJZGVudGlmaWVyKGlkZW50aWZpZXI6IElkZW50aWZpZXIpOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuICBcbiAgaWYgKCFpZGVudGlmaWVyLnZhbHVlKSB7XG4gICAgZXJyb3JzLnB1c2goJ0lkZW50aWZpZXIgdmFsdWUgaXMgcmVxdWlyZWQnKTtcbiAgfVxuICBcbiAgaWYgKCFpZGVudGlmaWVyLnN5c3RlbSkge1xuICAgIGVycm9ycy5wdXNoKCdJZGVudGlmaWVyIHN5c3RlbSBpcyByZXF1aXJlZCcpO1xuICB9XG4gIFxuICByZXR1cm4ge1xuICAgIHZhbGlkOiBlcnJvcnMubGVuZ3RoID09PSAwLFxuICAgIGVycm9yc1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVQZXJpb2QocGVyaW9kOiBQZXJpb2QpOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuICBcbiAgaWYgKCFwZXJpb2Quc3RhcnQgJiYgIXBlcmlvZC5lbmQpIHtcbiAgICBlcnJvcnMucHVzaCgnRWl0aGVyIHN0YXJ0IG9yIGVuZCBkYXRlIGlzIHJlcXVpcmVkJyk7XG4gIH1cbiAgXG4gIGlmIChwZXJpb2Quc3RhcnQgJiYgcGVyaW9kLmVuZCkge1xuICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKHBlcmlvZC5zdGFydCk7XG4gICAgY29uc3QgZW5kRGF0ZSA9IG5ldyBEYXRlKHBlcmlvZC5lbmQpO1xuICAgIGlmIChzdGFydERhdGUgPiBlbmREYXRlKSB7XG4gICAgICBlcnJvcnMucHVzaCgnU3RhcnQgZGF0ZSBjYW5ub3QgYmUgYWZ0ZXIgZW5kIGRhdGUnKTtcbiAgICB9XG4gIH1cbiAgXG4gIHJldHVybiB7XG4gICAgdmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgZXJyb3JzXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVJlZmVyZW5jZShyZWZlcmVuY2U6IFJlZmVyZW5jZSk6IFZhbGlkYXRpb25SZXN1bHQge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gIFxuICBpZiAoIXJlZmVyZW5jZS5yZWZlcmVuY2UgJiYgIXJlZmVyZW5jZS5pZGVudGlmaWVyKSB7XG4gICAgZXJyb3JzLnB1c2goJ0VpdGhlciByZWZlcmVuY2Ugb3IgaWRlbnRpZmllciBpcyByZXF1aXJlZCcpO1xuICB9XG4gIFxuICByZXR1cm4ge1xuICAgIHZhbGlkOiBlcnJvcnMubGVuZ3RoID09PSAwLFxuICAgIGVycm9yc1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVRdWFudGl0eShxdWFudGl0eTogUXVhbnRpdHkpOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuICBcbiAgaWYgKHR5cGVvZiBxdWFudGl0eS52YWx1ZSAhPT0gJ251bWJlcicgfHwgaXNOYU4ocXVhbnRpdHkudmFsdWUpKSB7XG4gICAgZXJyb3JzLnB1c2goJ1F1YW50aXR5IHZhbHVlIG11c3QgYmUgYSB2YWxpZCBudW1iZXInKTtcbiAgfVxuICBcbiAgcmV0dXJuIHtcbiAgICB2YWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn1cblxuLyoqXG4gKiBVdGlsaXR5IEZ1bmN0aW9uc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVmZXJlbmNlKHJlc291cmNlVHlwZTogc3RyaW5nLCBpZDogc3RyaW5nLCBkaXNwbGF5Pzogc3RyaW5nKTogUmVmZXJlbmNlIHtcbiAgcmV0dXJuIHtcbiAgICByZWZlcmVuY2U6IGAke3Jlc291cmNlVHlwZX0vJHtpZH1gLFxuICAgIGRpc3BsYXlcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEh1bWFuTmFtZShuYW1lOiBIdW1hbk5hbWUpOiBzdHJpbmcge1xuICBjb25zdCBwYXJ0czogc3RyaW5nW10gPSBbXTtcbiAgaWYgKG5hbWUucHJlZml4ICYmIG5hbWUucHJlZml4Lmxlbmd0aCA+IDApIHtcbiAgICBwYXJ0cy5wdXNoKG5hbWUucHJlZml4LmpvaW4oJyAnKSk7XG4gIH1cbiAgaWYgKG5hbWUuZ2l2ZW4gJiYgbmFtZS5naXZlbi5sZW5ndGggPiAwKSB7XG4gICAgcGFydHMucHVzaChuYW1lLmdpdmVuLmpvaW4oJyAnKSk7XG4gIH1cbiAgaWYgKG5hbWUuZmFtaWx5KSB7XG4gICAgcGFydHMucHVzaChuYW1lLmZhbWlseSk7XG4gIH1cbiAgaWYgKG5hbWUuc3VmZml4ICYmIG5hbWUuc3VmZml4Lmxlbmd0aCA+IDApIHtcbiAgICBwYXJ0cy5wdXNoKG5hbWUuc3VmZml4LmpvaW4oJyAnKSk7XG4gIH1cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJyAnKS50cmltKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRBZGRyZXNzKGFkZHJlc3M6IEFkZHJlc3MpOiBzdHJpbmcge1xuICBjb25zdCBwYXJ0czogc3RyaW5nW10gPSBbXTtcbiAgaWYgKGFkZHJlc3MubGluZSAmJiBhZGRyZXNzLmxpbmUubGVuZ3RoID4gMCkge1xuICAgIHBhcnRzLnB1c2goYWRkcmVzcy5saW5lLmpvaW4oJywgJykpO1xuICB9XG4gIGlmIChhZGRyZXNzLmNpdHkpIHtcbiAgICBwYXJ0cy5wdXNoKGFkZHJlc3MuY2l0eSk7XG4gIH1cbiAgaWYgKGFkZHJlc3Muc3RhdGUpIHtcbiAgICBwYXJ0cy5wdXNoKGFkZHJlc3Muc3RhdGUpO1xuICB9XG4gIGlmIChhZGRyZXNzLnBvc3RhbENvZGUpIHtcbiAgICBwYXJ0cy5wdXNoKGFkZHJlc3MucG9zdGFsQ29kZSk7XG4gIH1cbiAgaWYgKGFkZHJlc3MuY291bnRyeSkge1xuICAgIHBhcnRzLnB1c2goYWRkcmVzcy5jb3VudHJ5KTtcbiAgfVxuICByZXR1cm4gcGFydHMuam9pbignLCAnKTtcbn0iXSwidmVyc2lvbiI6M30=