{"file":"/Users/rodrigo/claude-projects/OmniCare/backend/tests/env.setup.ts","mappings":";AAAA;;;GAGG;;AAEH,mCAAgC;AAChC,+BAA4B;AAE5B,kCAAkC;AAClC,IAAA,eAAM,EAAC,EAAE,IAAI,EAAE,IAAA,WAAI,EAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;AAErD,0CAA0C;AAC1C,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;AACjC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC;AAEvB,mCAAmC;AACnC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,WAAW,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,MAAM,CAAC;AACzD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,eAAe,CAAC;AAClE,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,WAAW,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,eAAe,CAAC;AAE1E,gCAAgC;AAChC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,0BAA0B,CAAC;AACjF,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;AAE9B,8BAA8B;AAC9B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,+DAA+D,CAAC;AACxH,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,KAAK,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAE1C,uCAAuC;AACvC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,0BAA0B,CAAC;AAC/F,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,gBAAgB,CAAC;AACvF,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,oBAAoB,CAAC;AACnG,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,GAAG,CAAC,uBAAuB,IAAI,iBAAiB,CAAC;AAE1F,2CAA2C;AAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,4DAA4D,CAAC;AAC9F,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,kCAAkC,CAAC;AAEtE,mCAAmC;AACnC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,oCAAoC,CAAC;AAClE,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,sCAAsC,CAAC;AACpE,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC,sCAAsC;AAEvE,0BAA0B;AAC1B,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,MAAM,CAAC;AAC1C,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC;AAC3C,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,MAAM,CAAC;AACpC,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,MAAM,CAAC;AAEzC,yBAAyB;AACzB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,GAAG,CAAC;AAExC,iDAAiD;AACjD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,MAAM,CAAC;AAEhD,kCAAkC;AAClC,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,MAAM,CAAC;AAE5C,iCAAiC;AACjC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC;AAChC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,MAAM,CAAC;AACxC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC;AAEnC,yCAAyC;AACzC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,aAAa,CAAC;AACjC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,aAAa,CAAC;AAEnC,6BAA6B;AAC7B,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,MAAM,CAAC;AACvC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC;AAE3C,kCAAkC;AAClC,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,KAAK,OAAO,EAAE,CAAC;IACzC,MAAM,eAAe,GAAG,OAAO,CAAC;IAChC,MAAM,CAAC,OAAO,GAAG;QACf,GAAG,eAAe;QAClB,GAAG,EAAE,GAAG,EAAE,GAAE,CAAC;QACb,IAAI,EAAE,GAAG,EAAE,GAAE,CAAC;QACd,IAAI,EAAE,GAAG,EAAE,GAAE,CAAC;QACd,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE,sBAAsB;QACpD,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;KAChB,CAAC;AACJ,CAAC;AAED,4BAA4B;AAC5B,MAAM,CAAC,UAAU,GAAG;IAClB,QAAQ,EAAE;QACR,IAAI,EAAE,IAAI;QACV,WAAW,EAAE,KAAK;QAClB,GAAG,EAAE,KAAK;KACX;IACD,OAAO,EAAE;QACP,IAAI,EAAE,CAAC;QACP,WAAW,EAAE,CAAC;QACd,GAAG,EAAE,CAAC;KACP;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,IAAI;QACd,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;KACZ;IACD,OAAO,EAAE;QACP,gBAAgB,EAAE,IAAI;QACtB,QAAQ,EAAE,KAAK,EAAE,yBAAyB;QAC1C,KAAK,EAAE,KAAK,EAAE,sBAAsB;KACrC;CACF,CAAC","names":[],"sources":["/Users/rodrigo/claude-projects/OmniCare/backend/tests/env.setup.ts"],"sourcesContent":["/**\n * Environment Setup for Backend Tests\n * Configures test environment variables and global settings\n */\n\nimport { config } from 'dotenv';\nimport { join } from 'path';\n\n// Load test environment variables\nconfig({ path: join(__dirname, '..', '.env.test') });\n\n// Set required test environment variables\nprocess.env.NODE_ENV = 'test';\nprocess.env.LOG_LEVEL = 'silent';\nprocess.env.TZ = 'UTC';\n\n// Database configuration for tests\nprocess.env.DB_HOST = process.env.TEST_DB_HOST || 'localhost';\nprocess.env.DB_PORT = process.env.TEST_DB_PORT || '5432';\nprocess.env.DB_NAME = process.env.TEST_DB_NAME || 'omnicare_test';\nprocess.env.DB_USER = process.env.TEST_DB_USER || 'test_user';\nprocess.env.DB_PASSWORD = process.env.TEST_DB_PASSWORD || 'test_password';\n\n// Redis configuration for tests\nprocess.env.REDIS_URL = process.env.TEST_REDIS_URL || 'redis://localhost:6379/1';\nprocess.env.REDIS_TTL = '300';\n\n// JWT configuration for tests\nprocess.env.JWT_SECRET = process.env.TEST_JWT_SECRET || 'test_jwt_secret_key_for_testing_only_do_not_use_in_production';\nprocess.env.JWT_EXPIRATION = '24h';\nprocess.env.JWT_REFRESH_EXPIRATION = '7d';\n\n// FHIR/Medplum configuration for tests\nprocess.env.MEDPLUM_BASE_URL = process.env.TEST_MEDPLUM_BASE_URL || 'https://api.medplum.com/';\nprocess.env.MEDPLUM_CLIENT_ID = process.env.TEST_MEDPLUM_CLIENT_ID || 'test_client_id';\nprocess.env.MEDPLUM_CLIENT_SECRET = process.env.TEST_MEDPLUM_CLIENT_SECRET || 'test_client_secret';\nprocess.env.MEDPLUM_PROJECT_ID = process.env.TEST_MEDPLUM_PROJECT_ID || 'test_project_id';\n\n// External service configuration for tests\nprocess.env.EPIC_FHIR_BASE_URL = 'https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR/R4/';\nprocess.env.CERNER_FHIR_BASE_URL = 'https://fhir-open.cerner.com/r4/';\n\n// Security configuration for tests\nprocess.env.ENCRYPTION_KEY = 'test_encryption_key_32_characters_';\nprocess.env.SESSION_SECRET = 'test_session_secret_for_testing_only';\nprocess.env.BCRYPT_ROUNDS = '1'; // Use minimal rounds for faster tests\n\n// Feature flags for tests\nprocess.env.ENABLE_AUDIT_LOGGING = 'true';\nprocess.env.ENABLE_RATE_LIMITING = 'false';\nprocess.env.ENABLE_CACHING = 'true';\nprocess.env.ENABLE_OFFLINE_MODE = 'true';\n\n// Test-specific settings\nprocess.env.TEST_TIMEOUT = '15000';\nprocess.env.TEST_PARALLEL_WORKERS = '2';\n\n// Suppress specific warnings in test environment\nprocess.env.SUPPRESS_NO_CONFIG_WARNING = 'true';\n\n// Mock external service endpoints\nprocess.env.MOCK_EXTERNAL_SERVICES = 'true';\n\n// Performance settings for tests\nprocess.env.MAX_POOL_SIZE = '5';\nprocess.env.CONNECTION_TIMEOUT = '5000';\nprocess.env.IDLE_TIMEOUT = '10000';\n\n// Set locale for consistent test results\nprocess.env.LANG = 'en_US.UTF-8';\nprocess.env.LC_ALL = 'en_US.UTF-8';\n\n// Disable telemetry in tests\nprocess.env.DISABLE_TELEMETRY = 'true';\nprocess.env.CI = process.env.CI || 'false';\n\n// Console configuration for tests\nif (process.env.SILENT_TESTS !== 'false') {\n  const originalConsole = console;\n  global.console = {\n    ...originalConsole,\n    log: () => {},\n    info: () => {},\n    warn: () => {},\n    error: originalConsole.error, // Keep errors visible\n    debug: () => {},\n  };\n}\n\n// Global test configuration\nglobal.testConfig = {\n  timeouts: {\n    unit: 5000,\n    integration: 15000,\n    e2e: 30000,\n  },\n  retries: {\n    unit: 0,\n    integration: 1,\n    e2e: 2,\n  },\n  cleanup: {\n    database: true,\n    cache: true,\n    files: true,\n  },\n  mocking: {\n    externalServices: true,\n    database: false, // Use real test database\n    cache: false, // Use real test cache\n  },\n};\n\nexport {};"],"version":3}