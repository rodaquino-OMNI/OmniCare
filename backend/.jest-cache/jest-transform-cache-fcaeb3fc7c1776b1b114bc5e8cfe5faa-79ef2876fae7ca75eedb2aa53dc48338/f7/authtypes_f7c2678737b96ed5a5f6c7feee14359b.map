{"file":"/Users/rodrigo/claude-projects/OmniCare/backend/src/types/auth.types.ts","mappings":";AAAA;;;GAGG;;;AAUH,6DAY8B;AAwC5B,gGAnDA,oCAAe,OAmDA;AACf,4FAnDA,gCAAW,OAmDA;AACX,gGAnDA,oCAAe,OAmDA;AACf,4FAnDA,gCAAW,OAmDA;AACX,4FAnDA,gCAAW,OAmDA;AACX,mGAnDA,uCAAkB,OAmDA;AAClB,8FAnDA,kCAAa,OAmDA;AACb,8FAnDA,kCAAa,OAmDA;AACb,mGAnDA,uCAAkB,OAmDA;AAClB,+FAnDA,mCAAc,OAmDA;AACd,0FAnDA,8BAAS,OAmDA;AAGX,IAAY,UAuDX;AAvDD,WAAY,UAAU;IACpB,yBAAyB;IACzB,6DAA+C,CAAA;IAC/C,yDAA2C,CAAA;IAC3C,yDAA2C,CAAA;IAC3C,iEAAmD,CAAA;IAEnD,0BAA0B;IAC1B,2DAA6C,CAAA;IAC7C,2DAA6C,CAAA;IAC7C,uDAAyC,CAAA;IACzC,2DAA6C,CAAA;IAC7C,2DAA6C,CAAA;IAE7C,qBAAqB;IACrB,2DAA6C,CAAA;IAC7C,2DAA6C,CAAA;IAC7C,+DAAiD,CAAA;IACjD,qEAAuD,CAAA;IACvD,qEAAuD,CAAA;IAEvD,yBAAyB;IACzB,6DAA+C,CAAA;IAC/C,mDAAqC,CAAA;IACrC,qDAAuC,CAAA;IACvC,2EAA6D,CAAA;IAE7D,2BAA2B;IAC3B,6DAA+C,CAAA;IAC/C,+CAAiC,CAAA;IACjC,qDAAuC,CAAA;IACvC,mDAAqC,CAAA;IAErC,wBAAwB;IACxB,2CAA6B,CAAA;IAC7B,mDAAqC,CAAA;IACrC,iDAAmC,CAAA;IACnC,mEAAqD,CAAA;IAErD,wBAAwB;IACxB,iEAAmD,CAAA;IACnD,2DAA6C,CAAA;IAC7C,mEAAqD,CAAA;IAErD,oBAAoB;IACpB,2DAA6C,CAAA;IAC7C,+DAAiD,CAAA;IACjD,6DAA+C,CAAA;IAC/C,qEAAuD,CAAA;IAEvD,2BAA2B;IAC3B,mDAAqC,CAAA;IACrC,2DAA6C,CAAA;IAC7C,qDAAuC,CAAA;IACvC,2DAA6C,CAAA;AAC/C,CAAC,EAvDW,UAAU,0BAAV,UAAU,QAuDrB","names":[],"sources":["/Users/rodrigo/claude-projects/OmniCare/backend/src/types/auth.types.ts"],"sourcesContent":["/**\n * OmniCare EMR Backend - Authentication and Authorization Types\n * HIPAA-Compliant Role-Based Access Control System\n */\n\n// Import unified role types for backend use\nimport type { \n  UserRole,\n  UserRoleShort,\n  UserRoleLong,\n  UserRoleUnified\n} from './unified-user-roles';\n\nimport { \n  toCanonicalRole,\n  toShortRole,\n  isCanonicalRole,\n  isShortRole,\n  isValidRole,\n  getRoleDisplayName,\n  hasHigherRole,\n  ROLE_MAPPINGS,\n  ROLE_DISPLAY_NAMES,\n  ROLE_HIERARCHY,\n  UserRoles\n} from './unified-user-roles';\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: UserRole;\n  department?: string;\n  licenseNumber?: string;\n  npiNumber?: string;\n  isActive: boolean;\n  isMfaEnabled: boolean;\n  mfaSecret?: string;\n  lastLogin?: Date;\n  passwordChangedAt: Date;\n  failedLoginAttempts: number;\n  accountLockedUntil?: Date;\n  passwordResetToken?: string;\n  passwordResetExpires?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n  \n  // Additional properties for backend compatibility\n  passwordHash?: string;\n  patient?: string;\n  scope?: string[];\n  clientId?: string;\n}\n\n// Re-export unified role types for backend use\nexport type { \n  UserRole,\n  UserRoleShort,\n  UserRoleLong,\n  UserRoleUnified\n};\n\nexport { \n  toCanonicalRole,\n  toShortRole,\n  isCanonicalRole,\n  isShortRole,\n  isValidRole,\n  getRoleDisplayName,\n  hasHigherRole,\n  ROLE_MAPPINGS,\n  ROLE_DISPLAY_NAMES,\n  ROLE_HIERARCHY,\n  UserRoles\n};\n\nexport enum Permission {\n  // Clinical Documentation\n  CREATE_CLINICAL_NOTES = 'create_clinical_notes',\n  EDIT_CLINICAL_NOTES = 'edit_clinical_notes',\n  VIEW_CLINICAL_NOTES = 'view_clinical_notes',\n  FINALIZE_CLINICAL_NOTES = 'finalize_clinical_notes',\n  \n  // Prescription Management\n  CREATE_PRESCRIPTIONS = 'create_prescriptions',\n  MODIFY_PRESCRIPTIONS = 'modify_prescriptions',\n  VIEW_PRESCRIPTIONS = 'view_prescriptions',\n  VERIFY_PRESCRIPTIONS = 'verify_prescriptions',\n  DISPENSE_MEDICATIONS = 'dispense_medications',\n  \n  // Patient Management\n  VIEW_PATIENT_RECORDS = 'view_patient_records',\n  EDIT_PATIENT_RECORDS = 'edit_patient_records',\n  CREATE_PATIENT_RECORDS = 'create_patient_records',\n  VIEW_PATIENT_DEMOGRAPHICS = 'view_patient_demographics',\n  EDIT_PATIENT_DEMOGRAPHICS = 'edit_patient_demographics',\n  \n  // Orders and Lab Results\n  CREATE_MEDICAL_ORDERS = 'create_medical_orders',\n  VIEW_LAB_RESULTS = 'view_lab_results',\n  ENTER_LAB_RESULTS = 'enter_lab_results',\n  ACKNOWLEDGE_CRITICAL_RESULTS = 'acknowledge_critical_results',\n  \n  // Administrative Functions\n  SCHEDULE_APPOINTMENTS = 'schedule_appointments',\n  MANAGE_BILLING = 'manage_billing',\n  PROCESS_INSURANCE = 'process_insurance',\n  GENERATE_REPORTS = 'generate_reports',\n  \n  // System Administration\n  MANAGE_USERS = 'manage_users',\n  CONFIGURE_SYSTEM = 'configure_system',\n  VIEW_AUDIT_LOGS = 'view_audit_logs',\n  MANAGE_SECURITY_SETTINGS = 'manage_security_settings',\n  \n  // Imaging and Radiology\n  PERFORM_IMAGING_STUDIES = 'perform_imaging_studies',\n  VIEW_IMAGING_RESULTS = 'view_imaging_results',\n  MANAGE_IMAGING_EQUIPMENT = 'manage_imaging_equipment',\n  \n  // Nursing Functions\n  DOCUMENT_VITAL_SIGNS = 'document_vital_signs',\n  ADMINISTER_MEDICATIONS = 'administer_medications',\n  DOCUMENT_NURSING_CARE = 'document_nursing_care',\n  MANAGE_PATIENT_CARE_PLANS = 'manage_patient_care_plans',\n  \n  // Patient Portal Functions\n  VIEW_OWN_RECORDS = 'view_own_records',\n  REQUEST_APPOINTMENTS = 'request_appointments',\n  MESSAGE_CARE_TEAM = 'message_care_team',\n  UPDATE_PERSONAL_INFO = 'update_personal_info'\n}\n\nexport interface RolePermissions {\n  role: UserRole;\n  permissions: Permission[];\n  description: string;\n  restrictions?: string[];\n}\n\nexport interface AuthToken {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  tokenType: 'Bearer';\n}\n\nexport interface LoginCredentials {\n  username: string;\n  password: string;\n  mfaToken?: string;\n}\n\nexport interface MfaSetup {\n  secret: string;\n  qrCode: string;\n  backupCodes: string[];\n}\n\nexport interface PasswordPolicy {\n  minLength: number;\n  requireUppercase: boolean;\n  requireLowercase: boolean;\n  requireNumbers: boolean;\n  requireSpecialChars: boolean;\n  preventReuse: number;\n  maxAgeInDays: number;\n  lockoutThreshold: number;\n  lockoutDurationMinutes: number;\n}\n\nexport interface SessionInfo {\n  userId: string;\n  sessionId: string;\n  role: UserRole;\n  permissions: Permission[];\n  ipAddress: string;\n  userAgent: string;\n  lastActivity: Date;\n  expiresAt: Date;\n}\n\nexport interface AuditLogEntry {\n  id: string;\n  userId: string;\n  action: string;\n  resource: string;\n  resourceId?: string;\n  ipAddress: string;\n  userAgent: string;\n  timestamp: Date;\n  success: boolean;\n  errorMessage?: string;\n  additionalData?: Record<string, any>;\n}\n\nexport interface SecurityEvent {\n  type: 'LOGIN_SUCCESS' | 'LOGIN_FAILURE' | 'LOGOUT' | 'PASSWORD_CHANGE' | \n        'MFA_ENABLED' | 'MFA_DISABLED' | 'ACCOUNT_LOCKED' | 'UNAUTHORIZED_ACCESS' |\n        'DATA_ACCESS' | 'DATA_MODIFICATION' | 'SYSTEM_CONFIGURATION_CHANGE';\n  userId?: string;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  description: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface ComplianceReport {\n  reportId: string;\n  reportType: 'HIPAA_ACCESS_LOG' | 'USER_ACTIVITY' | 'SECURITY_INCIDENTS' | 'PASSWORD_COMPLIANCE';\n  generatedBy: string;\n  dateRange: {\n    start: Date;\n    end: Date;\n  };\n  data: any[];\n  summary: Record<string, any>;\n  createdAt: Date;\n}\n"],"version":3}