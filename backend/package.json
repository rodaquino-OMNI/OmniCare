{
  "name": "omnicare-backend",
  "version": "1.0.0",
  "description": "OmniCare EMR FHIR Backend Integration",
  "main": "dist/index.js",
  "scripts": {
    "start": "node dist/index.js",
    "dev": "nodemon src/index.ts",
    "build": "npm run clean:dist && tsc --build --incremental && tsc-alias",
    "build:fast": "tsc --build --incremental --skipLibCheck && tsc-alias",
    "build:production": "npm run clean:dist && tsc --build --skipLibCheck && tsc-alias && npm run optimize:dist",
    "test": "./scripts/run-tests-with-docker-check.sh all --cache --maxWorkers=75%",
    "test:watch": "jest --watch --maxWorkers=50% --cache --onlyChanged",
    "test:coverage": "jest --coverage --maxWorkers=75% --cache --collectCoverageOnlyFrom=changed-files",
    "test:unit": "./scripts/run-tests-with-docker-check.sh unit",
    "test:integration": "./scripts/run-tests-with-docker-check.sh integration",
    "test:e2e": "./scripts/run-tests-with-docker-check.sh e2e",
    "test:unit:direct": "jest --testPathPattern=unit --maxWorkers=50%",
    "test:integration:direct": "jest --testPathPattern=integration --maxWorkers=1",
    "test:performance": "jest --testPathPattern=performance",
    "test:load": "artillery run tests/performance/load-tests/artillery-config.yml",
    "test:stress": "artillery run tests/performance/stress-tests/stress-config.yml",
    "test:ci": "npm run lint && npm run typecheck && npm run test:coverage",
    "test:compliance": "jest --testPathPattern=compliance",
    "test:security": "jest --testPathPattern=security",
    "benchmark": "node tests/performance/benchmarks/benchmark-runner.js",
    "monitor": "node tests/performance/monitoring/performance-monitor.js",
    "typecheck": "tsc --noEmit --incremental --skipLibCheck",
    "lint": "eslint src/**/*.ts tests/**/*.ts --cache --max-warnings=0",
    "lint:fix": "eslint src/**/*.ts tests/**/*.ts --cache --fix",
    "lint:security": "eslint src/**/*.ts tests/**/*.ts --config .eslintrc.security.js",
    "format": "prettier --write src/**/*.ts tests/**/*.ts",
    "db:migrate": "echo 'Database migrations would run here'",
    "db:seed": "echo 'Database seeding would run here'",
    "db:test:setup": "./scripts/setup-test-db.sh start",
    "db:test:stop": "./scripts/setup-test-db.sh stop",
    "db:test:restart": "./scripts/setup-test-db.sh restart",
    "db:test:status": "./scripts/setup-test-db.sh status",
    "db:test:logs": "./scripts/setup-test-db.sh logs",
    "db:test:verify": "ts-node ./scripts/verify-test-db.ts",
    "clean:dist": "rm -rf dist",
    "clean:cache": "rm -rf node_modules/.cache .eslintcache tsconfig.tsbuildinfo",
    "optimize:dist": "echo 'Optimizing build output' && find dist -name '*.js' -exec sed -i '' 's/console\\\\.debug.*;//g' {} \\\\;",
    "build:analyze": "npm run build && bundlesize",
    "performance:build": "time npm run build:production",
    "db:test": "ts-node src/scripts/test-db-connection.ts",
    "db:helper": "./scripts/test-db-helper.sh",
    "check:docker": "./scripts/check-docker.sh",
    "check:env": "./scripts/pre-test-check.sh",
    "docker:test:up": "docker compose -f docker/docker-compose.yml up -d omnicare-test-db omnicare-test-redis",
    "docker:test:down": "docker compose -f docker/docker-compose.yml down",
    "docker:test:logs": "docker compose -f docker/docker-compose.yml logs -f",
    "docker:test:ps": "docker compose -f docker/docker-compose.yml ps",
    "pretest": "./scripts/pre-test-check.sh || true",
    "test:db": "MOCK_DATABASE=false npm run test:integration",
    "test:debug": "node --inspect-brk ./node_modules/.bin/jest --runInBand"
  },
  "dependencies": {
    "@medplum/core": "^4.3.0",
    "@medplum/fhirtypes": "^4.3.0",
    "@types/cookie-parser": "^1.4.9",
    "axios": "^1.6.0",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^5.1.0",
    "express-rate-limit": "^7.5.1",
    "express-validator": "^7.2.1",
    "fhir": "^4.11.1",
    "helmet": "^7.1.0",
    "http-proxy-middleware": "^3.0.5",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^2.0.1",
    "node-cron": "^3.0.3",
    "pg": "^8.16.3",
    "redis": "^4.6.10",
    "reflect-metadata": "^0.2.2",
    "typeorm": "^0.3.25",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "ws": "^8.18.3",
    "zod": "^3.25.68"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@pact-foundation/pact": "^15.0.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.1",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.13",
    "@types/node": "^24.0.10",
    "@types/node-cron": "^3.0.11",
    "@types/pg": "^8.10.7",
    "@types/pidusage": "^2.0.5",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^9.0.8",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "@typescript-eslint/parser": "^8.35.1",
    "artillery": "^2.0.23",
    "autocannon": "^7.15.0",
    "eslint": "^8.54.0",
    "eslint-plugin-security": "^1.7.1",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-html-reporter": "^3.10.2",
    "jest-junit": "^16.0.0",
    "jest-mock": "^29.7.0",
    "nock": "^13.4.0",
    "nodemon": "^3.0.1",
    "pidusage": "^3.0.2",
    "pino": "^8.21.0",
    "prettier": "^3.6.2",
    "supertest": "^6.3.3",
    "testcontainers": "^10.4.0",
    "ts-jest": "^29.1.1",
    "tsc-alias": "^1.8.16",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.3",
    "ws": "^8.14.2"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
